% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qc_completeness.R
\name{qc_completeness}
\alias{qc_completeness}
\title{Run quality control completeness checks for water quality monitoring results}
\usage{
qc_completeness(res, dqocom, runchk = TRUE, warn = TRUE)
}
\arguments{
\item{res}{character string of path to eresults file or \code{data.frame} for results returned by \code{\link{read_results}}}

\item{dqocom}{character string of path to the data quality objectives file for completeness or \code{data.frame} returned by \code{\link{read_dqocompleteness}}}

\item{runchk}{logical to run data checks with \code{\link{check_results}} and \code{\link{check_dqocompleteness}}, applies only if \code{res} or \code{dqocom} are file paths}

\item{warn}{logical to return warnings to the console (default)}
}
\value{
A summarized \code{data.frame} of completeness results for quality control
}
\description{
Run quality control completeness checks for water quality monitoring results
}
\details{
The function can be used with inputs as paths to the relevant files or as data frames returned by \code{\link{read_results}} and \code{\link{read_dqocompleteness}}.  For the former, the full suite of data checks can be evaluated with \code{runkchk = T} (default) or suppressed with \code{runchk = F}.  In the latter case, downstream analyses may not work if date are not correctly.

Note that completeness is only evaluated on parameters in the \code{Parameter} column in the data quality objectives completeness file.  A warning is returned if there are parameters in that column that are not found in the results file.
}
\examples{
##
# using file paths

# results path
respth <- system.file('extdata/ExampleResults_final.xlsx', package = 'MassWateR')

# completeness path
dqocompth <- system.file('extdata/ExampleDQOCompleteness_final.xlsx', package = 'MassWateR')

qc_completeness(res = respth, dqocom = dqocompth)

##
# using data frames

# results data
resdat <- read_results(respth)

# completeness data
dqocomdat <- read_dqocompleteness(dqocompth)

qc_completeness(res = resdat, dqocom = dqocomdat)

}
