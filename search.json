[{"path":[]},{"path":"https://massbays-tech.github.io/MassWateR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement mbafs2012@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to MassWateR","title":"Contributing to MassWateR","text":"outlines propose change MassWateR. detailed info contributing , packages, please see development contributing guide.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to MassWateR","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to MassWateR","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to MassWateR","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"massbays-tech/MassWateR\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to MassWateR","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to MassWateR","text":"Please note MassWateR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":[]},{"path":"https://massbays-tech.github.io/MassWateR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/articles/MassWateR.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"MassWateR data input and checks","text":"MassWateR R package developed work surface water monitoring data collected watershed associations citizen science groups Massachusetts. package created collaboration Massachusetts Bays National Estuary Partnership funding EPA Exchange Network Grant. objective package automate facilitate quality control exploratory analysis data intended upload EPA Water Quality Exchange (WQX). functions provide streamlined repeatable means 1) screening data quality control, 2) interpreting data, 3) creating graphics analysis reports stakeholders. Miscellaneous formatting tools also available facilitate data upload WQX. functions organized around topics, shown . Functions MassWateR organized around topics. Three types data used package. types provided make best use functions: Water quality results organized sample location date. Summary data quality objectives describe quality control accuracy, frequency, completeness measures data results file. site metadata file, including location names, latitude, longitude, additional grouping factors sites. input data follow standard formats WQX network. Example files, described , provided package demonstrate appropriate formats.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/articles/MassWateR.html","id":"installation-and-example-data-files","dir":"Articles","previous_headings":"","what":"Installation and example data files","title":"MassWateR data input and checks","text":"Install package follows: Load package R session installation: example files package can viewed navigating location package installation. available Excel files. Running code show files located. surface water quality results files: data quality objectives file accuracy: data quality objectives file completeness: site metadata file: example files provided demonstrate functions MassWateR used. practice, alternative data files follow format examples used functions. several checks included data import functions ensure files formatted correctly downstream use. checks fail, error message returned prompts necessary changes must made Excel file data can used. checks can suppressed setting runchk = FALSE import functions. checks described next section.","code":"# Enable universe(s) by massbays-tech options(repos = c(   massbaystech = \"https://massbays-tech.r-universe.dev\",   CRAN = \"https://cloud.r-project.org\"))  # Install the package install.packages(\"MassWateR\") library(MassWateR) system.file(\"extdata/ExampleResults.xlsx\", package = \"MassWateR\") system.file(\"extdata/ExampleDQOAccuracy.xlsx\", package = \"MassWateR\") system.file(\"extdata/ExampleDQOFrequencyCompleteness.xlsx\", package = \"MassWateR\") system.file(\"extdata/ExampleSites.xlsx\", package = \"MassWateR\")"},{"path":"https://massbays-tech.github.io/MassWateR/articles/MassWateR.html","id":"data-import-and-checks","dir":"Articles","previous_headings":"","what":"Data import and checks","title":"MassWateR data input and checks","text":"MassWateR package developed quality control exploratory analysis surface water quality data. analyses can occur, data must formatted correctly. section describes import data expectations checked automatically functions. many checks, parameter names units need match following columns paramsMWR file included package. Specifically parameter names (either Characteristic Name results file, Parameter data quality objectives files) can simple WQX format . units can apply given parameter, although one allowed per parameter. entries case-sensitive.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/articles/MassWateR.html","id":"surface-water-quality-results","dir":"Articles","previous_headings":"Data import and checks","what":"Surface water quality results","title":"MassWateR data input and checks","text":"First, surface water quality results can imported readMWRresults() function. designed import Excel file external R, run checks data, provide minor formatting downstream quality control exploratory analysis. example, system file ExampleResults.xlsx imported. practice, pth argument point external file WQX format. Note runchk = TRUE set run checks data import. default setting necessary explicitly set argument import. Several checks run automatically data imported. file checks follows (also viewed help file checkMWRresults(): Column name spelling: following: Monitoring Location ID, Activity Type, Activity Start Date, Activity Start Time, Activity Depth/Height Measure, Activity Depth/Height Unit, Activity Relative Depth Name, Characteristic Name, Result Value, Result Unit, Quantitation Limit, QC Reference Value, Result Measure Qualifier, Result Attribute. Columns present: columns previous present, Result Attribute optional Activity Type: one Field Msr/Obs, Sample-Routine, Quality Control Sample-Field Blank, Quality Control Sample-Lab Blank, Quality Control Sample-Lab Duplicate, Quality Control Sample-Lab Spike, Quality Control Field Calibration Check Date formats: mm/dd/yyyy parsed correctly import Time formats: HH:MM parsed correctly import, missing entries okay Non-numeric Activity Depth/Height Measure: depth values numbers, excluding missing values Activity Depth/Height Unit: entries ft, m, blank Activity Depth/Height Measure range: depth values less equal 1 meter 3.3 feet (warning ) Activity Relative Depth Name: either Surface, Bottom, Midwater, Near Bottom, blank (warning ) Characteristic Name: match parameter names Simple Parameter WQX Parameter column paramsMWR data (warning ) Result Value: numeric value text value AQL BDL QC Reference Value: entered values numeric text value AQL BDL Result Unit: missing entries Result Unit, except pH can blank Single Result Unit: unique parameter Characteristic Name one entry Result Unit Correct Result Unit: unique parameter Characteristic Name entry Result Unit matches one acceptable values Units measure column paramsMWR data, see table . informative error returned input data fail checks. input data corrected hand Excel file altering appropriate rows column names indicated error. Checks warnings can fixed discretion user proceeding. example error might returned incorrect data entry (using checkMWRresults() function, used inside readMWRresults()). remedy issue, change entries row 4 135 Activity Type column Sample-Routine Field Msr/Obs, respectively. must done original Excel file. Import data R verify data corrected. Data imported readMWRresults() also formatted address minor issues downstream analysis. formatting includes: Fix date time inputs: Activity Start Date converted YYYY-MM-DD date object, Activity Start Time converted HH:MM character fix artifacts Excel import. Minor formatting Result Unit: conformance WQX, e.g., ppt changed ppth, s.u. changed NA. Convert characteristic names: parameters Characteristic Name converted Simple Parameter paramsMWR needed.","code":"respth <- system.file(\"extdata/ExampleResults.xlsx\", package = \"MassWateR\") resdat <- readMWRresults(respth, runchk = TRUE) #> Running checks on results data... #>  Checking column names... OK #>  Checking all required columns are present... OK #>  Checking valid Activity Types... OK #>  Checking Activity Start Date formats... OK #>  Checking Activity Start Time formats... OK #>  Checking for non-numeric values in Activity Depth/Height Measure... OK #>  Checking Activity Depth/Height Unit... OK #>  Checking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #>  Checking Activity Relative Depth Name formats... OK #> Warning:     Checking Characteristic Name formats... #>  Characteristic Name not used for quality control: Air Temp, Gage #>  Checking Characteristic Name formats... WARNING #>  Checking Result Values... OK #>  Checking QC Reference Values... OK #>  Checking for missing entries for Result Unit... OK #>  Checking if more than one unit per Characteristic Name... OK #>  Checking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))! head(resdat) #> # A tibble: 6 × 14 #>   Monitorin…¹ Activ…² Activity…³ Activ…⁴ Activ…⁵ Activ…⁶ Activ…⁷ Chara…⁸ Resul…⁹ #>   <chr>       <chr>   <date>     <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 HBS-016     Field … 2021-01-14 09:22   3       ft      NA      Air Te… 2       #> 2 LND-007     Field … 2021-01-14 09:50   3       ft      NA      Air Te… 2       #> 3 HBS-031     Field … 2021-01-14 10:05   3       ft      NA      Air Te… 2       #> 4 HBS-057     Field … 2021-01-14 10:30   3       ft      NA      Air Te… 3       #> 5 HBS-065     Field … 2021-01-14 10:40   3       ft      NA      Air Te… 3       #> 6 CRN-002     Field … 2021-01-14 11:30   3       ft      NA      Air Te… 2       #> # … with 5 more variables: `Result Unit` <chr>, `Quantitation Limit` <chr>, #> #   `QC Reference Value` <chr>, `Result Measure Qualifier` <chr>, #> #   `Result Attribute` <chr>, and abbreviated variable names #> #   ¹​`Monitoring Location ID`, ²​`Activity Type`, ³​`Activity Start Date`, #> #   ⁴​`Activity Start Time`, ⁵​`Activity Depth/Height Measure`, #> #   ⁶​`Activity Depth/Height Unit`, ⁷​`Activity Relative Depth Name`, #> #   ⁸​`Characteristic Name`, ⁹​`Result Value` chk <- resdat chk[4, 2] <- \"Sample\" chk[135, 2] <- \"Field\" checkMWRresults(chk) #> Running checks on results data... #>  Checking column names... OK #>  Checking all required columns are present... OK #> Error:   Checking valid Activity Types... #>  Incorrect Activity Type found: Sample, Field in row(s) 4, 135"},{"path":"https://massbays-tech.github.io/MassWateR/articles/MassWateR.html","id":"data-quality-objectives","dir":"Articles","previous_headings":"Data import and checks","what":"Data quality objectives","title":"MassWateR data input and checks","text":"use quality control functions MassWateR, Excel files describe data quality objectives accuracy, frequency, completeness must provided. system files included package, described , demonstrate required information format files. can imported R using readMWRacc() readMWRfrecom() functions accuracy, frequency, completeness files. pth argument point location external files computer. , system files included package used examples. readMWRacc() readMWRfrecom() functions run series checks ensure imported data formatted correctly. checkMWRacc() checkMWRfrecom() functions run checks readMWRacc() readMWRfrecom() functions executed, respectively. checks follows. File checks accuracy: Column name spelling: following: Parameter, uom, MDL, UQL, Value Range, Field Duplicate, Lab Duplicate, Field Blank, Lab Blank, Spike/Check Accuracy Columns present: columns previous check present Column types: columns characters/text, except MDL UQL Unrecognized characters: Fields describing accuracy checks include symbols text \\(<=\\), \\(\\leq\\), \\(<\\), \\(>=\\), \\(\\geq\\), \\(>\\), \\(\\pm\\) %, BDL, AQL, log, Parameter: match parameter names Simple Parameter WQX Parameter columns paramsMWR data Units: missing entries units (uom), except pH can blank Single unit: unique Parameter one type units (uom) Correct units: unique Parameter entry units (uom) matches one acceptable values Units measure column paramsMWR data, see table . File checks frequency completeness: Column name spelling: following: Parameter, Field Duplicate, Lab Duplicate, Field Blank, Lab Blank, Spike/Check Accuracy, % Completeness Columns present: columns previous check present Non-numeric values: Values entered columns first numeric Values outside 0 - 100: Values entered columns first outside 0 100 Parameter: match parameter names Simple Parameter WQX Parameter columns paramsMWR data Minor formatting input files also done address minor issues downstream analysis. formatting includes: Minor formatting units: conformance WQX, e.g., ppt changed ppth, s.u. changed NA uom column (readMWRacc() ). Convert parameter names: parameters Parameter converted Simple Parameter paramsMWR needed. Remove unicode: Remove replace unicode characters can used logical expressions qcMWRacc(), e.g., replace \\(\\geq\\) \\(>=\\).","code":"# import data quality objectives for accuracy accpth <- system.file(\"extdata/ExampleDQOAccuracy.xlsx\", package = \"MassWateR\") accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #>  Checking column names... OK #>  Checking all required columns are present... OK #>  Checking column types... OK #>  Checking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #>  Checking Parameter formats... OK #>  Checking for missing entries for unit (uom)... OK #>  Checking if more than one unit (uom) per Parameter... OK #>  Checking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed! head(accdat) #> # A tibble: 6 × 10 #>   Parameter    uom     MDL   UQL Value…¹ Field…² Lab D…³ Field…⁴ Lab B…⁵ Spike…⁶ #>   <chr>        <chr> <dbl> <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 Water Temp   deg C  NA      NA all     <= 10%  <= 10%  NA      NA      NA      #> 2 pH           NA     NA      NA all     <= 0.5  <= 0.5  NA      NA      <= 0.2  #> 3 DO           mg/l    0.1    NA < 4     <= 20%  <= 20%  < 0.1   < 0.1   <= 5%   #> 4 DO           mg/l    0.1    NA >= 4    <= 10%  <= 10%  < 0.1   < 0.1   <= 5%   #> 5 Sp Conducta… uS/cm   1      NA < 250   <= 30%  <= 20%  < 25    < 25    <= 50   #> 6 Sp Conducta… uS/cm   1      NA >= 250  <= 20%  <= 10%  < 25    < 25    <= 50   #> # … with abbreviated variable names ¹​`Value Range`, ²​`Field Duplicate`, #> #   ³​`Lab Duplicate`, ⁴​`Field Blank`, ⁵​`Lab Blank`, ⁶​`Spike/Check Accuracy` # import data quality objectives for frequency and completeness frecompth <- system.file(\"extdata/ExampleDQOFrequencyCompleteness.xlsx\", package = \"MassWateR\") frecomdat <- readMWRfrecom(frecompth) #> Running checks on data quality objectives for frequency and completeness... #>  Checking column names... OK #>  Checking all required columns are present... OK #>  Checking for non-numeric values... OK #>  Checking for values outside of 0 and 100... OK #>  Checking Parameter formats... OK #>  #> All checks passed! head(frecomdat) #> # A tibble: 6 × 7 #>   Parameter    `Field Duplicate` `Lab Duplicate` Field…¹ Lab B…² Spike…³ % Com…⁴ #>   <chr>                    <dbl>           <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #> 1 Water Temp                  10              10      NA      NA      NA      90 #> 2 pH                          10              10      NA      NA      10      90 #> 3 DO                          10              10      NA      10      10      90 #> 4 Conductivity                10              10      NA      10      10      90 #> 5 TSS                         10               5      10       5       5      90 #> 6 TP                          10               5      10       5       5      90 #> # … with abbreviated variable names ¹​`Field Blank`, ²​`Lab Blank`, #> #   ³​`Spike/Check Accuracy`, ⁴​`% Completeness`"},{"path":"https://massbays-tech.github.io/MassWateR/articles/MassWateR.html","id":"site-metadata","dir":"Articles","previous_headings":"Data import and checks","what":"Site metadata","title":"MassWateR data input and checks","text":"Excel file site metadata describes spatial location grouping factors sites results file can imported using readMWRsites(). system file included package, described , demonstrates required information format file. pth argument point location external file computer. , system file included package used example. readMWRsites() functions runs several checks file using checkMWRsites() function. checks ensure latitude longitude data present properly formatted. assumed latitude longitude data entered decimal degrees. projection can entered functions used exploratory analysis. Details file checks follows: Column name spelling: following: Monitoring Location ID, Monitoring Location Name, Monitoring Location Latitude, Monitoring Location Longitude, Location Group Columns present: columns previous check present Missing longitude latitude: missing entries Monitoring Location Latitude Monitoring Location Longitude Non-numeric latitude values: Values entered Monitoring Location Latitude must numeric Non-numeric longitude values: Values entered Monitoring Location Longitude must numeric Positive longitude values: Values Monitoring Location Longitude must negative Missing Location ID: missing entries Monitoring Location ID","code":"# import site metadata sitpth <- system.file(\"extdata/ExampleSites.xlsx\", package = \"MassWateR\") sitdat <- readMWRsites(sitpth) #> Running checks on site metadata... #>  Checking column names... OK #>  Checking all required columns are present... OK #>  Checking for missing latitude or longitude values... OK #>  Checking for non-numeric values in latitude... OK #>  Checking for non-numeric values in longitude... OK #>  Checking for positive values in longitude... OK #>  Checking for missing entries for Monitoring Location ID... OK #>  #> All checks passed! head(sitdat) #> # A tibble: 6 × 5 #>   `Monitoring Location ID` `Monitoring Location Name`    Monit…¹ Monit…² Locat…³ #>   <chr>                    <chr>                           <dbl>   <dbl> <chr>   #> 1 ABT-010                  477 Lowell Rd, Concord           42.5   -71.4 Lower … #> 2 ABT-026                  Rte 2, Concord                   42.5   -71.4 Lower … #> 3 ABT-033                  Rte 62, W Concord                42.5   -71.4 Lower … #> 4 ABT-044                  Rte 62 (Damonmill), W Concord    42.5   -71.4 Lower … #> 5 ABT-047                  Damonmill dam                    42.5   -71.4 Lower … #> 6 ABT-062                  Rte 62, Acton                    42.4   -71.4 Lower … #> # … with abbreviated variable names ¹​`Monitoring Location Latitude`, #> #   ²​`Monitoring Location Longitude`, ³​`Location Group`"},{"path":"https://massbays-tech.github.io/MassWateR/articles/analysis.html","id":"analyze-seasonal-trends","dir":"Articles","previous_headings":"","what":"Analyze seasonal trends","title":"MassWateR analyses","text":"Seasonal trends can evaluated using anlzMWRseason() function. function summarizes results single parameter using boxplots barplots seasonal groups assigned months weeks year. Boxplots barplots can also include jittered points observations top jittered points can shown. Threshold lines also shown plot determine results near thresholds interest. data plotted can filtered sites, dates, result attributes, location groups (site metadata file). anlzMWRseason() function uses results data file path data frame input. , results dissolved oxygen (param = \"\") grouped month using group = \"month\" boxplots using type = \"box\". description summary statistics shown boxplot provided outlier checks vignette. relevant threshold lines freshwater environments shown using thresh = \"fresh\".  Jittered points boxplots can shown setting type = \"jitterbox\".  data can also grouped week using group = \"week\". week year shown plot integer. Note can common month/day indicating start week years integer way compare summaries results data span multiple years.  Barplots can shown using type = \"bar\". barplots show average estimate results defined group argument.  Confidence intervals 95% barplots can shown setting confint = TRUE.  Jittered points barplots can shown setting type = \"jitterbar\".  Setting type = \"jitter\" show jittered points.  threshold lines shown plot determined thresholdMWR file included MassWateR. threshold lines describe relevant state standards typical ranges Massachusetts, applicable parameter. Thresholds can plotted freshwater marine environments using thresh argument thresh = \"fresh\" thresh = \"marine\", respectively. Two threshold lines typically shown, whereas parameters may one threshold line. parameters information thresholdMWR file lines plotted. Threshold lines can suppressed setting thresh = \"none\". , marine thresholds shown dissolved oxygen using barplot option grouped month.  y-axis scaling arithmetic (linear) logarithmic can set yscl argument. yscl = \"auto\" (default), scaling determined automatically data quality objective file accuracy, .e., parameters “log” columns plotted log10-scale, otherwise arithmetic. Setting yscl = \"linear\" yscl = \"log\" set axis linear log10-scale, respectively, regardless information data quality objective file accuracy. , axis E. Coli plotted log-10 scale automatically. y-axis scaling need specified explicitly function call default setting yscl = \"auto\".  force y-axis linear E. Coli, yscl = \"linear\" must used. Note default linear scaling dissolved oxygen determined automatically. means confidence intervals also vary arithmetic log-scaling type = \"bar\".  Results can also filtered dates using dtrng argument. date format must YYYY-MM-DD include two entries.  Finally, results can filtered sites, result attributes, location groups using site, resultatt, locgroup arguments. options filter results data based values Monitoring Location ID Result Attribute columns results file Location Group column site metadata file, must provided sit argument locgroup used.","code":"anlzMWRseason(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", group = \"month\", type = \"box\") anlzMWRseason(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", group = \"month\", type = \"jitterbox\") anlzMWRseason(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", group = \"week\", type = \"box\") anlzMWRseason(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", group = \"month\", type = \"bar\") anlzMWRseason(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", group = \"month\", type = \"bar\", confint = TRUE) anlzMWRseason(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", group = \"month\", type = \"jitterbar\") anlzMWRseason(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", group = \"month\", type = \"jitter\") anlzMWRseason(res = resdat, param = \"DO\", acc = accdat, thresh = \"marine\", group = \"month\", type = \"bar\") anlzMWRseason(res = resdat, param = \"E.coli\", acc = accdat, thresh = \"fresh\", group = \"month\", type = \"bar\") anlzMWRseason(res = resdat, param = \"E.coli\", acc = accdat, thresh = \"fresh\", group = \"month\", type = \"bar\", yscl = \"linear\") anlzMWRseason(res = resdat, param = \"E.coli\", acc = accdat, thresh = \"fresh\", group = \"month\", type = \"bar\", dtrng = c(\"2021-05-01\", \"2021-07-31\")) anlzMWRseason(res = resdat, param = \"E.coli\", acc = accdat, sit = sitdat, thresh = \"fresh\", group = \"month\", site = \"ABT-077\", resultatt = \"Dry\", locgroup = \"Lower Assabet\")"},{"path":"https://massbays-tech.github.io/MassWateR/articles/analysis.html","id":"analyze-trends-by-date","dir":"Articles","previous_headings":"","what":"Analyze trends by date","title":"MassWateR analyses","text":"Trends date selected parameters can evaluated using anlzMWRdate() function. plot shows results continuously time line plots, lines separated site, combined across sites, combined across location groups average 95% confidence intervals. location groups, site metadata file must supplied. Many options described anlzMWRseason() function also apply repeated . , required data results file data quality objective file accuracy. default plot anlzMWRdate() show separate lines site, y-axis scaling determined automatically data quality objectives file, site labels end line. sites results file plotted, can difficult visualize. Selecting specific sites site argument recommended.  color legend sites can included setting colleg = TRUE.  results averaged across selected sites can plotted using group = \"\".  results averaged across sites results file can plotted omitting site argument.  Confidence intervals 95% points can shown group = \"\" \"locgroup\" setting confint = TRUE.  Sites can averaged across location groups using group = \"locgroup\". option requires site metadata file passed sit argument appropriate values location groups passed locgroup argument match values Location Group column site metadata file.  location groups can used locgroup argument omitted.","code":"anlzMWRdate(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", group = \"site\", site = c(\"ABT-026\", \"ABT-077\")) anlzMWRdate(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", group = \"site\", site = c(\"ABT-026\", \"ABT-077\"),             colleg = T) anlzMWRdate(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", group = \"all\", site = c(\"ABT-026\", \"ABT-077\")) anlzMWRdate(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", group = \"all\") anlzMWRdate(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", group = \"all\", confint = TRUE) anlzMWRdate(res = resdat, param = 'DO', acc = accdat, sit = sitdat, group = 'locgroup',        thresh = 'fresh', locgroup = c('Lower Assabet', 'Upper Assabet')) anlzMWRdate(res = resdat, param = 'DO', acc = accdat, sit = sitdat, group = 'locgroup',        thresh = 'fresh')"},{"path":"https://massbays-tech.github.io/MassWateR/articles/analysis.html","id":"analyze-data-by-site","dir":"Articles","previous_headings":"","what":"Analyze data by site","title":"MassWateR analyses","text":"Result data site selected parameters can evaluated using anlzMWRsite() function. function summarizes results single parameter using boxplots barplots separately site x-axis. Boxplots barplots can also include jittered points observations top jittered points can shown. Many options described anlzMWRseason() function also apply repeated . , required data results file data quality objective file accuracy. default plot anlzMWRsite() show boxplots results site y-axis scaling determined automatically data quality objectives file.  Jittered points boxplots can shown setting type = \"jitterbox\".  Results barplots can shown using type = \"bar\".  Confidence intervals 95% barplots can shown setting confint = TRUE.  Jittered points barplots can shown setting type = \"jitterbar\".  Setting type = \"jitter\" show jittered points.  Results can grouped entries Result Atribute column using byresultatt = TRUE. example, sites E. coli samples can grouped \"Dry\" \"Wet\" conditions. Filtering sites first using site argument advised reduce amount data plotted. grouping can filtered passing appropriate values Result Attribute column resultatt argument. Note specifying result attributes resultatt setting byresultatt = FALSE filter plot data result attributes plot results separately.","code":"anlzMWRsite(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", type = \"box\") anlzMWRsite(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", type = \"jitterbox\") anlzMWRsite(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", type = \"bar\") anlzMWRsite(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", type = \"bar\", confint = TRUE) anlzMWRsite(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", type = \"jitterbar\") anlzMWRsite(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", type = \"jitter\") anlzMWRsite(res = resdat, param = \"E.coli\", acc = accdat, thresh = \"fresh\", type = \"box\",                          site = c(\"ABT-077\", \"ABT-162\", \"CND-009\", \"CND-110\", \"HBS-016\", \"HBS-031\"),                         resultatt = c('Dry', 'Wet'), byresultatt = TRUE)"},{"path":"https://massbays-tech.github.io/MassWateR/articles/analysis.html","id":"analyze-results-with-maps","dir":"Articles","previous_headings":"","what":"Analyze results with maps","title":"MassWateR analyses","text":"anlzMWRmap() function can used create map summarized results selected parameter monitoring site. default, dates parameter averaged. Options filter site, date range, result attribute provided. sites spatial information site metadata file plotted warning returned information. site labels also plotted next point. map dissolved oxygen averages across dates can created follows. required inputs results data, data quality objective file accuracy, site metadata file site locations. warning message indicates sites results file spatial data site metadata file.  default, lines polygons natural water bodies defined using National Hydrography Dataset (NHD) plotted using addwater = \"nhd\" argument. included data files package pondsMWR, riversMWR, streamsMWR. level detail water bodies defined dLevel argument \"low\", \"medium\" (default), \"high\". detail level applies NHD data. Water body detail low:  Water body detail high:  Using addwater = \"osm\" include lines polygons natural water bodies OpenStreetMap (OSM) project, downloaded using osmdata package. Using addwater = \"nhd\" may preferred accurate display water bodies Massachusetts, whereas addwater = \"osm\" include water bodies outside state. Use addwater = NULL suppress . Using addwater = \"osm\" (warnings suppressed):  north arrow, scale bar, labels also plotted. can suppressed setting appropriate arguments NULL.  Locations north arrow scale bar can changed arguments specifying \"tl\", \"tr\", \"bl\", \"br\" top-left, top-right, bottom-left, bottom-right.  latitude longitude text plot axes can suppressed using latlon = FALSE.  color palette average values can also changed. palette RColorBrewer can used.  buffered distance around points can increased uzing buffdist argument.  base map can included well using maptype argument. Options include stamen map \"terrain\", \"terrain-background\" (default), \"terrain-labels\", \"terrain-lines\", \"toner\", \"toner-2010\", \"toner-2011\", \"toner-background\", \"toner-hybrid\", \"toner-labels\", \"toner-lines\", \"toner-lite\", \"watercolor\". zoom argument can helpful using basemap. default zoom argument set 11 decreasing number download base map lower resolution. can decrease map processing times large areas. \"terrain\" base map:  \"terrain-lines\" base map:  \"toner\" base map:  \"toner-labels\" base map:  \"watercolor\" base map:  map base map water bodies:","code":"anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, addwater = \"nhd\") #> Warning in anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, : #> No spatial information for sites: CND-036, HBS-031, HBS-057, HBS-057P, HBS-076, #> HBS-080P, HBS-085, HBS-088P, HBS-095P, HBS-098, LND-007, SUD-236, SUD-293 anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, addwater = \"nhd\", dLevel = \"low\", warn = F) anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, addwater = \"nhd\", dLevel = \"high\", warn = F) anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, addwater = \"osm\", warn = F) anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, northloc = NULL, scaleloc = NULL, labsize = NULL, warn = F) anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, northloc = \"br\", scaleloc = \"tl\", warn = F) anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, latlon = F, warn = F) anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, palcol = \"Spectral\", warn = F) anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, buffdist = 0.3, warn = F) anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, maptype = \"terrain\", warn = F, addwater = NULL) anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, maptype = \"terrain-lines\", warn = F, addwater = NULL) anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, maptype = \"toner\", warn = F, addwater = NULL) anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, maptype = \"toner-labels\", warn = F, addwater = NULL) anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, maptype = \"watercolor\", warn = F, addwater = NULL) anlzMWRmap(res = resdat, param = \"DO\", acc = accdat, sit = sitdat, maptype = NULL, warn = F, addwater = NULL)"},{"path":"https://massbays-tech.github.io/MassWateR/articles/modifying.html","id":"ggplot2","dir":"Articles","previous_headings":"","what":"ggplot2","title":"Modifying plots","text":"ggplot2 package developed following strict philosophy known grammar graphics. philosophy designed make thinking, reasoning, communicating graphs easier following simple rules. First, ggplot2 loaded. plot can created function ggplot(). creates empty coordinate system adding layers. first argument ggplot() dataset use graph. following creates empty base graph mpg dataset included ggplot2. next step add one layers (aka geoms) ggplot() function. function geom_point() adds layer points plot. ggplot2 package includes many geom functions add different type layer plot. Note use + syntax build plot - distinct style coding used ggplot2. geom function ggplot2 requires mapping argument. defines variables dataset mapped visual properties. mapping argument defined aes(), x y arguments aes() specify variables map x y axes. ggplot() function looks mapped variable data argument, case, mpg.  Every ggplot follows rules: plot starts ggplot() function plot needs three pieces information: data, data mapped plot aesthetics, geom layer Please visit ggplot2 website information.","code":"library(ggplot2) ggplot(data = mpg) ggplot(data = mpg) +   geom_point() ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +   geom_point()"},{"path":"https://massbays-tech.github.io/MassWateR/articles/modifying.html","id":"modifying-masswater-plots","dir":"Articles","previous_headings":"","what":"Modifying MassWateR plots","title":"Modifying plots","text":"plots MassWateR, additional components can added using + notation standard ggplot() object. distinct using default arguments plots change appearance (e.g., fill = \"red\"). Overriding existing plot components may also significantly alter appearance, use caution. Also note adding ggplot2 components existing MassWateR plot may may work based plot setup. can modify plots, required input files MassWateR analyze functions imported, using files included package examples. checks warnings suppressed know files formatted correctly. examples additions change standard plot, using anlzMWRseason() demonstration. single plot object original plot created p modified differently example. Modify plot labels:  Modify theme:  Notice default legend placement x-axis text altered changing theme. can changed combining preset theme (e.g., theme_bw()) additional theme() elements.  axis limits can changed using coord_cartesian(). Changing y-axis requires numeric range using ylim argument.  plot facets site:  Switch axes:  Add custom reference line:","code":"library(MassWateR)  # import results data respth <- system.file(\"extdata/ExampleResults.xlsx\", package = \"MassWateR\") resdat <- readMWRresults(respth, runchk = F, warn = F)  # import accuracy data accpth <- system.file(\"extdata/ExampleDQOAccuracy.xlsx\", package = \"MassWateR\") accdat <- readMWRacc(accpth, runchk = F)  # import site metadata sitpth <- system.file(\"extdata/ExampleSites.xlsx\", package = \"MassWateR\") sitdat <- readMWRsites(sitpth, runchk = F) p <- anlzMWRseason(res = resdat, param = \"DO\", acc = accdat, thresh = \"fresh\", group = \"month\") p +   labs(     x = \"Month\",      y = \"Dissolved oxygen (mg/L)\",      title = \"Seasonal summaries for dissolved oxygen\"   ) p + theme_grey() p +    theme_bw() +   theme(     axis.text = element_text(size = 14),      legend.position = \"bottom\"   ) p + coord_cartesian(ylim = c(0, 8)) p + facet_wrap(~`Monitoring Location ID`) p + coord_flip() p +   geom_hline(yintercept = 10, linetype = 'solid', color = 'green', size = 2)"},{"path":"https://massbays-tech.github.io/MassWateR/articles/outlierchecks.html","id":"analyzing-outliers","dir":"Articles","previous_headings":"","what":"Analyzing outliers","title":"MassWateR outlier checks","text":"Outliers can identified using anlzMWRoutlier() function. Evaluating data outliers critical step quality control, function allows user quickly identify removal additional follow-. Outliers defined using standard definition 1.5 times interquartile range (25th 75th percentile) parameter, depending grouping used function. visually identified points whiskers boxplots describe distribution data, .e., box defines interquartile range, horizontal line median, whiskers extend 1.5 times interquartile range. summary distribution statistics shown standard boxplot. Outliers extend beyond whiskers 1.5 times interquartile range. anlzMWRoutlier() function uses results data file path data frame input. results selected parameter shown boxplots, outliers labelled accordingly. Outliers can shown month using group = \"month\", site using group = \"site\", week year using group = \"week\". , outliers shown dissolved oxygen grouped month.  data also grouped site.  data can also grouped week using group = \"week\". week year shown plot integer. Note can common month/day indicating start week years integer way compare summaries results data span multiple years.  Results can also filtered dates using dtrng argument. date format must YYYY-MM-DD include two entries.  Points outliers can also jittered boxplots using type = \"jitterbox\" (default type = \"box\"). Outlier labels overlap also offset default. can suppressed using repel = FALSE.  Specifying type = \"jitter suppress boxplots.  y-axis scaling arithmetic (linear) logarithmic can set yscl argument. yscl = \"auto\" (default), scaling determined automatically data quality objective file accuracy, .e., parameters “log” columns plotted log10-scale, otherwise arithmetic. Setting yscl = \"linear\" yscl = \"log\" set axis linear log10-scale, respectively, regardless information data quality objective file accuracy. , axis E. Coli plotted log-10 scale automatically. y-axis scaling need specified explicitly function call default setting yscl = \"auto\".  force y-axis linear E. Coli, yscl = \"linear\" must used. Note default linear scaling dissolved oxygen determined automatically.  Finally, data frame identified outliers can also returned setting outliers = TRUE. table can used identify outliers original data removal additional follow-.","code":"anlzMWRoutlier(res = resdat, param = \"DO\", acc = accdat, group = \"month\") anlzMWRoutlier(res = resdat, param = \"DO\", acc = accdat, group = \"site\") anlzMWRoutlier(res = resdat, param = \"DO\", acc = accdat, group = \"week\") anlzMWRoutlier(res = resdat, param = \"DO\", acc = accdat, group = \"site\", dtrng = c(\"2021-05-01\", \"2021-07-31\")) anlzMWRoutlier(res = resdat, param = \"DO\", acc = accdat, type = \"jitterbox\", group = \"month\", repel = FALSE) anlzMWRoutlier(res = resdat, param = \"DO\", acc = accdat, type = \"jitter\", group = \"month\") anlzMWRoutlier(res = resdat, param = \"E.coli\", acc = accdat, group = \"month\") anlzMWRoutlier(res = resdat, param = \"E.coli\", acc = accdat, group = \"month\", yscl = \"linear\") anlzMWRoutlier(res = resdat, param = \"DO\", acc = accdat, group = \"month\", outliers = TRUE) #> # A tibble: 7 × 6 #>   `Monitoring Location ID` `Activity Start Date` Activ…¹ Chara…² Resul…³ Resul…⁴ #>   <chr>                    <date>                <chr>   <chr>     <dbl> <chr>   #> 1 SUD-293                  2021-03-21            08:16   DO         9.32 mg/l    #> 2 LND-007                  2021-05-19            06:35   DO         3.05 mg/l    #> 3 HBS-080P                 2021-05-19            09:29   DO        14.4  mg/l    #> 4 HBS-080P                 2021-05-19            09:33   DO        14.1  mg/l    #> 5 HBS-095P                 2021-06-14            05:17   DO        14.7  mg/l    #> 6 SUD-005                  2021-11-14            07:15   DO         8.44 mg/l    #> 7 HBS-016                  2021-11-14            07:25   DO         7.11 mg/l    #> # … with abbreviated variable names ¹​`Activity Start Time`, #> #   ²​`Characteristic Name`, ³​`Result Value`, ⁴​`Result Unit`"},{"path":"https://massbays-tech.github.io/MassWateR/articles/outlierchecks.html","id":"output-all-outlier-results","dir":"Articles","previous_headings":"","what":"Output all outlier results","title":"MassWateR outlier checks","text":"Outlier plots parameters results data file can created using anlzMWRoutlierall() function. can used create word document plots embedded file separate png images saved specified directory. relevant arguments required function include format = \"word\" format = \"png\" specify output type, fig_height fig_width plot dimensions (default 4 8, respectively), output_dir output_file output directory file name. rest arguments required anlzMWRoutlier(), except param argument plots parameters created output. Create word document outlier plots current working directory: Create output separate png plots parameter: function done running, message indicating success file(s) located returned.","code":"anlzMWRoutlierall(res = resdat, acc = accdat, group = 'month', format = 'word', output_dir = getwd()) anlzMWRoutlierall(res = resdat, acc = accdat, group = 'month', format = 'png', output_dir = getwd())"},{"path":"https://massbays-tech.github.io/MassWateR/articles/qcoverview.html","id":"creating-the-review-report","dir":"Articles","previous_headings":"","what":"Creating the review report","title":"MassWateR quality control functions","text":"qcMWRreview() function compiles review report Word document quality control checks included MassWateR package. report shows several tables, including data quality objectives files accuracy, frequency, completeness, summary results accuracy checks, summary results frequency checks, summary results completeness checks, individual results accuracy checks. report uses individual table functions described sections return results, include tabMWRacc(), tabMWRfre(), tabMWRcom(). workflow using function import required data (results data quality objective files, ) fix errors noted import prior creating review report. function can used inputs paths relevant files data frames returned readMWRresults(), readMWRacc(), readMWRfrecom(). former, full suite data checks can evaluated runkchk = T (default) suppressed runchk = F, explained relevant help files. latter case, downstream analyses may work data formatted incorrectly. report can created follows including required files specifying output directory Word document saved. function done running, message indicating success file located returned. report created current working directory. Word file can edited hand needed. Note warnings suppressed warn = FALSE. default, argument set TRUE view warnings R console report created. warnings indicate notable concerns consider input data may need addressed. Details warnings described sections quality control table. Optional arguments qcMWRreview() can changed needed include specifying file name output_file, suppressing raw data summaries end report rawdata = FALSE, changing table font sizes (dqofontsize data quality objectives first page, tabfontsize remainder).","code":"qcMWRreview(res = resdat, acc = accdat, frecom = frecomdat, output_dir = getwd(), warn = FALSE) #> Report created successfully! File located at /home/runner/work/MassWateR/MassWateR/vignettes/qcreview.docx"},{"path":"https://massbays-tech.github.io/MassWateR/articles/qcoverview.html","id":"quality-control-for-accuracy","dir":"Articles","previous_headings":"","what":"Quality control for accuracy","title":"MassWateR quality control functions","text":"quality control checks accuracy assess several characteristics data results file referencing appropriate values data quality objectives file accuracy. short, accuracy checks evaluate field blanks, lab blanks, field duplicates, lab duplicates, lab spikes, instrument checks. accuracy checks require results data (resdat ) data quality objectives file accuracy (accdat). tabMWRacc() function used create tabular results accuracy checks parameter. function can used inputs paths relevant files data frames returned readMWRresults() readMWRacc(). former, full suite data checks can evaluated runkchk = T (default) suppressed runchk = F, explained data inputs checks vignette. latter case, downstream analyses may work data formatted incorrectly. Also note accuracy evaluated parameters shared results file data quality objectives accuracy file. warning returned parameters match. warnings can suppressed setting warn = FALSE. tabMWRacc() function can return three types tables specified type argument: \"individual\", \"summary\", \"percent\". individual tables specific type accuracy check parameter (e.g., field blanks, lab blanks, etc.). summary table summarizes accuracy checks number checks many hit/misses returned across parameters. percent table similar summary table, showing percentages appropriate color-coding hit/misses. data quality objectives file frequency completeness also required type = \"summary\" type = \"percent\". type = \"individual\", quality control tables accuracy retrieved specifying check accchk argument. accchk argument can used specify one following values retrieve relevant tables: \"Field Blanks\", \"Lab Blanks\", \"Field Duplicates\", \"Lab Duplicates\", \"Lab Spikes\", \"Instrument Checks\". shows retrieve table using data frames results quality objectives file accuracy. warnings suppressed warn = FALSE. Field Blanks Parameter Date Site Result Threshold Hit/Miss Ammonia       2021-07-11 ABT-062 0.2 mg/l 0.05 mg/l MISS  2021-07-11 ABT-237 BDL 0.05 mg/l   2021-07-11 ABT-301 0.1 mg/l 0.05 mg/l MISS  2021-07-11 DAN-013 BDL 0.05 mg/l   2021-07-11 CND-036 0.02 mg/l 0.05 mg/l   2021-07-11 ABT-144 BDL 0.05 mg/l   2021-07-11 ABT-026 BDL 0.05 mg/l  E.coli       2021-09-13 SUD-236 BDL 10 cfu/100ml   2021-09-13 NSH-002 15 cfu/100ml 10 cfu/100ml MISS  2021-09-13 ABT-162 128 cfu/100ml 10 cfu/100ml MISS TP       2021-06-13 ABT-062 BDL 0.01 mg/l   2021-06-13 CND-110 BDL 0.01 mg/l   2021-06-13 CND-036 BDL 0.02 mg/l   2021-06-13 CND-009 0.01 mg/l 0.01 mg/l MISS  2021-06-13 HBS-016 0.1 mg/l 0.01 mg/l MISS  2021-06-13 ABT-026 BDL 0.01 mg/l   2021-06-13 NSH-002 BDL 0.01 mg/l   2021-06-13 NSH-047 0.02 mg/l 0.01 mg/l MISS  2021-06-15 CND-036 0.008 mg/l 0.01 mg/l  Lab Blanks Parameter Date Sample ID Result Threshold Hit/Miss Ammonia       2021-02-15  BDL 0.2 mg/l   2021-02-16  0.01 mg/l 0.05 mg/l   2021-07-11  0.4 mg/l 0.05 mg/l MISS  2021-07-11  BDL 0.05 mg/l   2021-07-11  BDL 0.05 mg/l   2021-07-11  BDL 0.05 mg/l   2021-07-11  0.11 mg/l 0.05 mg/l MISS  2021-07-11  BDL 0.05 mg/l   2021-07-11  BDL 0.05 mg/l  Sp Conductance       2021-04-11  45 uS/cm 25 uS/cm MISS  2021-04-11  5 uS/cm 25 uS/cm   2021-04-11  25 uS/cm 25 uS/cm MISS  2021-04-12  BDL 50 uS/cm   2021-04-13  BDL 25 uS/cm  TP       2021-06-13 K17452-MB1 BDL 0.01 mg/l   2021-06-13 K17453-MB1 0.1 mg/l 0.01 mg/l MISS  2021-06-13 K17452-MB2 BDL 0.01 mg/l   2021-06-13 K17453-MB2 BDL 0.01 mg/l   2021-06-13 K17452-MB3 0.02 mg/l 0.01 mg/l MISS  2021-06-13 K17453-MB3 BDL 0.01 mg/l   2021-06-13 K17452-MB4 BDL 0.01 mg/l   2021-06-13 K17453-MB4 0.03 mg/l 0.01 mg/l MISS Field Duplicates Parameter Date Site Initial Result Dup. Result Diff./RPD Hit/Miss E.coli        2021-06-07 RVM-001 530 cfu/100ml 600 cfu/100ml 2% logRPD   2021-06-07 RME-003 260 cfu/100ml 260 cfu/100ml 0% logRPD   2021-06-14 RVM-027 170 cfu/100ml 500 cfu/100ml 19% logRPD   2021-06-14 HBS-057 10 cfu/100ml 12 cfu/100ml 8% logRPD   2021-06-28 RVM-022 280 cfu/100ml 45 cfu/100ml 39% logRPD MISS  2021-06-28 SUD-096 50 cfu/100ml 45 cfu/100ml 3% logRPD   2021-07-06 RVM-001 890 cfu/100ml 950 cfu/100ml 1% logRPD   2021-07-19 CND-009 10 cfu/100ml 20 cfu/100ml 26% logRPD   2021-07-19 RVM-001 10 cfu/100ml 30 cfu/100ml 39% logRPD MISS  2021-07-26 HBS-031 192 cfu/100ml 60 cfu/100ml 25% logRPD MISS  2021-07-26 RVM-022 160 cfu/100ml 120 cfu/100ml 6% logRPD   2021-07-26 SUD-236 140 cfu/100ml 110 cfu/100ml 5% logRPD   2021-08-09 RME-003 340 cfu/100ml 1300 cfu/100ml 21% logRPD MISS  2021-08-09 ABT-077 5500 cfu/100ml 8000 cfu/100ml 4% logRPD   2021-08-16 RVM-001 320 cfu/100ml 600 cfu/100ml 10% logRPD   2021-08-16 RVM-004 5500 cfu/100ml 9999 cfu/100ml 7% logRPD MISS  2021-08-24 SUD-236 808 cfu/100ml 1000 cfu/100ml 3% logRPD   2021-08-30 SUD-236 36 cfu/100ml 31 cfu/100ml 4% logRPD   2021-08-30 CND-110 32 cfu/100ml 80 cfu/100ml 23% logRPD MISS  2021-09-07 RVM-0015 1020 cfu/100ml 2500 cfu/100ml 12% logRPD MISS  2021-09-07 RVM-012 1020 cfu/100ml 1800 cfu/100ml 8% logRPD   2021-09-13 RVM-005 AQL 450 cfu/100ml 15% logRPD MISS Nitrate        2021-05-16 ABT-026 0.71 mg/l 0.8 mg/l 12% RPD   2021-05-16 NSH-047 0.25 mg/l 0.3 mg/l 18% RPD   2021-05-16 NSH-002 0.23 mg/l 0.45 mg/l 65% RPD MISS  2021-05-16 ABT-077 0.82 mg/l 0.8 mg/l 2% RPD   2021-05-16 ELZ-004 0.1 mg/l 0.12 mg/l 18% RPD   2021-05-16 CND-009 0.34 mg/l 0.34 mg/l 0% RPD   2021-05-16 HBS-016 0.46 mg/l 0.45 mg/l 2% RPD   2021-05-16 DAN-013 BDL 0.08 mg/l 46% RPD MISS Sp Conductance        2021-05-19 HBS-088P 138 uS/cm 148 uS/cm 7% RPD   2021-05-19 HBS-095P 138 uS/cm 149 uS/cm 8% RPD   2021-05-19 HBS-098 138.5 uS/cm 149.6 uS/cm 8% RPD   2021-07-26 HBS-098 928 uS/cm 930 uS/cm 0% RPD   2021-08-15 ABT-062 625 uS/cm 725 uS/cm 15% RPD   2021-08-15 SUD-086 531 uS/cm 515 uS/cm 3% RPD   2021-08-15 CND-110 510 uS/cm 800 uS/cm 44% RPD MISS TP        2021-05-16 ABT-301 0.03 mg/l 0.06 mg/l 0.03 mg/l MISS  2021-06-13 ABT-062 0.1 mg/l 0.11 mg/l 10% RPD   2021-06-13 CND-110 0.09 mg/l 0.1 mg/l 11% RPD   2021-06-13 CND-036 0.14 mg/l 0.15 mg/l 7% RPD   2021-06-13 CND-009 0.07 mg/l 0.07 mg/l 0% RPD   2021-06-13 HBS-016 0.16 mg/l 0.1 mg/l 46% RPD MISS  2021-06-13 ABT-026 0.14 mg/l 0.2 mg/l 35% RPD MISS  2021-06-13 NSH-002 0.07 mg/l 0.08 mg/l 13% RPD   2021-06-13 NSH-047 0.12 mg/l 0.2 mg/l 50% RPD MISS  2021-07-11 ABT-237 0.05 mg/l 0.04 mg/l 0.01 mg/l   2021-07-11 SUD-064 0.05 mg/l 0.03 mg/l 0.02 mg/l   2021-07-11 DAN-013 0.05 mg/l 0.02 mg/l 0.03 mg/l MISS  2021-07-11 HBS-016 BDL 0.04 mg/l 0.02 mg/l   2021-07-12 HBS-016 BDL BDL 0 mg/l   2021-07-13 HBS-016 0.05 mg/l BDL 0.03 mg/l MISS Water Temp        2021-01-14 HBS-016 1 deg C 1 deg C 0% RPD   2021-01-14 LND-007 1 deg C 1 deg C 0% RPD   2021-01-14 HBS-031 2 deg C 2 deg C 0% RPD   2021-01-14 HBS-065 2 deg C 2 deg C 0% RPD   2021-01-14 CRN-002 2 deg C 2 deg C 0% RPD   2021-01-14 HBS-085 3 deg C 3 deg C 0% RPD   2021-01-14 HBS-095 4.5 deg C 4.5 deg C 0% RPD   2021-02-15 HBS-095 3.5 deg C 3.5 deg C 0% RPD   2021-02-15 HBS-031 0.5 deg C 0.5 deg C 0% RPD   2021-02-15 CRN-002 1.5 deg C 1.5 deg C 0% RPD   2021-02-15 HBS-076 1.5 deg C 1.5 deg C 0% RPD   2021-02-15 HBS-085 2.5 deg C 3.5 deg C 33% RPD MISS  2021-03-21 NSH-002 5.5 deg C 5.6 deg C 2% RPD   2021-03-21 SUD-005 5.5 deg C 5.5 deg C 0% RPD   2021-03-21 NSH-047 3.7 deg C 3.7 deg C 0% RPD   2021-03-21 ABT-026 5.2 deg C 5.2 deg C 0% RPD   2021-03-21 DAN-013 3 deg C 3 deg C 0% RPD   2021-03-21 ABT-312 5.4 deg C 5.4 deg C 0% RPD   2021-03-31 LND-007 9 deg C 9 deg C 0% RPD   2021-03-31 CRN-002 9 deg C 9 deg C 0% RPD   2021-03-31 HBS-095 11 deg C 11 deg C 0% RPD   2021-05-16 NSH-002 16.8 deg C 16.8 deg C 0% RPD   2021-05-16 ABT-301 16.5 deg C 16.5 deg C 0% RPD   2021-05-16 ELZ-004 16 deg C 16 deg C 0% RPD   2021-05-16 ABT-312 18 deg C 18 deg C 0% RPD   2021-05-16 DAN-013 15.5 deg C 15.5 deg C 0% RPD   2021-05-19 HBS-057 20 deg C 20 deg C 0% RPD   2021-05-19 HBS-085 20.2 deg C 20.2 deg C 0% RPD   2021-06-07 CND-009 22 deg C 22 deg C 0% RPD   2021-06-07 SUD-236 20 deg C 20 deg C 0% RPD   2021-06-07 RVM-001 23 deg C 23 deg C 0% RPD   2021-06-07 ABT-162 22 deg C 22 deg C 0% RPD   2021-06-07 RVM-005 23 deg C 23 deg C 0% RPD   2021-06-07 SUD-096 24 deg C 24 deg C 0% RPD   2021-06-07 ABT-077 22 deg C 22 deg C 0% RPD   2021-06-07 RVM-022 23 deg C 23 deg C 0% RPD   2021-06-07 RME-003 21 deg C 21 deg C 0% RPD   2021-06-07 CND-110 23 deg C 23 deg C 0% RPD   2021-06-13 ABT-301 19.2 deg C 19.2 deg C 0% RPD   2021-06-13 DAN-013 17.8 deg C 17.8 deg C 0% RPD   2021-06-13 ELZ-004 19.3 deg C 19.3 deg C 0% RPD   2021-06-14 CND-009 22.8 deg C 22.8 deg C 0% RPD   2021-09-14 HBS-057 18.3 deg C 18.3 deg C 0% RPD  Lab Duplicates Parameter Date Sample ID Initial Result Dup. Result Diff./RPD Hit/Miss E.coli        2021-07-12 R2546-9 40 cfu/100ml 10 cfu/100ml 46% logRPD MISS  2021-07-12 R2546-10 35 cfu/100ml 37 cfu/100ml 2% logRPD   2021-07-19 R2546-11 100 cfu/100ml 400 cfu/100ml 26% logRPD MISS  2021-07-19 R2546-13 100 cfu/100ml 250 cfu/100ml 18% logRPD   2021-07-19 R2546-12 800 cfu/100ml 400 cfu/100ml 11% logRPD MISS  2021-09-13 R2546-8 128 cfu/100ml 150 cfu/100ml 3% logRPD  Nitrate        2021-05-16 K16452-MB1 0.8 mg/l 0.9 mg/l 12% RPD   2021-05-16 K16453-MB1 0.3 mg/l 0.3 mg/l 0% RPD   2021-05-16 K16454-MB1 0.45 mg/l 0.3 mg/l 40% RPD MISS  2021-05-16 K16452-MB2 0.8 mg/l 0.82 mg/l 2% RPD   2021-05-16 K16453-MB2 0.12 mg/l 0.3 mg/l 86% RPD MISS  2021-05-16 K16454-MB2 0.34 mg/l 0.21 mg/l 47% RPD MISS  2021-05-16 K16452-MB3 0.45 mg/l 0.46 mg/l 2% RPD   2021-05-16 K16453-MB3 0.08 mg/l 0.08 mg/l 0% RPD   2021-06-16 K16452-MB3 0.05 mg/l 0.07 mg/l 33% RPD MISS  2021-06-16 K16452-MB3 0.02 mg/l 0.03 mg/l 40% RPD MISS  2021-06-16 K16452-MB3 BDL 0.11 mg/l 10% RPD  pH        2021-07-12  7.2 s.u. 7.25 s.u. 0.05 s.u.   2021-07-13  6.1 s.u. 6.5 s.u. 0.4 s.u.   2021-07-14  6.85 s.u. 6.95 s.u. 0.1 s.u.   2021-07-15  7.2 s.u. 9 s.u. 1.8 s.u. MISS  2021-07-16  6.15 s.u. 6.65 s.u. 0.5 s.u.   2021-07-17  6.15 s.u. 6.66 s.u. 0.51 s.u. MISS TP        2021-06-13  0.11 mg/l 0.12 mg/l 9% RPD   2021-06-13  0.1 mg/l 0.09 mg/l 11% RPD   2021-06-13  0.15 mg/l BDL 175% RPD MISS  2021-06-13  0.07 mg/l 0.08 mg/l 13% RPD   2021-06-13  0.07 mg/l 0.1 mg/l 35% RPD MISS  2021-06-13  0.04 mg/l 0.01 mg/l 0.03 mg/l MISS  2021-06-13  0.04 mg/l 0.05 mg/l 0.01 mg/l   2021-06-13  0.4 mg/l 0.44 mg/l 10% RPD   2021-06-13  0.2 mg/l 0.4 mg/l 67% RPD MISS  2021-06-13  0.08 mg/l 0.08 mg/l 0% RPD   2021-06-13  0.2 mg/l 0.21 mg/l 5% RPD   2021-08-14  0.0085 mg/l 0.0095 mg/l 0.001 mg/l  Lab Spikes Parameter Date Sample ID Spike Amt Recovered % Recovery Hit/Miss Nitrate        2021-05-16 NO3-1 0.8 mg/l 0.9 mg/l 112%   2021-05-16 NO3-2 0.3 mg/l 0.3 mg/l 100%   2021-05-16 NO3-3 0.45 mg/l 0.3 mg/l 67% MISS  2021-05-16 NO3-4 0.8 mg/l 0.82 mg/l 102%   2021-05-16 NO3-5 0.12 mg/l 0.15 mg/l 125% MISS  2021-05-16 NO3-6 0.34 mg/l 0.38 mg/l 112%  Ortho P        2021-02-12  BDL BDL 100%   2021-02-13  0.02 mg/l BDL 50%   2021-02-14  0.05 mg/l 0.04 mg/l 80%   2021-02-15  0.06 mg/l 0.04 mg/l 67% MISS  2021-02-16  0.06 mg/l 0.03 mg/l 50% MISS  2021-02-17  0.054 mg/l 0.046 mg/l 85%   2021-02-18  0.042 mg/l 0.051 mg/l 121%   2021-02-19  0.0545 mg/l 0.0455 mg/l 83% MISS TP        2021-06-13  0.11 mg/l 0.12 mg/l 109%   2021-06-13  0.1 mg/l 0.09 mg/l 90%   2021-06-13  0.15 mg/l 0.2 mg/l 133% MISS  2021-06-13  0.07 mg/l 0.08 mg/l 114%   2021-06-13  0.07 mg/l 0.1 mg/l 143% MISS  2021-06-14  0.08 mg/l 0.08 mg/l 100%   2021-06-14  0.08 mg/l 0.08 mg/l 100%   2021-06-14  0.08 mg/l 0.08 mg/l 100%   2021-06-14  0.08 mg/l 0.08 mg/l 100%   2021-06-15  0.07 mg/l 0.07 mg/l 100%   2021-06-15  0.07 mg/l 0.07 mg/l 100%   2021-06-15  0.07 mg/l 0.07 mg/l 100%   2021-06-15  0.07 mg/l 0.07 mg/l 100%   2021-06-16  0.051 mg/l 0.05 mg/l 98%   2021-06-16  0.051 mg/l 0.05 mg/l 98%   2021-06-16  0.02 mg/l 0.01 mg/l 50%   2021-06-16  0.051 mg/l 0.05 mg/l 98%   2021-06-17  0.21 mg/l 0.2 mg/l 95%   2021-06-17  0.21 mg/l 0.2 mg/l 95%   2021-06-17  0.03 mg/l 0.02 mg/l 67%   2021-06-17  0.21 mg/l 0.2 mg/l 95%  Instrument Checks (post sampling) Parameter Date Sample ID Calibration Standard Instrument Reading Accuracy Hit/Miss        2021-10-15  6 mg/l 6.4 mg/l 0.4 mg/l MISS  2021-10-16  6 mg/l 6.2 mg/l 0.2 mg/l  pH        2021-06-13 pH-6-13-2 7 s.u. 7.21 s.u. 0.21 s.u. MISS  2021-06-13 pH-6-13-3 7 s.u. 7.38 s.u. 0.38 s.u. MISS  2021-06-13 pH-6-13-4 7 s.u. 7.39 s.u. 0.39 s.u. MISS  2021-06-13 pH-6-13-5 7 s.u. 7.23 s.u. 0.23 s.u. MISS  2021-06-13 pH-6-13-6 7 s.u. 6.92 s.u. 0.08 s.u.   2021-06-13 pH-6-13-7 7 s.u. 7.23 s.u. 0.23 s.u. MISS  2021-06-15 pH-6-15-5 7.02 s.u. 7.23 s.u. 0.21 s.u. MISS  2021-06-16 pH-6-16-5 7.02 s.u. 7.02 s.u. 0 s.u.   2021-06-17 pH-6-17-5 7.02 s.u. 7.056 s.u. 0.036 s.u.  Sp Conductance        2021-08-12  1000 uS/cm 986.2 uS/cm 13.8 uS/cm   2021-09-12  1000 uS/cm 1010 uS/cm 10 uS/cm   2021-09-12  1000 uS/cm 950 uS/cm 50 uS/cm   2021-09-12  1000 uS/cm 1001 uS/cm 1 uS/cm   2021-09-12  1000 uS/cm 1040 uS/cm 40 uS/cm   2021-09-12  1000 uS/cm 1100 uS/cm 100 uS/cm MISS  2021-09-12  100 uS/cm 165 uS/cm 65 uS/cm MISS  2021-09-12  1000 uS/cm 750 uS/cm 250 uS/cm MISS  2021-09-12  1000 uS/cm 999 uS/cm 1 uS/cm   2021-09-12  1000 uS/cm 980 uS/cm 20 uS/cm   2021-09-12  1000 uS/cm 420 uS/cm 580 uS/cm MISS type = \"summary\", function summarizes accuracy checks counting number quality control checks, number misses, percent acceptance parameter. accuracy checks used accchk argument apply. data quality objectives file frequency completeness also required table. Type Parameter Number QC Checks Number Misses % Acceptance Field Duplicates      Ammonia 0 - -  Chl 0 - -  0 - -  E.coli 22 8 64 %  Nitrate 8 2 75 %  Ortho P 0 - -  pH 0 - -  Sp Conductance 7 1 86 %  TP 15 6 60 %  TSS 0 - -  Water Temp 43 1 98 % Lab Duplicates      Ammonia 0 - -  Chl 0 - -  0 - -  E.coli 6 3 50 %  Nitrate 11 5 55 %  Ortho P 0 - -  pH 6 2 67 %  TP 12 4 67 %  TSS 0 - -  Water Temp 0 - - Field Blanks      Ammonia 7 2 71 %  Chl 0 - -  E.coli 3 2 33 %  Nitrate 0 - -  Ortho P 0 - -  TP 9 3 67 %  TSS 0 - - Lab Blanks      Ammonia 9 2 78 %  Chl 0 - -  0 - -  Nitrate 0 - -  Ortho P 0 - -  Sp Conductance 5 2 60 %  TP 8 3 62 %  TSS 0 - - Lab Spikes      Ammonia 0 - -  Chl 0 - -  Nitrate 6 2 67 %  Ortho P 8 3 62 %  TP 21 2 90 %  TSS 0 - - Instrument Checks      2 1 50 %  pH 9 6 33 %  Sp Conductance 11 4 64 % type = \"percent\", function returns similar table summary option, except percentage checks pass parameter shown wide format. Cells color-coded based percentage checks passed using percent thresholds % Completeness column data quality objectives file frequency completeness. Parameters without entry % Completeness color-coded appropriate warning returned. accuracy checks used accchk argument apply. Parameter Field Duplicate Lab Duplicate Field Blank Lab Blank Spike/Check Accuracy Ammonia - - 71% 78% - Chl - - - - - - - - - 50% E.coli 64% 50% 33% - - Nitrate 75% 55% - - 67% Ortho P - - - - 62% pH - 67% - - 33% Sp Conductance 86% - - 60% 64% TP 60% 67% 67% 62% 90% TSS - - - - - Water Temp 98% - - - - tabMWRacc() function uses qcMWRacc() function internally create table. function creates raw summaries accuracy input data. Typically, qcMWRacc() used , explained demonstrate raw summaries can obtained. , qcMWRacc() function executed data frames results quality objectives file accuracy. tabMWRacc, accchk argument can used return one checks. results returned list, element list corresponding specific accuracy check. , lab duplicate checks returned. warnings also suppressed.","code":"tabMWRacc(res = resdat, acc = accdat, type = \"individual\", accchk = \"Field Blanks\", warn = FALSE) tabMWRacc(res = resdat, acc = accdat, type = \"individual\", accchk = \"Lab Blanks\", warn = FALSE) tabMWRacc(res = resdat, acc = accdat, type = \"individual\", accchk = \"Field Duplicates\", warn = FALSE) tabMWRacc(res = resdat, acc = accdat, type = \"individual\", accchk = \"Lab Duplicates\", warn = FALSE) tabMWRacc(res = resdat, acc = accdat, type = \"individual\", accchk = \"Lab Spikes\", warn = FALSE) tabMWRacc(res = resdat, acc = accdat, type = \"individual\", accchk = \"Instrument Checks\", warn = FALSE) tabMWRacc(res = resdat, acc = accdat, type = \"summary\", warn = FALSE, frecom = frecomdat) tabMWRacc(res = resdat, acc = accdat, type = \"percent\", warn = FALSE, frecom = frecomdat) qcMWRacc(res = resdat, acc = accdat, accchk = \"Lab Duplicates\", warn = FALSE) #> $`Lab Duplicates` #> # A tibble: 35 × 7 #>    Parameter Date       `Sample ID` `Initial Result` Dup. Resu…¹ Diff.…² Hit/M…³ #>    <chr>     <date>     <chr>       <chr>            <chr>       <chr>   <chr>   #>  1 E.coli    2021-07-12 R2546-9     40 cfu/100ml     10 cfu/100… 46% lo… MISS    #>  2 E.coli    2021-07-12 R2546-10    35 cfu/100ml     37 cfu/100… 2% log… NA      #>  3 E.coli    2021-07-19 R2546-11    100 cfu/100ml    400 cfu/10… 26% lo… MISS    #>  4 E.coli    2021-07-19 R2546-13    100 cfu/100ml    250 cfu/10… 18% lo… NA      #>  5 E.coli    2021-07-19 R2546-12    800 cfu/100ml    400 cfu/10… 11% lo… MISS    #>  6 E.coli    2021-09-13 R2546-8     128 cfu/100ml    150 cfu/10… 3% log… NA      #>  7 Nitrate   2021-05-16 K16452-MB1  0.8 mg/l         0.9 mg/l    12% RPD NA      #>  8 Nitrate   2021-05-16 K16453-MB1  0.3 mg/l         0.3 mg/l    0% RPD  NA      #>  9 Nitrate   2021-05-16 K16454-MB1  0.45 mg/l        0.3 mg/l    40% RPD MISS    #> 10 Nitrate   2021-05-16 K16452-MB2  0.8 mg/l         0.82 mg/l   2% RPD  NA      #> # … with 25 more rows, and abbreviated variable names ¹​`Dup. Result`, #> #   ²​`Diff./RPD`, ³​`Hit/Miss`"},{"path":"https://massbays-tech.github.io/MassWateR/articles/qcoverview.html","id":"quality-control-for-frequency","dir":"Articles","previous_headings":"","what":"Quality control for frequency","title":"MassWateR quality control functions","text":"quality control checks frequency used verify appropriate number quality control samples collected analyzed parameter. checks quantity samples values, accuracy checks. frequency checks require results data (resdat ) data quality objectives file frequency completeness (frecomdat). tabMWRfre() function used create tabular results frequency checks parameter. function can used inputs paths relevant files data frames returned readMWRresults() readMWRfrecom(). former, full suite data checks can evaluated runkchk = T (default) suppressed runchk = F, explained data inputs checks vignette. latter case, downstream analyses may work data formatted incorrectly. Also note completeness evaluated parameters shared results file data quality objectives completeness file. warning returned parameters match. warnings can suppressed setting warn = FALSE. quality control tables frequency show number records apply given check (e.g., Lab Blank, Field Blank, etc.) relative number “regular” data records (e.g., field samples measures) parameter. summary frequency checks parameter provided type = \"summary\". function executed data frames results quality objectives file frequency. Type Parameter Number Data Records Number Dups/Blanks/Spikes Frequency % Hit/Miss Field Duplicates       Ammonia 138 0 0% MISS  Chl 18 0 0% MISS  199 0 0% MISS  Nitrate 96 8 8% MISS  Ortho P 175 0 0% MISS  pH 199 0 0% MISS  TP 205 15 7% MISS  TSS 202 0 0% MISS  Water Temp 382 43 11%  Lab Duplicates       Ammonia 138 0 0% MISS  Chl 18 0 0% MISS  199 0 0% MISS  Nitrate 96 11 11%   Ortho P 175 0 0% MISS  pH 199 6 3% MISS  TP 205 12 6%   TSS 202 0 0% MISS  Water Temp 382 0 0% MISS Field Blanks       Ammonia 138 7 5% MISS  Chl 18 0 0% MISS  Nitrate 96 0 0% MISS  Ortho P 175 0 0% MISS  TP 205 9 4% MISS  TSS 202 0 0% MISS Lab Blanks       Ammonia 138 9 7%   Chl 18 0 0% MISS  199 0 0% MISS  Nitrate 96 0 0% MISS  Ortho P 175 0 0% MISS  TP 205 8 4% MISS  TSS 202 0 0% MISS Lab Spikes       Ammonia 138 0 0% MISS  Chl 18 0 0% MISS  Nitrate 96 6 6%   Ortho P 175 8 5% MISS  TP 205 21 10%   TSS 202 0 0% MISS Instrument Checks       199 2 1% MISS  pH 199 9 5% MISS color-coded table showing similar information percentages parameter provided type = \"percent\". Cells shown green red required frequency checks met specified data quality objectives file. Parameter Field Duplicate Lab Duplicate Field Blank Lab Blank Spike/Check Accuracy Ammonia 0% 0% 5% 7% 0% Chl 0% 0% 0% 0% 0% 0% 0% - 0% 1% Nitrate 8% 11% 0% 0% 6% Ortho P 0% 0% 0% 0% 5% pH 0% 3% - - 5% TP 7% 6% 4% 4% 10% TSS 0% 0% 0% 0% 0% Water Temp 11% 0% - - - tabMWRfre() function uses qcMWRfre() function internally create table. function creates raw summaries frequency input data. Typically, qcMWRfre() used , explained demonstrate raw summaries can obtained. , qcMWRfre() function executed data frames results quality objectives file frequency completeness. warnings suppressed. output shows frequency checks combined files. row applies frequency check parameter. Parameter column shows parameter, obs column shows total records apply regular activity types, check column shows relevant activity type frequency check, count column shows number records apply check, standard column shows relevant percentage required quality control check quality control objectives file, met column shows standard met comparing percent greater equal standard.","code":"tabMWRfre(res = resdat, frecom = frecomdat, type = \"summary\", warn = FALSE) tabMWRfre(res = resdat, frecom = frecomdat, type = \"percent\", warn = FALSE) qcMWRfre(res = resdat, frecom = frecomdat, warn = FALSE) #> # A tibble: 54 × 7 #>    Parameter   obs check                count standard percent met   #>    <chr>     <int> <chr>                <int>    <dbl>   <dbl> <lgl> #>  1 Ammonia     138 Field Duplicate          0       10    0    FALSE #>  2 Ammonia     138 Lab Duplicate            0        5    0    FALSE #>  3 Ammonia     138 Field Blank              7       10    5.07 FALSE #>  4 Ammonia     138 Lab Blank                9        5    6.52 TRUE  #>  5 Ammonia     138 Lab Spike                0        5    0    FALSE #>  6 Ammonia     138 Spike/Check Accuracy     0        5    0    FALSE #>  7 Chl a        18 Field Duplicate          0       10    0    FALSE #>  8 Chl a        18 Lab Duplicate            0        5    0    FALSE #>  9 Chl a        18 Field Blank              0       10    0    FALSE #> 10 Chl a        18 Lab Blank                0        5    0    FALSE #> # … with 44 more rows"},{"path":"https://massbays-tech.github.io/MassWateR/articles/qcoverview.html","id":"quality-control-for-completeness","dir":"Articles","previous_headings":"","what":"Quality control for completeness","title":"MassWateR quality control functions","text":"quality control checks completeness used assess number regular samples relative qualified samples apply parameter. Regular samples Field Msr/Obs Sample-Routine Activity Type column results file qualified samples marked Q Result Measure Qualifier column results file. completeness checks require results data (resdat ) data quality objectives file frequency completeness (frecomdat). tabMWRcom() function used create table shows completeness percentages parameter. explained previous section, function can used inputs paths relevant files data frames returned readMWRresults() read_frecom(). summary table showing number data records, number qualified records, percent completeness can created tabMWRcom(). % Completeness column shows cells green red required percentage observations completeness present specified data quality objectives file. Hit/Miss column shows similar information text format, .e., MISS shown quality control standard completeness met. function also executed data frames , since already passed internal checks. Parameter Number Data Records Number Qualified Records % Completeness Hit/ Miss Number Censored Records Notes Ammonia 138 0 100%    Chl 18 0 100%    199 19 90%    Nitrate 96 0 100%    Ortho P 175 0 100%    pH 199 6 97%    TP 205 32 84% MISS   TSS 202 0 100%    Water Temp 382 1 100%    tabMWRcom() function uses qcMWRcom() function internally create table. function creates raw summaries completeness input data. Typically, qcMWRcom() used , explained demonstrate raw summaries can obtained. , qcMWRcom() function executed data frames results quality objectives file completeness. warnings suppressed. output shows completeness checks combined files. row applies completeness check parameter. datarec qualrec columns show number data records qualified records, respectively. datarec column specifically shows records quality control excluding duplicates, blanks, spikes count. standard column shows relevant percentage required quality control check quality control objectives file, complete column shows calculated completeness taken input data, met column shows standard met comparing complete greater equal standard.","code":"tabMWRcom(res = resdat, frecom = frecomdat, warn = FALSE) qcMWRcom(res = resdat, frecom = frecomdat, warn = FALSE) #> # A tibble: 9 × 6 #>   Parameter  datarec qualrec standard complete met   #>   <chr>        <int>   <int>    <dbl>    <dbl> <lgl> #> 1 Ammonia        138       0       90    100   TRUE  #> 2 Chl a           18       0       90    100   TRUE  #> 3 DO             199      19       90     90.5 TRUE  #> 4 Nitrate         96       0       90    100   TRUE  #> 5 Ortho P        175       0       90    100   TRUE  #> 6 pH             199       6       90     97.0 TRUE  #> 7 TP             205      32       90     84.4 FALSE #> 8 TSS            202       0       90    100   TRUE  #> 9 Water Temp     382       1       90     99.7 TRUE"},{"path":"https://massbays-tech.github.io/MassWateR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marcus Beck. Author, maintainer. Jill Carr. Author. Ben Wetherill. Author. Pam DiBona. Author.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Beck M, Carr J, Wetherill B, DiBona P (2022). MassWateR: Tools QAQC Exploratory Analysis Massachusetts Surface Water Quality Data. https://github.com/massbays-tech/MassWateR, https://massbays-tech.github.io/MassWateR.","code":"@Manual{,   title = {MassWateR: Tools for QAQC and Exploratory Analysis of Massachusetts Surface Water Quality Data},   author = {Marcus Beck and Jill Carr and Ben Wetherill and Pam DiBona},   year = {2022},   note = {https://github.com/massbays-tech/MassWateR, https://massbays-tech.github.io/MassWateR}, }"},{"path":"https://massbays-tech.github.io/MassWateR/index.html","id":"masswater","dir":"","previous_headings":"","what":"Tools for QAQC and Exploratory Analysis of Massachusetts Surface Water Quality Data","title":"Tools for QAQC and Exploratory Analysis of Massachusetts Surface Water Quality Data","text":"R package working Massachusetts surface water quality data, created partnership Mass Bays National Estuary Partnership.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for QAQC and Exploratory Analysis of Massachusetts Surface Water Quality Data","text":"package can installed follows:","code":"# Enable universe(s) by massbays-tech options(repos = c(   massbaystech = \"https://massbays-tech.r-universe.dev\",   CRAN = \"https://cloud.r-project.org\"))  # Install the package install.packages(\"MassWateR\")"},{"path":"https://massbays-tech.github.io/MassWateR/index.html","id":"using-the-package","dir":"","previous_headings":"","what":"Using the package","title":"Tools for QAQC and Exploratory Analysis of Massachusetts Surface Water Quality Data","text":"Please see vignette articles overview use functions MassWateR package. vignettes organized topically follows: MassWateR data input checks: Information datasets required use package, required formats import R, checks run data imported. MassWateR quality control functions: Information using quality control functions assess completeness accuracy results data surface water quality generate automated reports. MassWateR outlier checks: Information evaluating outliers results data surface water quality. MassWateR analysis functions: Information using analysis functions evaluate trends, summaries, maps results data surface water quality. Modifying plots: short tutorial modifying plots created MassWateR.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/index.html","id":"issues-and-suggestions","dir":"","previous_headings":"","what":"Issues and suggestions","title":"Tools for QAQC and Exploratory Analysis of Massachusetts Surface Water Quality Data","text":"Please report issues suggestions issues link repository.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Tools for QAQC and Exploratory Analysis of Massachusetts Surface Water Quality Data","text":"Please view contributing guidelines changes pull requests.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Tools for QAQC and Exploratory Analysis of Massachusetts Surface Water Quality Data","text":"Please note MassWateR project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRdate.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze trends by date in results file — anlzMWRdate","title":"Analyze trends by date in results file — anlzMWRdate","text":"Analyze trends date results file","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRdate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze trends by date in results file — anlzMWRdate","text":"","code":"anlzMWRdate(   res,   param,   acc,   sit = NULL,   thresh,   group = c(\"site\", \"locgroup\", \"all\"),   threshcol = \"tan\",   site = NULL,   resultatt = NULL,   locgroup = NULL,   dtrng = NULL,   ptsize = 2,   repel = FALSE,   labsize = 3,   expand = c(0.05, 0.1),   confint = FALSE,   yscl = c(\"auto\", \"log\", \"linear\"),   colleg = FALSE,   ttlsize = 1.2,   runchk = TRUE,   warn = TRUE )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRdate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze trends by date in results file — anlzMWRdate","text":"res character string path results file data.frame results returned readMWRresults param character string parameter plot, must conform entries \"Simple Parameter\" column paramsMWR acc character string path data quality objectives file accuracy data.frame returned readMWRacc sit optional character string path site metadata file data.frame site metadata returned readMWRsites, required locgroup NULL thresh character indicating relevant freshwater marine threshold lines included, one \"fresh\", \"marine\", \"none\" group character indicating whether results grouped site (default), combined across location groups, combined across sites, see details threshcol character indicating color threshold lines available site character string sites include, default resultatt character string result attributes plot, default locgroup character string location groups plot \"Location Group\" column site metadata file, optional sit NULL dtrng character string length two date ranges YYYY-MM-DD, default ptsize numeric indicating size points repel logical indicating overlapping site labels offset, default FALSE labsize numeric indicating font size site labels, group = \"site\" group = \"locgroup\" expand numeric length two indicating expansion proportions x-axis include labels outside plot range repel = F group = \"site\" group = \"locgroup\" confint logical indicating confidence intervals shown, applies type = \"bar\" yscl character indicating one \"auto\" (default), \"log\", \"linear\", see details colleg logical indicating color legend sites location groups included group = \"site\" group = \"locgroup\" ttlsize numeric value indicating font size title relative text plot runchk logical run data checks checkMWRresults checkMWRacc, applies res acc file paths warn logical return warnings console (default)","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRdate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze trends by date in results file — anlzMWRdate","text":"ggplot object can modified.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRdate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze trends by date in results file — anlzMWRdate","text":"Results shown selected parameter continuous line plots time. Specifying group = \"site\" plot separate line site.  Specifying group = \"locgroup\" average results across sites locgroup argument.  site metadata file must passed `sit` argument use option.  Specifying group = \"\" average results across sites date. Threshold lines applicable marine freshwater environments can included plot using thresh argument.  thresholds specific parameter can found thresholdMWR file.  Threshold lines plotted parameters entries thresholdMWR value `Result Unit` matches thresholdMWR. threshold lines can suppressed setting thresh = 'none'. y-axis scaling arithmetic (linear) logarithmic can set yscl argument.  yscl = \"auto\" (default), scaling  determined automatically data quality objective file accuracy, .e., parameters \"log\" columns plotted log10-scale, otherwise arithmetic. Setting yscl = \"linear\" yscl = \"log\" set axis linear log10-scale, respectively, regardless information data quality objective file accuracy. entries resdat \"Result Value\" column \"BDL\" \"AQL\" replaced appropriate values \"Quantitation Limit\" column, present, otherwise \"MDL\" \"UQL\" columns data quality objectives file accuracy used.  Values \"BDL\" use one half appropriate limit.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRdate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze trends by date in results file — anlzMWRdate","text":"","code":"# results data path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # accuracy path accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx',       package = 'MassWateR')  # accuracy data accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed!  # site data path sitpth <- system.file('extdata/ExampleSites.xlsx', package = 'MassWateR')  # site data sitdat <- readMWRsites(sitpth) #> Running checks on site metadata... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for missing latitude or longitude values... OK #> \tChecking for non-numeric values in latitude... OK #> \tChecking for non-numeric values in longitude... OK #> \tChecking for positive values in longitude... OK #> \tChecking for missing entries for Monitoring Location ID... OK #>  #> All checks passed!  # select sites anlzMWRdate(res = resdat, param = 'DO', acc = accdat, group = 'site', thresh = 'fresh',      site = c(\"ABT-026\", \"ABT-077\"))   # combined sites anlzMWRdate(res = resdat, param = 'DO', acc = accdat, group = 'all', thresh = 'fresh',      site = c(\"ABT-026\", \"ABT-077\"))   # sites by location group, requires sitdat anlzMWRdate(res = resdat, param = 'DO', acc = accdat, sit = sitdat, group = 'site',       thresh = 'fresh', locgroup = 'Concord')        # sites by location group averaged by group, requires sitdat anlzMWRdate(res = resdat, param = 'DO', acc = accdat, sit = sitdat, group = 'locgroup',       thresh = 'fresh', locgroup = c('Lower Assabet', 'Upper Assabet'))   # sites by location group (unspecified) averaged by group, requires sitdat anlzMWRdate(res = resdat, param = 'DO', acc = accdat, sit = sitdat, group = 'locgroup',       thresh = 'fresh')"},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze results with maps — anlzMWRmap","title":"Analyze results with maps — anlzMWRmap","text":"Analyze results maps","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze results with maps — anlzMWRmap","text":"","code":"anlzMWRmap(   res,   param,   acc,   sit,   site = NULL,   resultatt = NULL,   locgroup = NULL,   dtrng = NULL,   ptsize = 4,   repel = TRUE,   labsize = 3,   palcol = \"Greens\",   yscl = c(\"auto\", \"log\", \"linear\"),   crs = 4326,   zoom = 11,   addwater = \"nhd\",   watercol = \"lightblue\",   dLevel = \"medium\",   maptype = NULL,   buffdist = 0.02,   northloc = \"tl\",   scaleloc = \"br\",   latlon = TRUE,   ttlsize = 1.2,   runchk = TRUE,   warn = TRUE )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze results with maps — anlzMWRmap","text":"res character string path results file data.frame results returned readMWRresults param character string parameter plot, must conform entries \"Simple Parameter\" column paramsMWR acc character string path data quality objectives file accuracy data.frame returned readMWRacc sit character string path site metadata file data.frame site metadata returned readMWRsites site character string sites include, default resultatt character string result attributes plot, default locgroup character string location groups plot \"Location Group\" column site metadata file, default dtrng character string length two date ranges YYYY-MM-DD, default ptsize numeric size points, use negative value omit points repel logical indicating overlapping site labels offset labsize numeric size site labels palcol character string indicating color palette used, see details yscl character indicating one \"auto\" (default), \"log\", \"linear\", see details crs numeric four-digit EPSG number coordinate reference system, see details zoom numeric indicating resolution base map, see details addwater character string \"nhd\" \"osm\" (NULL suppress) include water bodies lines polygons added map, see details watercol character string color water objects addwater = \"nhd\" addwater = \"osm\" dLevel character string indicating \"low\", \"medium\" (default), \"high\" level detail addwater = \"nhd\", see details maptype character string base map type, see details buffdist numeric buffer around bounding box selected sites, see details northloc character string indicating location north arrow, see details scaleloc character string indicating location scale bar, see details latlon logical include latitude longitude labels plot, default TRUE ttlsize numeric value indicating font size title relative text plot runchk logical run data checks checkMWRresults, checkMWRacc, checkMWRsites, applies res, acc, sit file paths warn logical return warnings console (default)","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze results with maps — anlzMWRmap","text":"ggplot object can modified.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze results with maps — anlzMWRmap","text":"function creates map summarized results selected parameter monitoring site.  default, dates parameter averaged. Options filter site, date range, result attribute provided.  sites spatial information site metadata file plotted warning returned information. site labels also plotted next point.  labels can suppressed setting labsize = NULL. acceptable color palette RColorBrewer can used palcol, passed palette argment scale_fill_distiller. default value crs EPSG 4326 WGS 84 projection decimal degrees.  crs argument passed st_as_sf acceptable CRS appropriate data can used. results shown map represent parameter average site within date range provided dtrng.  average may differ depending value provided yscl argument.  Log10-distributed parameters use geometric mean normally-distributed parameters use arithmetic mean.  distribution determined ycsl argument. yscl = \"auto\" (default), distribution determined automatically data quality objective file accuracy, .e., parameters \"log\" columns summarized geometric mean, otherwise arithmetic. Setting yscl = \"linear\" yscl = \"log\" use arithmetic geometric summaries, respectively, regardless information data quality objective file accuracy. Using addwater = \"nhd\" (default) include lines polygons natural water bodies defined using National Hydrography Dataset (NHD) included data files package pondsMWR, riversMWR, streamsMWR. level detail water bodies defined dLevel \"low\", \"medium\" (default), \"high\". detail level applies NHD data. Using addwater = \"osm\" include lines polygons natural water bodies OpenStreetMap (OSM) project, downloaded using osmdata package. Using addwater = \"nhd\" may preferred accurate display water bodies Massachusetts, whereas addwater = \"osm\" include water bodies outside state. Use addwater = NULL suppress . base map can plotted using maptype argument obtained get_stamenmap function ggmap.  zoom value specifies resolution map.  Use higher values download map tiles greater resolution, although increases download time.  maptype argument describes type base map download. Acceptable options include \"terrain\", \"terrain-background\", \"terrain-labels\", \"terrain-lines\", \"toner\", \"toner-2010\", \"toner-2011\", \"toner-background\", \"toner-hybrid\", \"toner-labels\", \"toner-lines\", \"toner-lite\", \"watercolor\". Use maptype = NULL suppress base map. area around summarized points can increased decreased using buffdist argument.  creates buffered area around bounding box points, units degrees. north arrow scale bar also placed map defined northloc scaleloc arguments.  placement can chosen \"tl\", \"tr\", \"bl\", \"br\" top-left, top-right, bottom-left, bottom-right respectively.  Setting either arguments NULL suppress placement map.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze results with maps — anlzMWRmap","text":"","code":"# results data path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # accuracy path accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx', package = 'MassWateR')  # accuracy data accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed!  # site data path sitpth <- system.file('extdata/ExampleSites.xlsx', package = 'MassWateR')  # site data sitdat <- readMWRsites(sitpth) #> Running checks on site metadata... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for missing latitude or longitude values... OK #> \tChecking for non-numeric values in latitude... OK #> \tChecking for non-numeric values in longitude... OK #> \tChecking for positive values in longitude... OK #> \tChecking for missing entries for Monitoring Location ID... OK #>  #> All checks passed!  # map with NHD water bodies anlzMWRmap(res = resdat, param = 'DO', acc = accdat, sit = sitdat, addwater = \"nhd\") #> Warning: No spatial information for sites: CND-036, HBS-031, HBS-057, HBS-057P, HBS-076, HBS-080P, HBS-085, HBS-088P, HBS-095P, HBS-098, LND-007, SUD-236, SUD-293   # map with OpenStreetMap water bodies anlzMWRmap(res = resdat, param = 'DO', acc = accdat, sit = sitdat, addwater = \"osm\") #> Warning: No spatial information for sites: CND-036, HBS-031, HBS-057, HBS-057P, HBS-076, HBS-080P, HBS-085, HBS-088P, HBS-095P, HBS-098, LND-007, SUD-236, SUD-293   # map without water bodies, base map included anlzMWRmap(res = resdat, param = 'DO', acc = accdat, sit = sitdat, maptype = 'terrain',    addwater = NULL) #> Warning: No spatial information for sites: CND-036, HBS-031, HBS-057, HBS-057P, HBS-076, HBS-080P, HBS-085, HBS-088P, HBS-095P, HBS-098, LND-007, SUD-236, SUD-293"},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRoutlier.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze outliers in results file — anlzMWRoutlier","title":"Analyze outliers in results file — anlzMWRoutlier","text":"Analyze outliers results file","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRoutlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze outliers in results file — anlzMWRoutlier","text":"","code":"anlzMWRoutlier(   res,   param,   acc,   type = c(\"box\", \"jitterbox\", \"jitter\"),   group,   dtrng = NULL,   repel = TRUE,   outliers = FALSE,   labsize = 3,   fill = \"lightgrey\",   alpha = 0.8,   width = 0.8,   yscl = c(\"auto\", \"log\", \"linear\"),   ttlsize = 1.2,   runchk = TRUE,   warn = TRUE )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRoutlier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze outliers in results file — anlzMWRoutlier","text":"res character string path results file data.frame results returned readMWRresults param character string parameter plot, must conform entries \"Simple Parameter\" column paramsMWR acc character string path data quality objectives file accuracy data.frame returned readMWRacc type character indicating \"box\", \"jitterbox\", \"jitter\", see details group character indicating whether summaries grouped month, site, week year dtrng character string length two date ranges YYYY-MM-DD, optional repel logical indicating overlapping outlier labels offset outliers logical indicating outliers returned console instead plotting labsize numeric indicating font size outlier labels fill numeric indicating fill color boxplots alpha numeric 0 1 indicating transparency fill color width numeric width boxplots yscl character indicating one \"auto\" (default), \"log\", \"linear\", see details ttlsize numeric value indicating font size title relative text plot runchk logical run data checks checkMWRresults checkMWRacc, applies res acc file paths warn logical return warnings console (default)","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRoutlier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze outliers in results file — anlzMWRoutlier","text":"ggplot object can modified outliers = FALSE, otherwise data frame outliers returned.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRoutlier.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze outliers in results file — anlzMWRoutlier","text":"Outliers defined following standard ggplot definition 1.5 times inter-quartile range boxplot.  data frame returned outliers = TRUE may vary based boxplot groupings defined group. Specifying type = \"box\" (default) produce standard boxplots.  Specifying type = \"jitterbox\" produce boxplots non-outlier observations jittered top.  Specifying type = \"jitter\" suppress boxplots show jittered points outliers. Specifying group = \"week\" group samples week year using integer specifying week.  Note can common month/day indicating start week years integer way compare summaries results data span multiple years. y-axis scaling arithmetic (linear) logarithmic can set yscl argument.  yscl = \"auto\" (default), scaling  determined automatically data quality objective file accuracy, .e., parameters \"log\" columns plotted log10-scale, otherwise arithmetic. Setting yscl = \"linear\" yscl = \"log\" set axis linear log10-scale, respectively, regardless information data quality objective file accuracy. entries resdat \"Result Value\" column \"BDL\" \"AQL\" replaced appropriate values \"Quantitation Limit\" column, present, otherwise \"MDL\" \"UQL\" columns data quality objectives file accuracy used.  Values \"BDL\" use one half appropriate limit.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRoutlier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze outliers in results file — anlzMWRoutlier","text":"","code":"# results data path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # accuracy path accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx',       package = 'MassWateR')  # accuracy data accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed!  # outliers by month anlzMWRoutlier(res = resdat, param = 'DO', acc = accdat, group = 'month')   # outliers by site anlzMWRoutlier(res = resdat, param = 'DO', acc = accdat, group = 'site')   # outliers by site, May through July 2021 only anlzMWRoutlier(res = resdat, param = 'DO', acc = accdat, group = 'site',       dtrng = c('2021-05-01', '2021-07-31'))   # outliers by month, type as jitterbox anlzMWRoutlier(res = resdat, param = 'DO', acc = accdat, group = 'month', type = 'jitterbox')   # outliers by month, type as jitter anlzMWRoutlier(res = resdat, param = 'DO', acc = accdat, group = 'month', type = 'jitter')   # data frame output anlzMWRoutlier(res = resdat, param = 'DO', acc = accdat, group = 'month', outliers = TRUE) #> # A tibble: 7 × 6 #>   `Monitoring Location ID` `Activity Start Date` Activ…¹ Chara…² Resul…³ Resul…⁴ #>   <chr>                    <date>                <chr>   <chr>     <dbl> <chr>   #> 1 SUD-293                  2021-03-21            08:16   DO         9.32 mg/l    #> 2 LND-007                  2021-05-19            06:35   DO         3.05 mg/l    #> 3 HBS-080P                 2021-05-19            09:29   DO        14.4  mg/l    #> 4 HBS-080P                 2021-05-19            09:33   DO        14.1  mg/l    #> 5 HBS-095P                 2021-06-14            05:17   DO        14.7  mg/l    #> 6 SUD-005                  2021-11-14            07:15   DO         8.44 mg/l    #> 7 HBS-016                  2021-11-14            07:25   DO         7.11 mg/l    #> # … with abbreviated variable names ¹​`Activity Start Time`, #> #   ²​`Characteristic Name`, ³​`Result Value`, ⁴​`Result Unit`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRoutlierall.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze outliers in results file for all parameters — anlzMWRoutlierall","title":"Analyze outliers in results file for all parameters — anlzMWRoutlierall","text":"Analyze outliers results file parameters","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRoutlierall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze outliers in results file for all parameters — anlzMWRoutlierall","text":"","code":"anlzMWRoutlierall(   res,   acc,   fig_height = 4,   fig_width = 8,   format = c(\"word\", \"png\"),   output_dir,   output_file = NULL,   type = c(\"box\", \"jitterbox\", \"jitter\"),   group,   dtrng = NULL,   repel = TRUE,   outliers = FALSE,   labsize = 3,   fill = \"lightgrey\",   alpha = 0.8,   width = 0.8,   yscl = c(\"auto\", \"log\", \"linear\"),   ttlsize = 1.2,   runchk = TRUE,   warn = TRUE )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRoutlierall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze outliers in results file for all parameters — anlzMWRoutlierall","text":"res character string path results file data.frame results returned readMWRresults acc character string path data quality objectives file accuracy data.frame returned readMWRacc fig_height numeric plot heights inches fig_width numeric plot width inches format character string indicating results placed word file separate png files output_dir output_dir character string output directory results output_file optional character string file name format = \"word\" type character indicating \"box\", \"jitterbox\", \"jitter\", see details group character indicating whether summaries grouped month, site, week year dtrng character string length two date ranges YYYY-MM-DD, optional repel logical indicating overlapping outlier labels offset outliers logical indicating outliers returned console instead plotting labsize numeric indicating font size outlier labels fill numeric indicating fill color boxplots alpha numeric 0 1 indicating transparency fill color width numeric width boxplots yscl character indicating one \"auto\" (default), \"log\", \"linear\", see details ttlsize numeric value indicating font size title relative text plot runchk logical run data checks checkMWRresults checkMWRacc, applies res acc file paths warn logical return warnings console (default)","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRoutlierall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze outliers in results file for all parameters — anlzMWRoutlierall","text":"word document named outlierall.docx (name passed output_file) format = \"word\" separate png files parameter format = \"png\" saved directory specified output_dir","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRoutlierall.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze outliers in results file for all parameters — anlzMWRoutlierall","text":"function wrapper anlzMWRoutlier create plots parameters appropriate data water quality monitoring results","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRoutlierall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze outliers in results file for all parameters — anlzMWRoutlierall","text":"","code":"# results data path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # accuracy path accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx',       package = 'MassWateR')  # accuracy data accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed!  if (FALSE) { # create word output anlzMWRoutlierall(resdat, accdat, group = 'month', format = 'word', output_dir = getwd())  # create png output anlzMWRoutlierall(resdat, accdat, group = 'month', format = 'png', output_dir = getwd()) }"},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRseason.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze seasonal trends in results file — anlzMWRseason","title":"Analyze seasonal trends in results file — anlzMWRseason","text":"Analyze seasonal trends results file","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRseason.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze seasonal trends in results file — anlzMWRseason","text":"","code":"anlzMWRseason(   res,   param,   acc,   sit = NULL,   thresh,   group = c(\"month\", \"week\"),   type = c(\"box\", \"jitterbox\", \"bar\", \"jitterbar\", \"jitter\"),   threshcol = \"tan\",   site = NULL,   resultatt = NULL,   locgroup = NULL,   dtrng = NULL,   confint = FALSE,   fill = \"lightblue\",   alpha = 0.8,   width = 0.8,   yscl = c(\"auto\", \"log\", \"linear\"),   ttlsize = 1.2,   runchk = TRUE,   warn = TRUE )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRseason.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze seasonal trends in results file — anlzMWRseason","text":"res character string path results file data.frame results returned readMWRresults param character string parameter plot, must conform entries \"Simple Parameter\" column paramsMWR acc character string path data quality objectives file accuracy data.frame returned readMWRacc sit optional character string path site metadata file data.frame site metadata returned readMWRsites, required locgroup NULL thresh character indicating relevant freshwater marine threshold lines included, one \"fresh\", \"marine\", \"none\" group character indicating whether summaries grouped month (default) week year type character indicating \"box\", \"jitterbox\", \"bar\", \"jitterbar\" \"jitter\", see details threshcol character indicating color threshold lines available site character string sites include, default resultatt character string result attributes plot, default locgroup character string location groups plot \"Location Group\" column site metadata file, optional sit NULL dtrng character string length two date ranges YYYY-MM-DD, default confint logical indicating confidence intervals shown, applies type = \"bar\" fill numeric indicating fill color boxplots barplots alpha numeric 0 1 indicating transparency fill color width numeric width boxplots barplots yscl character indicating one \"auto\" (default), \"log\", \"linear\", see details ttlsize numeric value indicating font size title relative text plot runchk logical run data checks checkMWRresults checkMWRacc, applies res acc file paths warn logical return warnings console (default)","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRseason.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze seasonal trends in results file — anlzMWRseason","text":"ggplot object can modified.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRseason.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze seasonal trends in results file — anlzMWRseason","text":"Summaries parameter shown boxplots type = \"box\" barplots type = \"bar\".  Points can jittered boxplots setting type = \"jitterbox\" jittered barplots setting type = \"jitterbar\".  Setting type = \"jitter\" show jittered points.  type = \"bar\" type = \"jitterbar\", 95% confidence intervals can also shown confint = TRUE can estimated (.e., one result value per bar). Specifying group = \"week\" group samples week year using integer specifying week.  Note can common month/day indicating start week years integer way compare summaries results data span multiple years. Threshold lines applicable marine freshwater environments can included plot using thresh argument.  thresholds specific parameter can found thresholdMWR file.  Threshold lines plotted parameters entries thresholdMWR value `Result Unit` matches thresholdMWR. threshold lines can suppressed setting thresh = 'none'. y-axis scaling arithmetic (linear) logarithmic can set yscl argument.  yscl = \"auto\" (default), scaling  determined automatically data quality objective file accuracy, .e., parameters \"log\" columns plotted log10-scale, otherwise arithmetic. Setting yscl = \"linear\" yscl = \"log\" set axis linear log10-scale, respectively, regardless information data quality objective file accuracy. means confidence intervals vary arithmetic log-scaling type = \"bar\". entries resdat \"Result Value\" column \"BDL\" \"AQL\" replaced appropriate values \"Quantitation Limit\" column, present, otherwise \"MDL\" \"UQL\" columns data quality objectives file accuracy used.  Values \"BDL\" use one half appropriate limit.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRseason.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze seasonal trends in results file — anlzMWRseason","text":"","code":"# results data path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # accuracy path accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx',       package = 'MassWateR')  # accuracy data accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed!  # site data path sitpth <- system.file('extdata/ExampleSites.xlsx', package = 'MassWateR')  # site data sitdat <- readMWRsites(sitpth) #> Running checks on site metadata... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for missing latitude or longitude values... OK #> \tChecking for non-numeric values in latitude... OK #> \tChecking for non-numeric values in longitude... OK #> \tChecking for positive values in longitude... OK #> \tChecking for missing entries for Monitoring Location ID... OK #>  #> All checks passed!  # seasonal trends by month, boxplot anlzMWRseason(res = resdat, param = 'DO', acc = accdat, thresh = 'fresh', group = 'month',       type = 'box')   # seasonal trends by week, boxplot anlzMWRseason(res = resdat, param = 'DO', acc = accdat, thresh = 'fresh', group = 'week',       type = 'box')   # seasonal trends by month, May to July only anlzMWRseason(res = resdat, param = 'DO', acc = accdat, thresh = 'fresh', group = 'month',       type = 'bar', dtrng = c('2021-05-01', '2021-07-31'))        # seasonal trends by month, barplot anlzMWRseason(res = resdat, param = 'DO', acc = accdat, thresh = 'fresh', group = 'month',       type = 'bar')   # seasonal trends by week, barplot anlzMWRseason(res = resdat, param = 'DO', acc = accdat, thresh = 'fresh', group = 'week',       type = 'bar')        # seasonal trends by location group, requires sitdat anlzMWRseason(res = resdat, param = 'DO', acc = accdat, sit = sitdat, thresh = 'fresh',       group = 'month', type = 'box', locgroup = 'Concord')"},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRsite.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze data by sites in results file — anlzMWRsite","title":"Analyze data by sites in results file — anlzMWRsite","text":"Analyze data sites results file","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRsite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze data by sites in results file — anlzMWRsite","text":"","code":"anlzMWRsite(   res,   param,   acc,   sit = NULL,   type = c(\"box\", \"jitterbox\", \"bar\", \"jitterbar\", \"jitter\"),   thresh,   threshcol = \"tan\",   site = NULL,   resultatt = NULL,   locgroup = NULL,   dtrng = NULL,   confint = FALSE,   fill = \"lightgreen\",   alpha = 0.8,   width = 0.8,   yscl = c(\"auto\", \"log\", \"linear\"),   byresultatt = FALSE,   ttlsize = 1.2,   runchk = TRUE,   warn = TRUE )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRsite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze data by sites in results file — anlzMWRsite","text":"res character string path results file data.frame results returned readMWRresults param character string parameter plot, must conform entries \"Simple Parameter\" column paramsMWR acc character string path data quality objectives file accuracy data.frame returned readMWRacc sit optional character string path site metadata file data.frame site metadata returned readMWRsites, required locgroup NULL type character indicating \"box\", \"jitterbox\", \"bar\", \"jitterbar\" \"jitter\", see details thresh character indicating relevant freshwater marine threshold lines included, one \"fresh\", \"marine\", \"none\" threshcol character indicating color threshold lines available site character string sites include, default resultatt character string result attributes plot, default locgroup character string location groups plot \"Location Group\" column site metadata file, optional sit NULL dtrng character string length two date ranges YYYY-MM-DD, default confint logical indicating confidence intervals shown, applies type = \"bar\" fill numeric indicating fill color boxplots barplots alpha numeric 0 1 indicating transparency fill color width numeric width boxplots barplots yscl character indicating one \"auto\" (default), \"log\", \"linear\", see details byresultatt logical indicating plot sites grouped separately result attributes, see details ttlsize numeric value indicating font size title relative text plot runchk logical run data checks checkMWRresults checkMWRacc, applies res acc file paths warn logical return warnings console (default)","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRsite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze data by sites in results file — anlzMWRsite","text":"ggplot object can modified.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRsite.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze data by sites in results file — anlzMWRsite","text":"Summaries parameter site shown boxplots type = \"box\" barplots type = \"bar\".  Points can jittered boxplots setting type = \"jitterbox\" jittered barplots setting type = \"jitterbar\".  Setting type = \"jitter\" show jittered points.  type = \"bar\" type = \"jitterbar\", 95% confidence intervals can also shown confint = TRUE can estimated (.e., one result value per bar). Threshold lines applicable marine freshwater environments can included plot using thresh argument.  thresholds specific parameter can found thresholdMWR file.  Threshold lines plotted parameters entries thresholdMWR value `Result Unit` matches thresholdMWR. threshold lines can suppressed setting thresh = 'none'. y-axis scaling arithmetic (linear) logarithmic can set yscl argument.  yscl = \"auto\" (default), scaling  determined automatically data quality objective file accuracy, .e., parameters \"log\" columns plotted log10-scale, otherwise arithmetic. Setting yscl = \"linear\" yscl = \"log\" set axis linear log10-scale, respectively, regardless information data quality objective file accuracy. means confidence intervals vary arithmetic log-scaling type = \"bar\". entries resdat \"Result Value\" column \"BDL\" \"AQL\" replaced appropriate values \"Quantitation Limit\" column, present, otherwise \"MDL\" \"UQL\" columns data quality objectives file accuracy used.  Values \"BDL\" use one half appropriate limit. byresultatt argument can used group sites separately result attributes.  example, sites E. coli samples can grouped \"Dry\" \"Wet\" conditions present \"Result Attribute\" column.   Filtering sites first using site argument advised reduce amount data plotted. grouping can filtered passing appropriate values \"Result Attribute\" column resultatt argument. Note specifying result attributes resultatt setting byresultatt = FALSE filter plot data result attributes plot results separately.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/anlzMWRsite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze data by sites in results file — anlzMWRsite","text":"","code":"# results data path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # accuracy path accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx',       package = 'MassWateR')  # accuracy data accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed!  # site data path sitpth <- system.file('extdata/ExampleSites.xlsx', package = 'MassWateR')  # site data sitdat <- readMWRsites(sitpth) #> Running checks on site metadata... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for missing latitude or longitude values... OK #> \tChecking for non-numeric values in latitude... OK #> \tChecking for non-numeric values in longitude... OK #> \tChecking for positive values in longitude... OK #> \tChecking for missing entries for Monitoring Location ID... OK #>  #> All checks passed!  # site trends, boxplot anlzMWRsite(res = resdat, param = 'DO', acc = accdat, type = 'box', thresh = 'fresh')   # site trends, barplot anlzMWRsite(res = resdat, param = 'DO', acc = accdat, type = 'bar', thresh = 'fresh')   # site trends, May to July only anlzMWRsite(res = resdat, param = 'DO', acc = accdat, type = 'box', thresh = 'fresh',      dtrng = c('2021-05-01', '2021-07-31'))        # grouping by result attribute anlzMWRsite(res = resdat, param = 'E.coli', acc = accdat, type = 'box', thresh = 'fresh',      site = c('ABT-077', 'ABT-162', 'CND-009', 'CND-110', 'HBS-016', 'HBS-031'),      byresultatt = TRUE)        # site trends by location group, requires sitdat anlzMWRsite(res = resdat, param = 'DO', acc = accdat, sit = sitdat, type = 'box',       thresh = 'fresh', locgroup = 'Concord')"},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRacc.html","id":null,"dir":"Reference","previous_headings":"","what":"Check data quality objective accuracy data — checkMWRacc","title":"Check data quality objective accuracy data — checkMWRacc","text":"Check data quality objective accuracy data","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRacc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check data quality objective accuracy data — checkMWRacc","text":"","code":"checkMWRacc(accdat)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRacc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check data quality objective accuracy data — checkMWRacc","text":"accdat input data frame","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRacc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check data quality objective accuracy data — checkMWRacc","text":"accdat returned errors found, otherwise informative error message returned prompting user make required correction raw data proceeding.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRacc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check data quality objective accuracy data — checkMWRacc","text":"function used internally within readMWRacc run several checks input data completeness conformance WQX requirements following checks made: Column name spelling: following: Parameter, uom, MDL, UQL, Value Range, Field Duplicate, Lab Duplicate, Field Blank, Lab Blank, Spike/Check Accuracy Columns present: columns previous check present Column types: columns characters/text, except MDL UQL Unrecognized characters: Fields describing accuracy checks include symbols text \\(<=\\), \\(\\leq\\), \\(<\\), \\(>=\\), \\(\\geq\\), \\(>\\), \\(\\pm\\), %, BDL, AQL, log, Parameter: match parameter names Simple Parameter WQX Parameter columns paramsMWR data Units: missing entries units (uom), except pH can blank Single unit: unique Parameter one type units (uom) Correct units: unique Parameter entry units (uom) matches one acceptable values Units measure column paramsMWR data","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRacc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check data quality objective accuracy data — checkMWRacc","text":"","code":"accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx', package = 'MassWateR')  accdat <- readxl::read_excel(accpth, na = c('NA', 'na', ''))         checkMWRacc(accdat) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed! #> # A tibble: 21 × 10 #>    Parameter   uom     MDL   UQL Value…¹ Field…² Lab D…³ Field…⁴ Lab B…⁵ Spike…⁶ #>    <chr>       <chr> <dbl> <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 Water Temp  deg C NA       NA all     <= 10%  <= 10%  NA      NA      NA      #>  2 pH          s.u.  NA       NA all     <= 0.5  <= 0.5  NA      NA      <= 0.2  #>  3 DO          mg/l   0.1     NA < 4     <= 20%  <= 20%  < 0.1   < 0.1   <= 5%   #>  4 DO          mg/l   0.1     NA >= 4    <= 10%  <= 10%  < 0.1   < 0.1   <= 5%   #>  5 Sp Conduct… uS/cm  1       NA < 250   <= 30%  <= 20%  < 25    < 25    <= 50   #>  6 Sp Conduct… uS/cm  1       NA >= 250  <= 20%  <= 10%  < 25    < 25    <= 50   #>  7 TSS         mg/l   1       NA < 3     <= 1    <= 20%  BDL     BDL     NA      #>  8 TSS         mg/l   1       NA >= 3    <= 30%  <= 20%  BDL     BDL     NA      #>  9 TP          mg/l   0.01    NA < 0.05  <= 0.02 <= 0.01 BDL     BDL     <= 0.01 #> 10 TP          mg/l   0.01    NA >= 0.05 <= 30%  <= 20%  BDL     BDL     <= 15%  #> # … with 11 more rows, and abbreviated variable names ¹​`Value Range`, #> #   ²​`Field Duplicate`, ³​`Lab Duplicate`, ⁴​`Field Blank`, ⁵​`Lab Blank`, #> #   ⁶​`Spike/Check Accuracy`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRfrecom.html","id":null,"dir":"Reference","previous_headings":"","what":"Check data quality objective frequency and completeness data — checkMWRfrecom","title":"Check data quality objective frequency and completeness data — checkMWRfrecom","text":"Check data quality objective frequency completeness data","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRfrecom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check data quality objective frequency and completeness data — checkMWRfrecom","text":"","code":"checkMWRfrecom(frecomdat)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRfrecom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check data quality objective frequency and completeness data — checkMWRfrecom","text":"frecomdat input data frame","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRfrecom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check data quality objective frequency and completeness data — checkMWRfrecom","text":"frecomdat returned errors found, otherwise informative error message returned prompting user make required correction raw data proceeding.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRfrecom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check data quality objective frequency and completeness data — checkMWRfrecom","text":"function used internally within readMWRfrecom run several checks input data frequency completeness conformance WQX requirements following checks made: Column name spelling: following: Parameter, Field Duplicate, Lab Duplicate, Field Blank, Lab Blank, Spike/Check Accuracy, % Completeness Columns present: columns previous check present Non-numeric values: Values entered columns first numeric Values outside 0 - 100: Values entered columns first outside 0 100 Parameter: match parameter names Simple Parameter WQX Parameter columns paramsMWR data","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRfrecom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check data quality objective frequency and completeness data — checkMWRfrecom","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  frecompth <- system.file('extdata/ExampleDQOFrequencyCompleteness.xlsx',       package = 'MassWateR')  frecomdat <- suppressMessages(readxl::read_excel(frecompth,        skip = 1, na = c('NA', 'na', ''),        col_types = c('text', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric')     )) %>%      rename(`% Completeness` = `...7`)      checkMWRfrecom(frecomdat) #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed! #> # A tibble: 11 × 7 #>    Parameter    `Field Duplicate` Lab Duplicat…¹ Field…² Lab B…³ Spike…⁴ % Com…⁵ #>    <chr>                    <dbl>          <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 Water Temp                  10             10      NA      NA      NA      90 #>  2 pH                          10             10      NA      NA      10      90 #>  3 DO                          10             10      NA      10      10      90 #>  4 Conductivity                10             10      NA      10      10      90 #>  5 TSS                         10              5      10       5       5      90 #>  6 TP                          10              5      10       5       5      90 #>  7 Ortho P                     10              5      10       5       5      90 #>  8 Nitrate                     10              5      10       5       5      90 #>  9 Ammonia                     10              5      10       5       5      90 #> 10 Chloride                    10              5      10       5       5      90 #> 11 Chl a                       10              5      10       5       5      90 #> # … with abbreviated variable names ¹​`Lab Duplicate`, ²​`Field Blank`, #> #   ³​`Lab Blank`, ⁴​`Spike/Check Accuracy`, ⁵​`% Completeness`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRresults.html","id":null,"dir":"Reference","previous_headings":"","what":"Check water quality monitoring results — checkMWRresults","title":"Check water quality monitoring results — checkMWRresults","text":"Check water quality monitoring results","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRresults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check water quality monitoring results — checkMWRresults","text":"","code":"checkMWRresults(resdat, warn = TRUE)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRresults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check water quality monitoring results — checkMWRresults","text":"resdat input data frame results warn logical return warnings console (default)","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRresults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check water quality monitoring results — checkMWRresults","text":"resdat returned errors found, otherwise informative error message returned prompting user make required correction raw data proceeding. Checks warnings can fixed discretion user proceeding.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRresults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check water quality monitoring results — checkMWRresults","text":"function used internally within readMWRresults run several checks input data completeness conformance WQX requirements. following checks made: Column name spelling: following: Monitoring Location ID, Activity Type, Activity Start Date, Activity Start Time, Activity Depth/Height Measure, Activity Depth/Height Unit, Activity Relative Depth Name, Characteristic Name, Result Value, Result Unit, Quantitation Limit, QC Reference Value, Result Measure Qualifier, Result Attribute. Columns present: columns previous check present, Result Attribute optional Activity Type: one Field Msr/Obs, Sample-Routine, Quality Control Sample-Field Blank, Quality Control Sample-Lab Blank, Quality Control Sample-Lab Duplicate, Quality Control Sample-Lab Spike, Quality Control Field Calibration Check Date formats: mm/dd/yyyy parsed correctly import Time formats: HH:MM parsed correctly import, missing entries okay Non-numeric Activity Depth/Height Measure: depth values numbers, excluding missing values Activity Depth/Height Unit: entries ft, m, blank Activity Depth/Height Measure range: depth values less equal 1 meter 3.3 feet (warning ) Activity Relative Depth Name: either Surface, Bottom, Midwater, Near Bottom, blank (warning ) Characteristic Name: match parameter names Simple Parameter WQX Parameter columns paramsMWR data (warning ) Result Value: numeric value text value AQL BDL QC Reference Value: numeric value text value AQL BDL Result Unit: missing entries Result Unit, except pH can blank Single Result Unit: unique parameter Characteristic Name one entry Result Unit Correct Result Unit: unique parameter Characteristic Name entry Result Unit matches one acceptable values Units measure column paramsMWR data","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRresults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check water quality monitoring results — checkMWRresults","text":"","code":"respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  resdat <- readxl::read_excel(respth,    col_types = c('text', 'text', 'date', 'date', 'text', 'text', 'text', 'text', 'text', 'text',               'text', 'text', 'text', 'text'))               checkMWRresults(resdat) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))! #> # A tibble: 2,652 × 14 #>    Monitoring …¹ Activ…² Activity Start Da…³ Activity Start Ti…⁴ Activ…⁵ Activ…⁶ #>    <chr>         <chr>   <dttm>              <dttm>              <chr>   <chr>   #>  1 HBS-016       Field … 2021-01-14 00:00:00 1899-12-31 09:22:00 3       ft      #>  2 LND-007       Field … 2021-01-14 00:00:00 1899-12-31 09:50:00 3       ft      #>  3 HBS-031       Field … 2021-01-14 00:00:00 1899-12-31 10:05:00 3       ft      #>  4 HBS-057       Field … 2021-01-14 00:00:00 1899-12-31 10:30:00 3       ft      #>  5 HBS-065       Field … 2021-01-14 00:00:00 1899-12-31 10:40:00 3       ft      #>  6 CRN-002       Field … 2021-01-14 00:00:00 1899-12-31 11:30:00 3       ft      #>  7 HBS-076       Field … 2021-01-14 00:00:00 1899-12-31 11:58:00 3       ft      #>  8 HBS-085       Field … 2021-01-14 00:00:00 1899-12-31 12:10:00 3       ft      #>  9 HBS-095       Field … 2021-01-14 00:00:00 1899-12-31 12:20:00 3       ft      #> 10 HBS-016       Field … 2021-02-15 00:00:00 1899-12-31 08:50:00 3       ft      #> # … with 2,642 more rows, 8 more variables: #> #   `Activity Relative Depth Name` <chr>, `Characteristic Name` <chr>, #> #   `Result Value` <chr>, `Result Unit` <chr>, `Quantitation Limit` <chr>, #> #   `QC Reference Value` <chr>, `Result Measure Qualifier` <chr>, #> #   `Result Attribute` <chr>, and abbreviated variable names #> #   ¹​`Monitoring Location ID`, ²​`Activity Type`, ³​`Activity Start Date`, #> #   ⁴​`Activity Start Time`, ⁵​`Activity Depth/Height Measure`, …"},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRsites.html","id":null,"dir":"Reference","previous_headings":"","what":"Check site metadata file — checkMWRsites","title":"Check site metadata file — checkMWRsites","text":"Check site metadata file","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRsites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check site metadata file — checkMWRsites","text":"","code":"checkMWRsites(sitdat)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRsites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check site metadata file — checkMWRsites","text":"sitdat input data frame","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRsites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check site metadata file — checkMWRsites","text":"sitdat returned errors found, otherwise informative error message returned prompting user make required correction raw data proceeding.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRsites.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check site metadata file — checkMWRsites","text":"function used internally within readMWRsites run several checks input data completeness conformance WQX requirements following checks made: Column name spelling: following: Monitoring Location ID, Monitoring Location Name, Monitoring Location Latitude, Monitoring Location Longitude, Location Group Columns present: columns previous check present Missing longitude latitude: missing entries Monitoring Location Latitude Monitoring Location Longitude Non-numeric latitude values: Values entered Monitoring Location Latitude must numeric Non-numeric longitude values: Values entered Monitoring Location Longitude must numeric Positive longitude values: Values Monitoring Location Longitude must negative Missing Location ID: missing entries Monitoring Location ID","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/checkMWRsites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check site metadata file — checkMWRsites","text":"","code":"library(dplyr)  sitpth <- system.file('extdata/ExampleSites.xlsx', package = 'MassWateR')  sitdat <- readxl::read_excel(sitpth, na = c('NA', 'na', ''))      checkMWRsites(sitdat) #> Running checks on site metadata... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for missing latitude or longitude values... OK #> \tChecking for non-numeric values in latitude... OK #> \tChecking for non-numeric values in longitude... OK #> \tChecking for positive values in longitude... OK #> \tChecking for missing entries for Monitoring Location ID... OK #>  #> All checks passed! #> # A tibble: 58 × 5 #>    `Monitoring Location ID` `Monitoring Location Name`   Monit…¹ Monit…² Locat…³ #>    <chr>                    <chr>                          <dbl>   <dbl> <chr>   #>  1 ABT-010                  477 Lowell Rd, Concord          42.5   -71.4 Lower … #>  2 ABT-026                  Rte 2, Concord                  42.5   -71.4 Lower … #>  3 ABT-033                  Rte 62, W Concord               42.5   -71.4 Lower … #>  4 ABT-044                  Rte 62 (Damonmill), W Conco…    42.5   -71.4 Lower … #>  5 ABT-047                  Damonmill dam                   42.5   -71.4 Lower … #>  6 ABT-062                  Rte 62, Acton                   42.4   -71.4 Lower … #>  7 ABT-063                  Rte 62, Acton upstream          42.4   -71.4 Lower … #>  8 ABT-077                  Rte 27/USGS, Maynard            42.4   -71.4 Lower … #>  9 ABT-095                  White Pond Rd, Stow             42.4   -71.5 Impoun… #> 10 ABT-134                  Sudbury Rd, Stow                42.4   -71.5 Impoun… #> # … with 48 more rows, and abbreviated variable names #> #   ¹​`Monitoring Location Latitude`, ²​`Monitoring Location Longitude`, #> #   ³​`Location Group`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRacc.html","id":null,"dir":"Reference","previous_headings":"","what":"Format data quality objective accuracy data — formMWRacc","title":"Format data quality objective accuracy data — formMWRacc","text":"Format data quality objective accuracy data","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRacc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format data quality objective accuracy data — formMWRacc","text":"","code":"formMWRacc(accdat)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRacc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format data quality objective accuracy data — formMWRacc","text":"accdat input data fram","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRacc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format data quality objective accuracy data — formMWRacc","text":"function used internally within readMWRacc format input data downstream analysis.  formatting includes: Minor formatting units: conformance WQX, e.g., ppt changed ppth, s.u. changed NA uom Convert Parameter: parameters converted Simple Parameter paramsMWR needed Remove unicode: Remove replace unicode characters can used logical expressions qcMWRacc, e.g., replace \\(\\geq\\) \\(>=\\)","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRacc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format data quality objective accuracy data — formMWRacc","text":"","code":"accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx', package = 'MassWateR')  accdat <- readxl::read_excel(accpth, na = c('NA', 'na', ''))   formMWRacc(accdat) #> # A tibble: 21 × 10 #>    Parameter   uom     MDL   UQL Value…¹ Field…² Lab D…³ Field…⁴ Lab B…⁵ Spike…⁶ #>    <chr>       <chr> <dbl> <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 Water Temp  deg C NA       NA all     <= 10%  <= 10%  NA      NA      NA      #>  2 pH          NA    NA       NA all     <= 0.5  <= 0.5  NA      NA      <= 0.2  #>  3 DO          mg/l   0.1     NA < 4     <= 20%  <= 20%  < 0.1   < 0.1   <= 5%   #>  4 DO          mg/l   0.1     NA >= 4    <= 10%  <= 10%  < 0.1   < 0.1   <= 5%   #>  5 Sp Conduct… uS/cm  1       NA < 250   <= 30%  <= 20%  < 25    < 25    <= 50   #>  6 Sp Conduct… uS/cm  1       NA >= 250  <= 20%  <= 10%  < 25    < 25    <= 50   #>  7 TSS         mg/l   1       NA < 3     <= 1    <= 20%  BDL     BDL     NA      #>  8 TSS         mg/l   1       NA >= 3    <= 30%  <= 20%  BDL     BDL     NA      #>  9 TP          mg/l   0.01    NA < 0.05  <= 0.02 <= 0.01 BDL     BDL     <= 0.01 #> 10 TP          mg/l   0.01    NA >= 0.05 <= 30%  <= 20%  BDL     BDL     <= 15%  #> # … with 11 more rows, and abbreviated variable names ¹​`Value Range`, #> #   ²​`Field Duplicate`, ³​`Lab Duplicate`, ⁴​`Field Blank`, ⁵​`Lab Blank`, #> #   ⁶​`Spike/Check Accuracy`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRfrecom.html","id":null,"dir":"Reference","previous_headings":"","what":"Format data quality objective frequency and completeness data — formMWRfrecom","title":"Format data quality objective frequency and completeness data — formMWRfrecom","text":"Format data quality objective frequency completeness data","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRfrecom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format data quality objective frequency and completeness data — formMWRfrecom","text":"","code":"formMWRfrecom(frecomdat)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRfrecom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format data quality objective frequency and completeness data — formMWRfrecom","text":"frecomdat input data frame","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRfrecom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format data quality objective frequency and completeness data — formMWRfrecom","text":"function used internally within readMWRfrecom format input data downstream analysis.  formatting includes: Convert Parameter: parameters converted Simple Parameter paramsMWR needed","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRfrecom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format data quality objective frequency and completeness data — formMWRfrecom","text":"","code":"library(dplyr)  frecompth <- system.file('extdata/ExampleDQOFrequencyCompleteness.xlsx',       package = 'MassWateR')  frecomdat <- suppressMessages(readxl::read_excel(frecompth,        skip = 1, na = c('NA', 'na', ''),        col_types = c('text', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric')     )) %>%      rename(`% Completeness` = `...7`)      formMWRfrecom(frecomdat) #> # A tibble: 11 × 7 #>    Parameter    `Field Duplicate` Lab Duplicat…¹ Field…² Lab B…³ Spike…⁴ % Com…⁵ #>    <chr>                    <dbl>          <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 Water Temp                  10             10      NA      NA      NA      90 #>  2 pH                          10             10      NA      NA      10      90 #>  3 DO                          10             10      NA      10      10      90 #>  4 Conductivity                10             10      NA      10      10      90 #>  5 TSS                         10              5      10       5       5      90 #>  6 TP                          10              5      10       5       5      90 #>  7 Ortho P                     10              5      10       5       5      90 #>  8 Nitrate                     10              5      10       5       5      90 #>  9 Ammonia                     10              5      10       5       5      90 #> 10 Chloride                    10              5      10       5       5      90 #> 11 Chl a                       10              5      10       5       5      90 #> # … with abbreviated variable names ¹​`Lab Duplicate`, ²​`Field Blank`, #> #   ³​`Lab Blank`, ⁴​`Spike/Check Accuracy`, ⁵​`% Completeness`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRresults.html","id":null,"dir":"Reference","previous_headings":"","what":"Format water quality monitoring results — formMWRresults","title":"Format water quality monitoring results — formMWRresults","text":"Format water quality monitoring results","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRresults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format water quality monitoring results — formMWRresults","text":"","code":"formMWRresults(resdat, tzone = \"America/Jamaica\")"},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRresults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format water quality monitoring results — formMWRresults","text":"resdat input data frame results tzone character string time zone","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRresults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format water quality monitoring results — formMWRresults","text":"function used internally within readMWRresults format input data downstream analysis.  formatting includes: Fix date time inputs: Activity Start Date converted YYYY-MM-DD date object, Actvity Start Time convered HH:MM character fix artifacts Excel import, Minor formatting Result Unit: conformance WQX, e.g., ppt changed ppth, s.u. changed NA Convert characteristic names: parameters Characteristic Name converted Simple Parameter paramsMWR needed","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/formMWRresults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format water quality monitoring results — formMWRresults","text":"","code":"respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  resdat <- readxl::read_excel(respth,    col_types = c('text', 'text', 'date', 'date', 'text', 'text', 'text', 'text', 'text', 'text',               'text', 'text', 'text', 'text')) formMWRresults(resdat) #> # A tibble: 2,652 × 14 #>    Monitori…¹ Activ…² Activity…³ Activ…⁴ Activ…⁵ Activ…⁶ Activ…⁷ Chara…⁸ Resul…⁹ #>    <chr>      <chr>   <date>     <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 HBS-016    Field … 2021-01-14 09:22   3       ft      NA      Air Te… 2       #>  2 LND-007    Field … 2021-01-14 09:50   3       ft      NA      Air Te… 2       #>  3 HBS-031    Field … 2021-01-14 10:05   3       ft      NA      Air Te… 2       #>  4 HBS-057    Field … 2021-01-14 10:30   3       ft      NA      Air Te… 3       #>  5 HBS-065    Field … 2021-01-14 10:40   3       ft      NA      Air Te… 3       #>  6 CRN-002    Field … 2021-01-14 11:30   3       ft      NA      Air Te… 2       #>  7 HBS-076    Field … 2021-01-14 11:58   3       ft      NA      Air Te… 4       #>  8 HBS-085    Field … 2021-01-14 12:10   3       ft      NA      Air Te… 3.5     #>  9 HBS-095    Field … 2021-01-14 12:20   3       ft      NA      Air Te… 3       #> 10 HBS-016    Field … 2021-02-15 08:50   3       ft      NA      Air Te… 0.5     #> # … with 2,642 more rows, 5 more variables: `Result Unit` <chr>, #> #   `Quantitation Limit` <chr>, `QC Reference Value` <chr>, #> #   `Result Measure Qualifier` <chr>, `Result Attribute` <chr>, and abbreviated #> #   variable names ¹​`Monitoring Location ID`, ²​`Activity Type`, #> #   ³​`Activity Start Date`, ⁴​`Activity Start Time`, #> #   ⁵​`Activity Depth/Height Measure`, ⁶​`Activity Depth/Height Unit`, #> #   ⁷​`Activity Relative Depth Name`, ⁸​`Characteristic Name`, ⁹​`Result Value`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/paramsMWR.html","id":null,"dir":"Reference","previous_headings":"","what":"Master parameter list and units for Characteristic Name column in results data — paramsMWR","title":"Master parameter list and units for Characteristic Name column in results data — paramsMWR","text":"Master parameter list units Characteristic Name column results data","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/paramsMWR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Master parameter list and units for Characteristic Name column in results data — paramsMWR","text":"","code":"paramsMWR"},{"path":"https://massbays-tech.github.io/MassWateR/reference/paramsMWR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Master parameter list and units for Characteristic Name column in results data — paramsMWR","text":"data.frame 39 rows 6 columns","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/paramsMWR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Master parameter list and units for Characteristic Name column in results data — paramsMWR","text":"information used verify correct format input data minor formatting output data upload WQX.  column showing corresponding WQX names also included.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/paramsMWR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Master parameter list and units for Characteristic Name column in results data — paramsMWR","text":"","code":"if (FALSE) { library(readxl) library(dplyr)  paramsMWR <- read_excel('inst/extdata/ParameterMapping.xlsx') %>%    rename(Note = `...6`)  save(paramsMWR, file = 'data/paramsMWR.RData', compress = 'xz') }"},{"path":"https://massbays-tech.github.io/MassWateR/reference/pondsMWR.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple features object of ponds in Massachusetts — pondsMWR","title":"A simple features object of ponds in Massachusetts — pondsMWR","text":"simple features object ponds Massachusetts","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/pondsMWR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple features object of ponds in Massachusetts — pondsMWR","text":"","code":"pondsMWR"},{"path":"https://massbays-tech.github.io/MassWateR/reference/pondsMWR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A simple features object of ponds in Massachusetts — pondsMWR","text":"simple features object","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/pondsMWR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A simple features object of ponds in Massachusetts — pondsMWR","text":"geometries simplified using tolerance ten meters.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/pondsMWR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A simple features object of ponds in Massachusetts — pondsMWR","text":"","code":"if (FALSE) { library(sf) library(dplyr)  pondsMWR <- st_read('~/Desktop/NHD/NHDWaterbody_ftype_390-493_vis_101k_noattr.shp') %>%   st_make_valid() %>%   st_simplify(dTolerance = 10, preserveTopology = TRUE) %>%   st_transform(crs = 4326) %>%   select(dLevel)  save(pondsMWR, file = 'data/pondsMWR.RData', compress = 'xz') }"},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRacc.html","id":null,"dir":"Reference","previous_headings":"","what":"Run quality control accuracy checks for water quality monitoring results — qcMWRacc","title":"Run quality control accuracy checks for water quality monitoring results — qcMWRacc","text":"Run quality control accuracy checks water quality monitoring results","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRacc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run quality control accuracy checks for water quality monitoring results — qcMWRacc","text":"","code":"qcMWRacc(   res,   acc,   runchk = TRUE,   warn = TRUE,   accchk = c(\"Field Blanks\", \"Lab Blanks\", \"Field Duplicates\", \"Lab Duplicates\",     \"Lab Spikes\", \"Instrument Checks\"),   suffix = \"%\" )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRacc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run quality control accuracy checks for water quality monitoring results — qcMWRacc","text":"res character string path results file data.frame results returned readMWRresults acc character string path data quality objectives file accuracy data.frame returned readMWRacc runchk logical run data checks checkMWRresults checkMWRacc, applies res acc file paths warn logical return warnings console (default) accchk character string indicating accuracy check return, one \"Field Blanks\", \"Lab Blanks\", \"Field Duplicates\", \"Lab Duplicates\", \"Lab Spikes\", \"Instrument Checks\" suffix character string indicating suffix append percentage values","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRacc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run quality control accuracy checks for water quality monitoring results — qcMWRacc","text":"output shows accuracy checks input files returned list, element list corresponding specific accuracy check specified accchk.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRacc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run quality control accuracy checks for water quality monitoring results — qcMWRacc","text":"function can used inputs paths relevant files data frames returned readMWRresults readMWRacc.  former, full suite data checks can evaluated runkchk = T (default) suppressed runchk = F.  latter case, downstream analyses may work data formatted incorrectly. Note accuracy evaluated parameters Parameter column data quality objectives accuracy file.  warning returned parameters Parameter accuracy file Characteristic Name results file. Similarly, parameters results file Characteristic Name column found data quality objectives accuracy file evaluated.  warning returned parameters Characteristic Name results file Parameter accuracy file.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRacc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run quality control accuracy checks for water quality monitoring results — qcMWRacc","text":"","code":"## # using file paths  # results path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # accuracy path accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx', package = 'MassWateR')  qcMWRacc(res = respth, acc = accpth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))! #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed! #> Warning: Parameters in quality control objectives for accuracy not found in results data: Chloride #> Warning: Parameters in results not found in  quality control objectives for accuracy: Air Temp, DO saturation, Flow, Gage #> $`Field Blanks` #> # A tibble: 19 × 6 #>    Parameter Date       Site    Result        Threshold    `Hit/Miss` #>    <chr>     <date>     <chr>   <chr>         <chr>        <chr>      #>  1 Ammonia   2021-07-11 ABT-062 0.2 mg/l      0.05 mg/l    MISS       #>  2 Ammonia   2021-07-11 ABT-237 BDL           0.05 mg/l    NA         #>  3 Ammonia   2021-07-11 ABT-301 0.1 mg/l      0.05 mg/l    MISS       #>  4 Ammonia   2021-07-11 DAN-013 BDL           0.05 mg/l    NA         #>  5 Ammonia   2021-07-11 CND-036 0.02 mg/l     0.05 mg/l    NA         #>  6 Ammonia   2021-07-11 ABT-144 BDL           0.05 mg/l    NA         #>  7 Ammonia   2021-07-11 ABT-026 BDL           0.05 mg/l    NA         #>  8 E.coli    2021-09-13 SUD-236 BDL           10 cfu/100ml NA         #>  9 E.coli    2021-09-13 NSH-002 15 cfu/100ml  10 cfu/100ml MISS       #> 10 E.coli    2021-09-13 ABT-162 128 cfu/100ml 10 cfu/100ml MISS       #> 11 TP        2021-06-13 ABT-062 BDL           0.01 mg/l    NA         #> 12 TP        2021-06-13 CND-110 BDL           0.01 mg/l    NA         #> 13 TP        2021-06-13 CND-036 BDL           0.02 mg/l    NA         #> 14 TP        2021-06-13 CND-009 0.01 mg/l     0.01 mg/l    MISS       #> 15 TP        2021-06-13 HBS-016 0.1 mg/l      0.01 mg/l    MISS       #> 16 TP        2021-06-13 ABT-026 BDL           0.01 mg/l    NA         #> 17 TP        2021-06-13 NSH-002 BDL           0.01 mg/l    NA         #> 18 TP        2021-06-13 NSH-047 0.02 mg/l     0.01 mg/l    MISS       #> 19 TP        2021-06-15 CND-036 0.008 mg/l    0.01 mg/l    NA         #>  #> $`Lab Blanks` #> # A tibble: 22 × 6 #>    Parameter      Date       `Sample ID` Result    Threshold `Hit/Miss` #>    <chr>          <date>     <chr>       <chr>     <chr>     <chr>      #>  1 Ammonia        2021-02-15 NA          BDL       0.2 mg/l  NA         #>  2 Ammonia        2021-02-16 NA          0.01 mg/l 0.05 mg/l NA         #>  3 Ammonia        2021-07-11 NA          0.4 mg/l  0.05 mg/l MISS       #>  4 Ammonia        2021-07-11 NA          BDL       0.05 mg/l NA         #>  5 Ammonia        2021-07-11 NA          BDL       0.05 mg/l NA         #>  6 Ammonia        2021-07-11 NA          BDL       0.05 mg/l NA         #>  7 Ammonia        2021-07-11 NA          0.11 mg/l 0.05 mg/l MISS       #>  8 Ammonia        2021-07-11 NA          BDL       0.05 mg/l NA         #>  9 Ammonia        2021-07-11 NA          BDL       0.05 mg/l NA         #> 10 Sp Conductance 2021-04-11 NA          45 uS/cm  25 uS/cm  MISS       #> # … with 12 more rows #>  #> $`Field Duplicates` #> # A tibble: 95 × 7 #>    Parameter Date       Site    `Initial Result` `Dup. Result` Diff./R…¹ Hit/M…² #>    <chr>     <date>     <chr>   <chr>            <chr>         <chr>     <chr>   #>  1 E.coli    2021-06-07 RVM-001 530 cfu/100ml    600 cfu/100ml 2% logRPD NA      #>  2 E.coli    2021-06-07 RME-003 260 cfu/100ml    260 cfu/100ml 0% logRPD NA      #>  3 E.coli    2021-06-14 RVM-027 170 cfu/100ml    500 cfu/100ml 19% logR… NA      #>  4 E.coli    2021-06-14 HBS-057 10 cfu/100ml     12 cfu/100ml  8% logRPD NA      #>  5 E.coli    2021-06-28 RVM-022 280 cfu/100ml    45 cfu/100ml  39% logR… MISS    #>  6 E.coli    2021-06-28 SUD-096 50 cfu/100ml     45 cfu/100ml  3% logRPD NA      #>  7 E.coli    2021-07-06 RVM-001 890 cfu/100ml    950 cfu/100ml 1% logRPD NA      #>  8 E.coli    2021-07-19 CND-009 10 cfu/100ml     20 cfu/100ml  26% logR… NA      #>  9 E.coli    2021-07-19 RVM-001 10 cfu/100ml     30 cfu/100ml  39% logR… MISS    #> 10 E.coli    2021-07-26 HBS-031 192 cfu/100ml    60 cfu/100ml  25% logR… MISS    #> # … with 85 more rows, and abbreviated variable names ¹​`Diff./RPD`, ²​`Hit/Miss` #>  #> $`Lab Duplicates` #> # A tibble: 35 × 7 #>    Parameter Date       `Sample ID` `Initial Result` Dup. Resu…¹ Diff.…² Hit/M…³ #>    <chr>     <date>     <chr>       <chr>            <chr>       <chr>   <chr>   #>  1 E.coli    2021-07-12 R2546-9     40 cfu/100ml     10 cfu/100… 46% lo… MISS    #>  2 E.coli    2021-07-12 R2546-10    35 cfu/100ml     37 cfu/100… 2% log… NA      #>  3 E.coli    2021-07-19 R2546-11    100 cfu/100ml    400 cfu/10… 26% lo… MISS    #>  4 E.coli    2021-07-19 R2546-13    100 cfu/100ml    250 cfu/10… 18% lo… NA      #>  5 E.coli    2021-07-19 R2546-12    800 cfu/100ml    400 cfu/10… 11% lo… MISS    #>  6 E.coli    2021-09-13 R2546-8     128 cfu/100ml    150 cfu/10… 3% log… NA      #>  7 Nitrate   2021-05-16 K16452-MB1  0.8 mg/l         0.9 mg/l    12% RPD NA      #>  8 Nitrate   2021-05-16 K16453-MB1  0.3 mg/l         0.3 mg/l    0% RPD  NA      #>  9 Nitrate   2021-05-16 K16454-MB1  0.45 mg/l        0.3 mg/l    40% RPD MISS    #> 10 Nitrate   2021-05-16 K16452-MB2  0.8 mg/l         0.82 mg/l   2% RPD  NA      #> # … with 25 more rows, and abbreviated variable names ¹​`Dup. Result`, #> #   ²​`Diff./RPD`, ³​`Hit/Miss` #>  #> $`Lab Spikes` #> # A tibble: 35 × 7 #>    Parameter Date       `Sample ID` Spike     `Amt Recovered` % Recove…¹ Hit/M…² #>    <chr>     <date>     <chr>       <chr>     <chr>           <chr>      <chr>   #>  1 Nitrate   2021-05-16 NO3-1       0.8 mg/l  0.9 mg/l        112%       NA      #>  2 Nitrate   2021-05-16 NO3-2       0.3 mg/l  0.3 mg/l        100%       NA      #>  3 Nitrate   2021-05-16 NO3-3       0.45 mg/l 0.3 mg/l        67%        MISS    #>  4 Nitrate   2021-05-16 NO3-4       0.8 mg/l  0.82 mg/l       102%       NA      #>  5 Nitrate   2021-05-16 NO3-5       0.12 mg/l 0.15 mg/l       125%       MISS    #>  6 Nitrate   2021-05-16 NO3-6       0.34 mg/l 0.38 mg/l       112%       NA      #>  7 Ortho P   2021-02-12 NA          BDL       BDL             100%       NA      #>  8 Ortho P   2021-02-13 NA          0.02 mg/l BDL             50%        NA      #>  9 Ortho P   2021-02-14 NA          0.05 mg/l 0.04 mg/l       80%        NA      #> 10 Ortho P   2021-02-15 NA          0.06 mg/l 0.04 mg/l       67%        MISS    #> # … with 25 more rows, and abbreviated variable names ¹​`% Recovery`, #> #   ²​`Hit/Miss` #>  #> $`Instrument Checks` #> # A tibble: 22 × 7 #>    Parameter      Date       `Sample ID` Calibration S…¹ Instr…² Accur…³ Hit/M…⁴ #>    <chr>          <date>     <chr>       <chr>           <chr>   <chr>   <chr>   #>  1 DO             2021-10-15 NA          6 mg/l          6.4 mg… 0.4 mg… MISS    #>  2 DO             2021-10-16 NA          6 mg/l          6.2 mg… 0.2 mg… NA      #>  3 Sp Conductance 2021-08-12 NA          1000 uS/cm      986.2 … 13.8 u… NA      #>  4 Sp Conductance 2021-09-12 NA          1000 uS/cm      1010 u… 10 uS/… NA      #>  5 Sp Conductance 2021-09-12 NA          1000 uS/cm      950 uS… 50 uS/… NA      #>  6 Sp Conductance 2021-09-12 NA          1000 uS/cm      1001 u… 1 uS/cm NA      #>  7 Sp Conductance 2021-09-12 NA          1000 uS/cm      1040 u… 40 uS/… NA      #>  8 Sp Conductance 2021-09-12 NA          1000 uS/cm      1100 u… 100 uS… MISS    #>  9 Sp Conductance 2021-09-12 NA          100 uS/cm       165 uS… 65 uS/… MISS    #> 10 Sp Conductance 2021-09-12 NA          1000 uS/cm      750 uS… 250 uS… MISS    #> # … with 12 more rows, and abbreviated variable names ¹​`Calibration Standard`, #> #   ²​`Instrument Reading`, ³​Accuracy, ⁴​`Hit/Miss` #>   ## # using data frames  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # accuracy data accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed!  qcMWRacc(res = resdat, acc = accdat) #> Warning: Parameters in quality control objectives for accuracy not found in results data: Chloride #> Warning: Parameters in results not found in  quality control objectives for accuracy: Air Temp, DO saturation, Flow, Gage #> $`Field Blanks` #> # A tibble: 19 × 6 #>    Parameter Date       Site    Result        Threshold    `Hit/Miss` #>    <chr>     <date>     <chr>   <chr>         <chr>        <chr>      #>  1 Ammonia   2021-07-11 ABT-062 0.2 mg/l      0.05 mg/l    MISS       #>  2 Ammonia   2021-07-11 ABT-237 BDL           0.05 mg/l    NA         #>  3 Ammonia   2021-07-11 ABT-301 0.1 mg/l      0.05 mg/l    MISS       #>  4 Ammonia   2021-07-11 DAN-013 BDL           0.05 mg/l    NA         #>  5 Ammonia   2021-07-11 CND-036 0.02 mg/l     0.05 mg/l    NA         #>  6 Ammonia   2021-07-11 ABT-144 BDL           0.05 mg/l    NA         #>  7 Ammonia   2021-07-11 ABT-026 BDL           0.05 mg/l    NA         #>  8 E.coli    2021-09-13 SUD-236 BDL           10 cfu/100ml NA         #>  9 E.coli    2021-09-13 NSH-002 15 cfu/100ml  10 cfu/100ml MISS       #> 10 E.coli    2021-09-13 ABT-162 128 cfu/100ml 10 cfu/100ml MISS       #> 11 TP        2021-06-13 ABT-062 BDL           0.01 mg/l    NA         #> 12 TP        2021-06-13 CND-110 BDL           0.01 mg/l    NA         #> 13 TP        2021-06-13 CND-036 BDL           0.02 mg/l    NA         #> 14 TP        2021-06-13 CND-009 0.01 mg/l     0.01 mg/l    MISS       #> 15 TP        2021-06-13 HBS-016 0.1 mg/l      0.01 mg/l    MISS       #> 16 TP        2021-06-13 ABT-026 BDL           0.01 mg/l    NA         #> 17 TP        2021-06-13 NSH-002 BDL           0.01 mg/l    NA         #> 18 TP        2021-06-13 NSH-047 0.02 mg/l     0.01 mg/l    MISS       #> 19 TP        2021-06-15 CND-036 0.008 mg/l    0.01 mg/l    NA         #>  #> $`Lab Blanks` #> # A tibble: 22 × 6 #>    Parameter      Date       `Sample ID` Result    Threshold `Hit/Miss` #>    <chr>          <date>     <chr>       <chr>     <chr>     <chr>      #>  1 Ammonia        2021-02-15 NA          BDL       0.2 mg/l  NA         #>  2 Ammonia        2021-02-16 NA          0.01 mg/l 0.05 mg/l NA         #>  3 Ammonia        2021-07-11 NA          0.4 mg/l  0.05 mg/l MISS       #>  4 Ammonia        2021-07-11 NA          BDL       0.05 mg/l NA         #>  5 Ammonia        2021-07-11 NA          BDL       0.05 mg/l NA         #>  6 Ammonia        2021-07-11 NA          BDL       0.05 mg/l NA         #>  7 Ammonia        2021-07-11 NA          0.11 mg/l 0.05 mg/l MISS       #>  8 Ammonia        2021-07-11 NA          BDL       0.05 mg/l NA         #>  9 Ammonia        2021-07-11 NA          BDL       0.05 mg/l NA         #> 10 Sp Conductance 2021-04-11 NA          45 uS/cm  25 uS/cm  MISS       #> # … with 12 more rows #>  #> $`Field Duplicates` #> # A tibble: 95 × 7 #>    Parameter Date       Site    `Initial Result` `Dup. Result` Diff./R…¹ Hit/M…² #>    <chr>     <date>     <chr>   <chr>            <chr>         <chr>     <chr>   #>  1 E.coli    2021-06-07 RVM-001 530 cfu/100ml    600 cfu/100ml 2% logRPD NA      #>  2 E.coli    2021-06-07 RME-003 260 cfu/100ml    260 cfu/100ml 0% logRPD NA      #>  3 E.coli    2021-06-14 RVM-027 170 cfu/100ml    500 cfu/100ml 19% logR… NA      #>  4 E.coli    2021-06-14 HBS-057 10 cfu/100ml     12 cfu/100ml  8% logRPD NA      #>  5 E.coli    2021-06-28 RVM-022 280 cfu/100ml    45 cfu/100ml  39% logR… MISS    #>  6 E.coli    2021-06-28 SUD-096 50 cfu/100ml     45 cfu/100ml  3% logRPD NA      #>  7 E.coli    2021-07-06 RVM-001 890 cfu/100ml    950 cfu/100ml 1% logRPD NA      #>  8 E.coli    2021-07-19 CND-009 10 cfu/100ml     20 cfu/100ml  26% logR… NA      #>  9 E.coli    2021-07-19 RVM-001 10 cfu/100ml     30 cfu/100ml  39% logR… MISS    #> 10 E.coli    2021-07-26 HBS-031 192 cfu/100ml    60 cfu/100ml  25% logR… MISS    #> # … with 85 more rows, and abbreviated variable names ¹​`Diff./RPD`, ²​`Hit/Miss` #>  #> $`Lab Duplicates` #> # A tibble: 35 × 7 #>    Parameter Date       `Sample ID` `Initial Result` Dup. Resu…¹ Diff.…² Hit/M…³ #>    <chr>     <date>     <chr>       <chr>            <chr>       <chr>   <chr>   #>  1 E.coli    2021-07-12 R2546-9     40 cfu/100ml     10 cfu/100… 46% lo… MISS    #>  2 E.coli    2021-07-12 R2546-10    35 cfu/100ml     37 cfu/100… 2% log… NA      #>  3 E.coli    2021-07-19 R2546-11    100 cfu/100ml    400 cfu/10… 26% lo… MISS    #>  4 E.coli    2021-07-19 R2546-13    100 cfu/100ml    250 cfu/10… 18% lo… NA      #>  5 E.coli    2021-07-19 R2546-12    800 cfu/100ml    400 cfu/10… 11% lo… MISS    #>  6 E.coli    2021-09-13 R2546-8     128 cfu/100ml    150 cfu/10… 3% log… NA      #>  7 Nitrate   2021-05-16 K16452-MB1  0.8 mg/l         0.9 mg/l    12% RPD NA      #>  8 Nitrate   2021-05-16 K16453-MB1  0.3 mg/l         0.3 mg/l    0% RPD  NA      #>  9 Nitrate   2021-05-16 K16454-MB1  0.45 mg/l        0.3 mg/l    40% RPD MISS    #> 10 Nitrate   2021-05-16 K16452-MB2  0.8 mg/l         0.82 mg/l   2% RPD  NA      #> # … with 25 more rows, and abbreviated variable names ¹​`Dup. Result`, #> #   ²​`Diff./RPD`, ³​`Hit/Miss` #>  #> $`Lab Spikes` #> # A tibble: 35 × 7 #>    Parameter Date       `Sample ID` Spike     `Amt Recovered` % Recove…¹ Hit/M…² #>    <chr>     <date>     <chr>       <chr>     <chr>           <chr>      <chr>   #>  1 Nitrate   2021-05-16 NO3-1       0.8 mg/l  0.9 mg/l        112%       NA      #>  2 Nitrate   2021-05-16 NO3-2       0.3 mg/l  0.3 mg/l        100%       NA      #>  3 Nitrate   2021-05-16 NO3-3       0.45 mg/l 0.3 mg/l        67%        MISS    #>  4 Nitrate   2021-05-16 NO3-4       0.8 mg/l  0.82 mg/l       102%       NA      #>  5 Nitrate   2021-05-16 NO3-5       0.12 mg/l 0.15 mg/l       125%       MISS    #>  6 Nitrate   2021-05-16 NO3-6       0.34 mg/l 0.38 mg/l       112%       NA      #>  7 Ortho P   2021-02-12 NA          BDL       BDL             100%       NA      #>  8 Ortho P   2021-02-13 NA          0.02 mg/l BDL             50%        NA      #>  9 Ortho P   2021-02-14 NA          0.05 mg/l 0.04 mg/l       80%        NA      #> 10 Ortho P   2021-02-15 NA          0.06 mg/l 0.04 mg/l       67%        MISS    #> # … with 25 more rows, and abbreviated variable names ¹​`% Recovery`, #> #   ²​`Hit/Miss` #>  #> $`Instrument Checks` #> # A tibble: 22 × 7 #>    Parameter      Date       `Sample ID` Calibration S…¹ Instr…² Accur…³ Hit/M…⁴ #>    <chr>          <date>     <chr>       <chr>           <chr>   <chr>   <chr>   #>  1 DO             2021-10-15 NA          6 mg/l          6.4 mg… 0.4 mg… MISS    #>  2 DO             2021-10-16 NA          6 mg/l          6.2 mg… 0.2 mg… NA      #>  3 Sp Conductance 2021-08-12 NA          1000 uS/cm      986.2 … 13.8 u… NA      #>  4 Sp Conductance 2021-09-12 NA          1000 uS/cm      1010 u… 10 uS/… NA      #>  5 Sp Conductance 2021-09-12 NA          1000 uS/cm      950 uS… 50 uS/… NA      #>  6 Sp Conductance 2021-09-12 NA          1000 uS/cm      1001 u… 1 uS/cm NA      #>  7 Sp Conductance 2021-09-12 NA          1000 uS/cm      1040 u… 40 uS/… NA      #>  8 Sp Conductance 2021-09-12 NA          1000 uS/cm      1100 u… 100 uS… MISS    #>  9 Sp Conductance 2021-09-12 NA          100 uS/cm       165 uS… 65 uS/… MISS    #> 10 Sp Conductance 2021-09-12 NA          1000 uS/cm      750 uS… 250 uS… MISS    #> # … with 12 more rows, and abbreviated variable names ¹​`Calibration Standard`, #> #   ²​`Instrument Reading`, ³​Accuracy, ⁴​`Hit/Miss` #>"},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRcom.html","id":null,"dir":"Reference","previous_headings":"","what":"Run quality control completeness checks for water quality monitoring results — qcMWRcom","title":"Run quality control completeness checks for water quality monitoring results — qcMWRcom","text":"Run quality control completeness checks water quality monitoring results","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRcom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run quality control completeness checks for water quality monitoring results — qcMWRcom","text":"","code":"qcMWRcom(res, frecom, runchk = TRUE, warn = TRUE)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRcom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run quality control completeness checks for water quality monitoring results — qcMWRcom","text":"res character string path results file data.frame results returned readMWRresults frecom character string path data quality objectives file frequency completeness data.frame returned readMWRfrecom runchk logical run data checks checkMWRresults checkMWRfrecom, applies res frecom file paths warn logical return warnings console (default)","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRcom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run quality control completeness checks for water quality monitoring results — qcMWRcom","text":"output shows completeness checks combined files.  row applies completeness check parameter. datarec qualrec columns show number data records qualified records, respectively. datarec column specifically shows records quality control excluding duplicates, blanks, spikes count. standard column shows relevant percentage required quality control check quality control objectives file, complete column shows calculated completeness taken input data, met column shows standard met comparing complete greater equal standard.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRcom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run quality control completeness checks for water quality monitoring results — qcMWRcom","text":"function can used inputs paths relevant files data frames returned readMWRresults readMWRfrecom.  former, full suite data checks can evaluated runkchk = T (default) suppressed runchk = F.  latter case, downstream analyses may work data formatted incorrectly. Note frequency evaluated parameters Parameter column data quality objectives frequency completeness file.  warning returned parameters Parameter frequency completeness file Characteristic Name results file. Similarly, parameters results file Characteristic Name column found data quality objectives frequency completeness file evaluated.  warning returned parameters Characteristic Name results file Parameter frequency completeness file.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRcom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run quality control completeness checks for water quality monitoring results — qcMWRcom","text":"","code":"## # using file paths  # results path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # frequency and completeness path frecompth <- system.file('extdata/ExampleDQOFrequencyCompleteness.xlsx',       package = 'MassWateR')  qcMWRcom(res = respth, frecom = frecompth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))! #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed! #> Warning: Parameters in quality control objectives for frequency and completeness not found in results data: Chloride, Conductivity #> Warning: Parameters in results not found in quality control objectives for frequency and completeness: Air Temp, DO saturation, E.coli, Flow, Gage, Sp Conductance #> # A tibble: 9 × 6 #>   Parameter  datarec qualrec standard complete met   #>   <chr>        <int>   <int>    <dbl>    <dbl> <lgl> #> 1 Ammonia        138       0       90    100   TRUE  #> 2 Chl a           18       0       90    100   TRUE  #> 3 DO             199      19       90     90.5 TRUE  #> 4 Nitrate         96       0       90    100   TRUE  #> 5 Ortho P        175       0       90    100   TRUE  #> 6 TP             205      32       90     84.4 FALSE #> 7 TSS            202       0       90    100   TRUE  #> 8 Water Temp     382       1       90     99.7 TRUE  #> 9 pH             199       6       90     97.0 TRUE   ## # using data frames  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # frequency and completeness data frecomdat <- readMWRfrecom(frecompth) #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed!  qcMWRcom(res = resdat, frecom = frecomdat) #> Warning: Parameters in quality control objectives for frequency and completeness not found in results data: Chloride, Conductivity #> Warning: Parameters in results not found in quality control objectives for frequency and completeness: Air Temp, DO saturation, E.coli, Flow, Gage, Sp Conductance #> # A tibble: 9 × 6 #>   Parameter  datarec qualrec standard complete met   #>   <chr>        <int>   <int>    <dbl>    <dbl> <lgl> #> 1 Ammonia        138       0       90    100   TRUE  #> 2 Chl a           18       0       90    100   TRUE  #> 3 DO             199      19       90     90.5 TRUE  #> 4 Nitrate         96       0       90    100   TRUE  #> 5 Ortho P        175       0       90    100   TRUE  #> 6 TP             205      32       90     84.4 FALSE #> 7 TSS            202       0       90    100   TRUE  #> 8 Water Temp     382       1       90     99.7 TRUE  #> 9 pH             199       6       90     97.0 TRUE"},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRfre.html","id":null,"dir":"Reference","previous_headings":"","what":"Run quality control frequency checks for water quality monitoring results — qcMWRfre","title":"Run quality control frequency checks for water quality monitoring results — qcMWRfre","text":"Run quality control frequency checks water quality monitoring results","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRfre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run quality control frequency checks for water quality monitoring results — qcMWRfre","text":"","code":"qcMWRfre(res, frecom, runchk = TRUE, warn = TRUE)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRfre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run quality control frequency checks for water quality monitoring results — qcMWRfre","text":"res character string path results file data.frame results returned readMWRresults frecom character string path data quality objectives file frequency completeness data.frame returned readMWRfrecom runchk logical run data checks checkMWRresults checkMWRfrecom, applies res frecom file paths warn logical return warnings console (default)","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRfre.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run quality control frequency checks for water quality monitoring results — qcMWRfre","text":"output shows frequency checks input files.  row applies frequency check parameter. Parameter column shows parameter, obs column shows total records apply regular activity types, check column shows relevant activity type frequency check, count column shows number records apply check, standard column shows relevant percentage required quality control check quality control objectives file, met column shows standard met comparing percent greater equal standard.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRfre.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run quality control frequency checks for water quality monitoring results — qcMWRfre","text":"function can used inputs paths relevant files data frames returned readMWRresults readMWRfrecom.  former, full suite data checks can evaluated runkchk = T (default) suppressed runchk = F.  latter case, downstream analyses may work data formatted incorrectly. Note frequency evaluated parameters Parameter column data quality objectives frequency completeness file.  warning returned parameters Parameter frequency completeness file Characteristic Name results file. Similarly, parameters results file Characteristic Name column found data quality objectives frequency completeness file evaluated.  warning returned parameters Characteristic Name results file Parameter frequency completeness file.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRfre.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run quality control frequency checks for water quality monitoring results — qcMWRfre","text":"","code":"## # using file paths  # results path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # frequency and completeness path frecompth <- system.file('extdata/ExampleDQOFrequencyCompleteness.xlsx',       package = 'MassWateR')  qcMWRfre(res = respth, frecom = frecompth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))! #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed! #> Warning: Parameters in quality control objectives for frequency and completeness not found in results data: Chloride, Conductivity #> Warning: Parameters in results not found in quality control objectives for frequency and completeness: Air Temp, DO saturation, E.coli, Flow, Gage, Sp Conductance #> # A tibble: 54 × 7 #>    Parameter   obs check                count standard percent met   #>    <chr>     <int> <chr>                <int>    <dbl>   <dbl> <lgl> #>  1 Ammonia     138 Field Duplicate          0       10    0    FALSE #>  2 Ammonia     138 Lab Duplicate            0        5    0    FALSE #>  3 Ammonia     138 Field Blank              7       10    5.07 FALSE #>  4 Ammonia     138 Lab Blank                9        5    6.52 TRUE  #>  5 Ammonia     138 Lab Spike                0        5    0    FALSE #>  6 Ammonia     138 Spike/Check Accuracy     0        5    0    FALSE #>  7 Chl a        18 Field Duplicate          0       10    0    FALSE #>  8 Chl a        18 Lab Duplicate            0        5    0    FALSE #>  9 Chl a        18 Field Blank              0       10    0    FALSE #> 10 Chl a        18 Lab Blank                0        5    0    FALSE #> # … with 44 more rows  ## # using data frames  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # frequency and completeness data frecomdat <- readMWRfrecom(frecompth) #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed!  qcMWRfre(res = resdat, frecom = frecomdat) #> Warning: Parameters in quality control objectives for frequency and completeness not found in results data: Chloride, Conductivity #> Warning: Parameters in results not found in quality control objectives for frequency and completeness: Air Temp, DO saturation, E.coli, Flow, Gage, Sp Conductance #> # A tibble: 54 × 7 #>    Parameter   obs check                count standard percent met   #>    <chr>     <int> <chr>                <int>    <dbl>   <dbl> <lgl> #>  1 Ammonia     138 Field Duplicate          0       10    0    FALSE #>  2 Ammonia     138 Lab Duplicate            0        5    0    FALSE #>  3 Ammonia     138 Field Blank              7       10    5.07 FALSE #>  4 Ammonia     138 Lab Blank                9        5    6.52 TRUE  #>  5 Ammonia     138 Lab Spike                0        5    0    FALSE #>  6 Ammonia     138 Spike/Check Accuracy     0        5    0    FALSE #>  7 Chl a        18 Field Duplicate          0       10    0    FALSE #>  8 Chl a        18 Lab Duplicate            0        5    0    FALSE #>  9 Chl a        18 Field Blank              0       10    0    FALSE #> 10 Chl a        18 Lab Blank                0        5    0    FALSE #> # … with 44 more rows"},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRreview.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the quality control review report — qcMWRreview","title":"Create the quality control review report — qcMWRreview","text":"Create quality control review report","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRreview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the quality control review report — qcMWRreview","text":"","code":"qcMWRreview(   res,   acc,   frecom,   output_dir,   output_file = NULL,   rawdata = TRUE,   dqofontsize = 7.5,   tabfontsize = 9,   padding = 0,   warn = TRUE,   runchk = TRUE )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRreview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the quality control review report — qcMWRreview","text":"res character string path results file data.frame results returned readMWRresults acc character string path data quality objectives file accuracy data.frame returned readMWRacc frecom character string path data quality objectives file frequency completeness data.frame returned readMWRfrecom output_dir character string output directory rendered file output_file optional character string file name rawdata logical include quality control accuracy summaries raw data, e.g., field blanks, etc. dqofontsize numeric font size data quality objective tables first page review tabfontsize numeric font size review tables padding numeric row padding table output warn logical indicating warnings table functions included file output runchk logical run data checks checkMWRresults, checkMWRacc, checkMWRfrecom, applies res, acc, frecom file paths","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRreview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the quality control review report — qcMWRreview","text":"compiled review report named qcreview.docx (name passed output_file) saved directory specified output_dir","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRreview.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the quality control review report — qcMWRreview","text":"function compiles review report Word document quality control checks included MassWateR package.  report shows several tables, including data quality objectives files accuracy, frequency, completeness, summary results accuracy checks, summary results frequency checks, summary results completeness checks, individual results accuracy checks.  report uses individual table functions (can used separately) return results, include tabMWRacc, tabMWRfre, tabMWRcom.  help files functions can consulted detailed explanation quality control checks. workflow using function import required data (results data quality objective files) fix errors noted import prior creating review report.  Additional warnings may interest returned individual table functions can returned console setting warn = TRUE. Optional arguments can changed needed include specifying file name output_file, suppressing raw data summaries end report rawdata = FALSE, changing table font sizes (dqofontsize data quality objectives first page, tabfontsize remainder). function can used inputs paths relevant files data frames returned readMWRresults, readMWRacc, readMWRfrecom.  former, full suite data checks can evaluated runkchk = T (default) suppressed runchk = F, explained relevant help files.  latter case, downstream analyses may work data formatted incorrectly.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/qcMWRreview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the quality control review report — qcMWRreview","text":"","code":"# results data path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # dqo accuracy data path accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx', package = 'MassWateR')  # dqo completeness data path frecompth <- system.file('extdata/ExampleDQOFrequencyCompleteness.xlsx', package = 'MassWateR')  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # accuracy data accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed!  # frequency and completeness data, only needed if type = \"percent\" frecomdat <- readMWRfrecom(frecompth) #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed!  if (FALSE) { # create report in working directory qcMWRreview(res = resdat, acc = accdat, frecom = frecomdat, output_dir = getwd()) }"},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRacc.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data quality objectives for accuracy from an external file — readMWRacc","title":"Read data quality objectives for accuracy from an external file — readMWRacc","text":"Read data quality objectives accuracy external file","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRacc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data quality objectives for accuracy from an external file — readMWRacc","text":"","code":"readMWRacc(accpth, runchk = TRUE)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRacc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data quality objectives for accuracy from an external file — readMWRacc","text":"accpth character string path data quality objectives file accuracy runchk logical run data checks checkMWRacc","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRacc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data quality objectives for accuracy from an external file — readMWRacc","text":"formatted data frame data quality objectives completeness can used downstream analysis","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRacc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read data quality objectives for accuracy from an external file — readMWRacc","text":"Data imported read_excel checked checkMWRacc.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRacc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data quality objectives for accuracy from an external file — readMWRacc","text":"","code":"accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx', package = 'MassWateR')  accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed! head(accdat) #> # A tibble: 6 × 10 #>   Parameter    uom     MDL   UQL Value…¹ Field…² Lab D…³ Field…⁴ Lab B…⁵ Spike…⁶ #>   <chr>        <chr> <dbl> <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 Water Temp   deg C  NA      NA all     <= 10%  <= 10%  NA      NA      NA      #> 2 pH           NA     NA      NA all     <= 0.5  <= 0.5  NA      NA      <= 0.2  #> 3 DO           mg/l    0.1    NA < 4     <= 20%  <= 20%  < 0.1   < 0.1   <= 5%   #> 4 DO           mg/l    0.1    NA >= 4    <= 10%  <= 10%  < 0.1   < 0.1   <= 5%   #> 5 Sp Conducta… uS/cm   1      NA < 250   <= 30%  <= 20%  < 25    < 25    <= 50   #> 6 Sp Conducta… uS/cm   1      NA >= 250  <= 20%  <= 10%  < 25    < 25    <= 50   #> # … with abbreviated variable names ¹​`Value Range`, ²​`Field Duplicate`, #> #   ³​`Lab Duplicate`, ⁴​`Field Blank`, ⁵​`Lab Blank`, ⁶​`Spike/Check Accuracy`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRfrecom.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data quality objectives for frequency and completeness from an external file — readMWRfrecom","title":"Read data quality objectives for frequency and completeness from an external file — readMWRfrecom","text":"Read data quality objectives frequency completeness external file","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRfrecom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data quality objectives for frequency and completeness from an external file — readMWRfrecom","text":"","code":"readMWRfrecom(frecompth, runchk = TRUE)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRfrecom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data quality objectives for frequency and completeness from an external file — readMWRfrecom","text":"frecompth character string path data quality objectives file frequency completeness runchk logical run data checks checkMWRfrecom","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRfrecom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data quality objectives for frequency and completeness from an external file — readMWRfrecom","text":"formatted data frame data quality objectives frequency completeness can used downstream analysis","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRfrecom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read data quality objectives for frequency and completeness from an external file — readMWRfrecom","text":"Data imported read_excel checked checkMWRfrecom.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRfrecom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data quality objectives for frequency and completeness from an external file — readMWRfrecom","text":"","code":"frecompth <- system.file('extdata/ExampleDQOFrequencyCompleteness.xlsx',       package = 'MassWateR')  frecomdat <- readMWRfrecom(frecompth) #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed! head(frecomdat) #> # A tibble: 6 × 7 #>   Parameter    `Field Duplicate` `Lab Duplicate` Field…¹ Lab B…² Spike…³ % Com…⁴ #>   <chr>                    <dbl>           <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #> 1 Water Temp                  10              10      NA      NA      NA      90 #> 2 pH                          10              10      NA      NA      10      90 #> 3 DO                          10              10      NA      10      10      90 #> 4 Conductivity                10              10      NA      10      10      90 #> 5 TSS                         10               5      10       5       5      90 #> 6 TP                          10               5      10       5       5      90 #> # … with abbreviated variable names ¹​`Field Blank`, ²​`Lab Blank`, #> #   ³​`Spike/Check Accuracy`, ⁴​`% Completeness`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRresults.html","id":null,"dir":"Reference","previous_headings":"","what":"Read water quality monitoring results from an external file — readMWRresults","title":"Read water quality monitoring results from an external file — readMWRresults","text":"Read water quality monitoring results external file","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRresults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read water quality monitoring results from an external file — readMWRresults","text":"","code":"readMWRresults(respth, runchk = TRUE, warn = TRUE, tzone = \"America/Jamaica\")"},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRresults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read water quality monitoring results from an external file — readMWRresults","text":"respth character string path results file runchk logical run data checks checkMWRresults warn logical return warnings console (default) tzone character string time zone, passed formMWRresults","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRresults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read water quality monitoring results from an external file — readMWRresults","text":"formatted water quality monitoring results data frame can used downstream analysis","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRresults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read water quality monitoring results from an external file — readMWRresults","text":"Date imported read_excel, checked checkMWRresults, formatted formMWRresults.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRresults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read water quality monitoring results from an external file — readMWRresults","text":"","code":"respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))! head(resdat) #> # A tibble: 6 × 14 #>   Monitorin…¹ Activ…² Activity…³ Activ…⁴ Activ…⁵ Activ…⁶ Activ…⁷ Chara…⁸ Resul…⁹ #>   <chr>       <chr>   <date>     <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 HBS-016     Field … 2021-01-14 09:22   3       ft      NA      Air Te… 2       #> 2 LND-007     Field … 2021-01-14 09:50   3       ft      NA      Air Te… 2       #> 3 HBS-031     Field … 2021-01-14 10:05   3       ft      NA      Air Te… 2       #> 4 HBS-057     Field … 2021-01-14 10:30   3       ft      NA      Air Te… 3       #> 5 HBS-065     Field … 2021-01-14 10:40   3       ft      NA      Air Te… 3       #> 6 CRN-002     Field … 2021-01-14 11:30   3       ft      NA      Air Te… 2       #> # … with 5 more variables: `Result Unit` <chr>, `Quantitation Limit` <chr>, #> #   `QC Reference Value` <chr>, `Result Measure Qualifier` <chr>, #> #   `Result Attribute` <chr>, and abbreviated variable names #> #   ¹​`Monitoring Location ID`, ²​`Activity Type`, ³​`Activity Start Date`, #> #   ⁴​`Activity Start Time`, ⁵​`Activity Depth/Height Measure`, #> #   ⁶​`Activity Depth/Height Unit`, ⁷​`Activity Relative Depth Name`, #> #   ⁸​`Characteristic Name`, ⁹​`Result Value`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRsites.html","id":null,"dir":"Reference","previous_headings":"","what":"Read site metadata from an external file — readMWRsites","title":"Read site metadata from an external file — readMWRsites","text":"Read site metadata external file","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRsites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read site metadata from an external file — readMWRsites","text":"","code":"readMWRsites(sitpth, runchk = TRUE)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRsites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read site metadata from an external file — readMWRsites","text":"sitpth character string path site metadata file runchk logical run data checks checkMWRsites","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRsites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read site metadata from an external file — readMWRsites","text":"formatted data frame site metadata can used downstream analysis","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRsites.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read site metadata from an external file — readMWRsites","text":"Data imported read_excel checked checkMWRsites.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/readMWRsites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read site metadata from an external file — readMWRsites","text":"","code":"sitpth <- system.file('extdata/ExampleSites.xlsx', package = 'MassWateR')  sitdat <- readMWRsites(sitpth) #> Running checks on site metadata... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for missing latitude or longitude values... OK #> \tChecking for non-numeric values in latitude... OK #> \tChecking for non-numeric values in longitude... OK #> \tChecking for positive values in longitude... OK #> \tChecking for missing entries for Monitoring Location ID... OK #>  #> All checks passed! head(sitdat) #> # A tibble: 6 × 5 #>   `Monitoring Location ID` `Monitoring Location Name`    Monit…¹ Monit…² Locat…³ #>   <chr>                    <chr>                           <dbl>   <dbl> <chr>   #> 1 ABT-010                  477 Lowell Rd, Concord           42.5   -71.4 Lower … #> 2 ABT-026                  Rte 2, Concord                   42.5   -71.4 Lower … #> 3 ABT-033                  Rte 62, W Concord                42.5   -71.4 Lower … #> 4 ABT-044                  Rte 62 (Damonmill), W Concord    42.5   -71.4 Lower … #> 5 ABT-047                  Damonmill dam                    42.5   -71.4 Lower … #> 6 ABT-062                  Rte 62, Acton                    42.4   -71.4 Lower … #> # … with abbreviated variable names ¹​`Monitoring Location Latitude`, #> #   ²​`Monitoring Location Longitude`, ³​`Location Group`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/riversMWR.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple features object of rivers in Massachusetts — riversMWR","title":"A simple features object of rivers in Massachusetts — riversMWR","text":"simple features object rivers Massachusetts","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/riversMWR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple features object of rivers in Massachusetts — riversMWR","text":"","code":"riversMWR"},{"path":"https://massbays-tech.github.io/MassWateR/reference/riversMWR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A simple features object of rivers in Massachusetts — riversMWR","text":"simple features object linestring geometries one attribute called dLevel specifying level detail.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/riversMWR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A simple features object of rivers in Massachusetts — riversMWR","text":"geometries simplified using tolerance ten meters.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/riversMWR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A simple features object of rivers in Massachusetts — riversMWR","text":"","code":"if (FALSE) { library(sf) library(dplyr)  riversMWR <- st_read('~/Desktop/NHD/NHDArea_noattr.shp') %>%   st_make_valid() %>%   st_simplify(dTolerance = 10, preserveTopology = TRUE) %>%   st_transform(crs = 4326) %>%   select(dLevel)  save(riversMWR, file = 'data/riversMWR.RData', compress = 'xz') }"},{"path":"https://massbays-tech.github.io/MassWateR/reference/streamsMWR.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple features object of streams in Massachusetts — streamsMWR","title":"A simple features object of streams in Massachusetts — streamsMWR","text":"simple features object streams Massachusetts","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/streamsMWR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple features object of streams in Massachusetts — streamsMWR","text":"","code":"streamsMWR"},{"path":"https://massbays-tech.github.io/MassWateR/reference/streamsMWR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A simple features object of streams in Massachusetts — streamsMWR","text":"simple features object linestring geometries one attribute called dLevel specifying level detail.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/streamsMWR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A simple features object of streams in Massachusetts — streamsMWR","text":"geometries simplified using tolerance ten meters.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/streamsMWR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A simple features object of streams in Massachusetts — streamsMWR","text":"","code":"if (FALSE) { library(sf) library(dplyr)  streamsMWR <- st_read('~/Desktop/NHD/NHDFlowline_fcode_46006_vis_101k_noattr.shp') %>%   st_zm() %>%   st_simplify(dTolerance = 10, preserveTopology = TRUE) %>%   st_transform(crs = 4326) %>%   select(dLevel)  save(streamsMWR, file = 'data/streamsMWR.RData', compress = 'xz') }"},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRacc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formatted table of quality control accuracy checks — tabMWRacc","title":"Create a formatted table of quality control accuracy checks — tabMWRacc","text":"Create formatted table quality control accuracy checks","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRacc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formatted table of quality control accuracy checks — tabMWRacc","text":"","code":"tabMWRacc(   res,   acc,   runchk = TRUE,   warn = TRUE,   accchk = c(\"Field Blanks\", \"Lab Blanks\", \"Field Duplicates\", \"Lab Duplicates\",     \"Lab Spikes\", \"Instrument Checks\"),   type = c(\"individual\", \"summary\", \"percent\"),   pass_col = \"green\",   fail_col = \"red\",   frecom = NULL,   suffix = \"%\",   caption = TRUE )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRacc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formatted table of quality control accuracy checks — tabMWRacc","text":"res character string path results file data.frame results returned readMWRresults acc character string path data quality objectives file accuracy data.frame returned readMWRacc runchk logical run data checks checkMWRresults checkMWRacc, applies res acc file paths warn logical return warnings console (default) accchk character string indicating accuracy check return, one \"Field Blanks\", \"Lab Blanks\", \"Field Duplicates\", \"Lab Duplicates\", \"Lab Spikes\", \"Instrument Checks\" type character string indicating individual, summary percent tabular output, see details pass_col character string cell color checks pass, applies type = 'percent' fail_col character string cell color checks fail, applies type = 'percent' frecom character string path data quality objectives file frequency completeness data.frame returned readMWRfrecom, applies type = \"summary\" type = \"percent\" suffix character string indicating suffix append percentage values caption logical include caption accchk, applies type = \"individual\"","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRacc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a formatted table of quality control accuracy checks — tabMWRacc","text":"flextable object formatted results.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRacc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a formatted table of quality control accuracy checks — tabMWRacc","text":"function can used inputs paths relevant files data frames returned readMWRresults readMWRacc.  former, full suite data checks can evaluated runkchk = T (default) suppressed runchk = F, explained relevant help files.  latter case, downstream analyses may work data formatted incorrectly. Also note accuracy evaluated parameters shared results file data quality objectives file accuracy.  warning returned parameters match files. warning can suppressed setting warn = FALSE. function can return three types tables specified type argument: \"individual\", \"summary\", \"percent\".  individual tables specific type accuracy check parameter (e.g., field blanks, lab blanks, etc.).  summary table summarizes accuracy checks number checks many hit/misses returned across parameters.  percent table similar summary table, showing percentages appropriate color-coding hit/misses. data quality objectives file frequency completeness required type = \"summary\" type = \"percent\". type = \"individual\", quality control tables accuracy retrieved specifying check accchk argument.  accchk argument can used specify one following values retrieve relevant tables: \"Field Blanks\", \"Lab Blanks\", \"Field Duplicates\", \"Lab Duplicates\", \"Lab Spikes\", \"Instrument Checks\". type = \"summary\", function summarizes accuracy checks counting number quality control checks, number misses, percent acceptance parameter. accuracy checks used accchk argument apply. type = \"percent\", function returns similar table summary option, except percentage checks pass parameter shown wide format. Cells color-coded based percentage checks passed using percent thresholds % Completeness column data quality objectives file frequency completeness. Parameters without entry % Completeness color-coded appropriate warning returned. accuracy checks used accchk argument apply. Inputs results data quality objectives accuracy processed internally qcMWRacc arguments accepted function, addition others listed .","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRacc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a formatted table of quality control accuracy checks — tabMWRacc","text":"","code":"## # using file paths  # results path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # accuracy path accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx',       package = 'MassWateR')  # frequency and completeness path, only needed if type = \"percent\" frecompth <- system.file('extdata/ExampleDQOFrequencyCompleteness.xlsx',       package = 'MassWateR')  # table as individual tabMWRacc(res = respth, acc = accpth, type = 'individual', accchk = 'Field Blanks') #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))! #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed! #> Warning: Parameters in quality control objectives for accuracy not found in results data: Chloride #> Warning: Parameters in results not found in  quality control objectives for accuracy: Air Temp, DO saturation, Flow, Gage #> a flextable object. #> col_keys: `Parameter`, `Date`, `Site`, `Result`, `Threshold`, `Hit/Miss`  #> header has 1 row(s)  #> body has 22 row(s)  #> original dataset sample:  #>   Parameter       Date    Site   Result Threshold Hit/Miss #> 1   Ammonia       <NA>    <NA>     <NA>      <NA>     <NA> #> 4      <NA> 2021-07-11 ABT-062 0.2 mg/l 0.05 mg/l     MISS #> 5      <NA> 2021-07-11 ABT-237      BDL 0.05 mg/l     <NA> #> 6      <NA> 2021-07-11 ABT-301 0.1 mg/l 0.05 mg/l     MISS #> 7      <NA> 2021-07-11 DAN-013      BDL 0.05 mg/l     <NA>  # table as summary tabMWRacc(res = respth, acc = accpth, type = 'summary', frecom = frecompth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))! #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed! #> Warning: Parameters in quality control objectives for accuracy not found in results data: Chloride #> Warning: Parameters in results not found in  quality control objectives for accuracy: Air Temp, DO saturation, Flow, Gage #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed! #> a flextable object. #> col_keys: `Type`, `Parameter`, `Number of QC Checks`, `Number of Misses`, `% Acceptance`  #> header has 1 row(s)  #> body has 51 row(s)  #> original dataset sample:  #>                Type Parameter Number of QC Checks Number of Misses % Acceptance #> 1  Field Duplicates      <NA>                <NA>             <NA>         <NA> #> 7              <NA>   Ammonia                   0                -            - #> 8              <NA>     Chl a                   0                -            - #> 9              <NA>        DO                   0                -            - #> 10             <NA>    E.coli                  22                8         64 %  # table as percent tabMWRacc(res = respth, acc = accpth, type = 'percent', frecom = frecompth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))! #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed! #> Warning: Parameters in quality control objectives for accuracy not found in results data: Chloride #> Warning: Parameters in results not found in  quality control objectives for accuracy: Air Temp, DO saturation, Flow, Gage #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed! #> Warning: Parameters in table not found in quality control objectives for frequency and completeness (no color): E.coli, Sp Conductance #> a flextable object. #> col_keys: `Parameter`, `Field Duplicate`, `Lab Duplicate`, `Field Blank`, `Lab Blank`, `Spike/Check Accuracy`  #> header has 1 row(s)  #> body has 11 row(s)  #> original dataset sample:  #>   Parameter Field Duplicate Field Duplicate_met Lab Duplicate Lab Duplicate_met #> 1   Ammonia              NA                  NA            NA                NA #> 2     Chl a              NA                  NA            NA                NA #> 3        DO              NA                  NA            NA                NA #> 4    E.coli        63.63636                  NA      50.00000                NA #> 5   Nitrate        75.00000                   0      54.54545                 0 #>   Field Blank Field Blank_met Lab Blank Lab Blank_met Spike/Check Accuracy #> 1    71.42857               0  77.77778             0                   NA #> 2          NA              NA        NA            NA                   NA #> 3          NA              NA        NA            NA             50.00000 #> 4    33.33333              NA        NA            NA                   NA #> 5          NA              NA        NA            NA             66.66667 #>   Spike/Check Accuracy_met #> 1                       NA #> 2                       NA #> 3                        0 #> 4                       NA #> 5                        0  ## # using data frames  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # accuracy data accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed!  # frequency and completeness data, only needed if type = \"percent\" frecomdat <- readMWRfrecom(frecompth) #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed!  # table as individual tabMWRacc(res = resdat, acc = accdat, type = 'individual', accchk = 'Field Blanks') #> Warning: Parameters in quality control objectives for accuracy not found in results data: Chloride #> Warning: Parameters in results not found in  quality control objectives for accuracy: Air Temp, DO saturation, Flow, Gage #> a flextable object. #> col_keys: `Parameter`, `Date`, `Site`, `Result`, `Threshold`, `Hit/Miss`  #> header has 1 row(s)  #> body has 22 row(s)  #> original dataset sample:  #>   Parameter       Date    Site   Result Threshold Hit/Miss #> 1   Ammonia       <NA>    <NA>     <NA>      <NA>     <NA> #> 4      <NA> 2021-07-11 ABT-062 0.2 mg/l 0.05 mg/l     MISS #> 5      <NA> 2021-07-11 ABT-237      BDL 0.05 mg/l     <NA> #> 6      <NA> 2021-07-11 ABT-301 0.1 mg/l 0.05 mg/l     MISS #> 7      <NA> 2021-07-11 DAN-013      BDL 0.05 mg/l     <NA>  # table as summary tabMWRacc(res = resdat, acc = accdat, type = 'summary', frecom = frecomdat) #> Warning: Parameters in quality control objectives for accuracy not found in results data: Chloride #> Warning: Parameters in results not found in  quality control objectives for accuracy: Air Temp, DO saturation, Flow, Gage #> a flextable object. #> col_keys: `Type`, `Parameter`, `Number of QC Checks`, `Number of Misses`, `% Acceptance`  #> header has 1 row(s)  #> body has 51 row(s)  #> original dataset sample:  #>                Type Parameter Number of QC Checks Number of Misses % Acceptance #> 1  Field Duplicates      <NA>                <NA>             <NA>         <NA> #> 7              <NA>   Ammonia                   0                -            - #> 8              <NA>     Chl a                   0                -            - #> 9              <NA>        DO                   0                -            - #> 10             <NA>    E.coli                  22                8         64 %  # table as percent tabMWRacc(res = resdat, acc = accdat, type = 'percent', frecom = frecomdat) #> Warning: Parameters in quality control objectives for accuracy not found in results data: Chloride #> Warning: Parameters in results not found in  quality control objectives for accuracy: Air Temp, DO saturation, Flow, Gage #> Warning: Parameters in table not found in quality control objectives for frequency and completeness (no color): E.coli, Sp Conductance #> a flextable object. #> col_keys: `Parameter`, `Field Duplicate`, `Lab Duplicate`, `Field Blank`, `Lab Blank`, `Spike/Check Accuracy`  #> header has 1 row(s)  #> body has 11 row(s)  #> original dataset sample:  #>   Parameter Field Duplicate Field Duplicate_met Lab Duplicate Lab Duplicate_met #> 1   Ammonia              NA                  NA            NA                NA #> 2     Chl a              NA                  NA            NA                NA #> 3        DO              NA                  NA            NA                NA #> 4    E.coli        63.63636                  NA      50.00000                NA #> 5   Nitrate        75.00000                   0      54.54545                 0 #>   Field Blank Field Blank_met Lab Blank Lab Blank_met Spike/Check Accuracy #> 1    71.42857               0  77.77778             0                   NA #> 2          NA              NA        NA            NA                   NA #> 3          NA              NA        NA            NA             50.00000 #> 4    33.33333              NA        NA            NA                   NA #> 5          NA              NA        NA            NA             66.66667 #>   Spike/Check Accuracy_met #> 1                       NA #> 2                       NA #> 3                        0 #> 4                       NA #> 5                        0"},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRcom.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formatted table of quality control completeness checks — tabMWRcom","title":"Create a formatted table of quality control completeness checks — tabMWRcom","text":"Create formatted table quality control completeness checks","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRcom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formatted table of quality control completeness checks — tabMWRcom","text":"","code":"tabMWRcom(   res,   frecom,   runchk = TRUE,   warn = TRUE,   pass_col = \"green\",   fail_col = \"red\",   digits = 0,   suffix = \"%\",   parameterwd = 1.15,   noteswd = 3 )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRcom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formatted table of quality control completeness checks — tabMWRcom","text":"res character string path results file data.frame results returned readMWRresults frecom character string path data quality objectives file frequency completeness data.frame returned readMWRfrecom runchk logical run data checks checkMWRresults checkMWRfrecom, applies res frecom file paths warn logical return warnings console (default) pass_col character string cell color checks pass fail_col character string cell color checks fail digits numeric indicating number significant digits report percentages suffix character string indicating suffix append percentage values parameterwd numeric indicating width parameter column noteswd numeric indicating width notes column","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRcom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a formatted table of quality control completeness checks — tabMWRcom","text":"flextable object formatted results showing summary counts completeness checks parameter.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRcom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a formatted table of quality control completeness checks — tabMWRcom","text":"function can used inputs paths relevant files data frames returned readMWRresults readMWRfrecom.  former, full suite data checks can evaluated runkchk = T (default) suppressed runchk = F, explained relevant help files.  latter case, downstream analyses may work data formatted incorrectly.  Also note completeness evaluated parameters shared results file data quality objectives file frequency completeness. warning returned parameters match files. warning can suppressed setting warn = FALSE. summary table showing number data records, number qualified records, percent completeness created.  % Completeness column shows cells green red required percentage observations completeness present specified data quality objectives file.  Hit/ Miss column shows similar information text format, .e., MISS shown quality control standard completeness met. Inputs results data quality objectives frequency completeness processed internally qcMWRcom arguments accepted function, addition others listed .","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRcom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a formatted table of quality control completeness checks — tabMWRcom","text":"","code":"## # using file paths  # results path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # frequency and completeness path frecompth <- system.file('extdata/ExampleDQOFrequencyCompleteness.xlsx',       package = 'MassWateR')  tabMWRcom(res = respth, frecom = frecompth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))! #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed! #> Warning: Parameters in quality control objectives for frequency and completeness not found in results data: Chloride, Conductivity #> Warning: Parameters in results not found in quality control objectives for frequency and completeness: Air Temp, DO saturation, E.coli, Flow, Gage, Sp Conductance #> a flextable object. #> col_keys: `Parameter`, `Number of Data Records`, `Number of Qualified Records`, `% Completeness`, `Hit/ Miss`, `Number of Censored Records`, `Notes`  #> header has 1 row(s)  #> body has 9 row(s)  #> original dataset sample:  #>   Parameter Number of Data Records Number of Qualified Records % Completeness #> 1   Ammonia                    138                           0      100.00000 #> 2     Chl a                     18                           0      100.00000 #> 3        DO                    199                          19       90.45226 #> 4   Nitrate                     96                           0      100.00000 #> 5   Ortho P                    175                           0      100.00000 #>   met Hit/ Miss Number of Censored Records Notes #> 1   1                                            #> 2   1                                            #> 3   1                                            #> 4   1                                            #> 5   1                                             ## # using data frames  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # frequency and completeness data frecomdat <- readMWRfrecom(frecompth) #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed!  tabMWRcom(res = resdat, frecom = frecomdat) #> Warning: Parameters in quality control objectives for frequency and completeness not found in results data: Chloride, Conductivity #> Warning: Parameters in results not found in quality control objectives for frequency and completeness: Air Temp, DO saturation, E.coli, Flow, Gage, Sp Conductance #> a flextable object. #> col_keys: `Parameter`, `Number of Data Records`, `Number of Qualified Records`, `% Completeness`, `Hit/ Miss`, `Number of Censored Records`, `Notes`  #> header has 1 row(s)  #> body has 9 row(s)  #> original dataset sample:  #>   Parameter Number of Data Records Number of Qualified Records % Completeness #> 1   Ammonia                    138                           0      100.00000 #> 2     Chl a                     18                           0      100.00000 #> 3        DO                    199                          19       90.45226 #> 4   Nitrate                     96                           0      100.00000 #> 5   Ortho P                    175                           0      100.00000 #>   met Hit/ Miss Number of Censored Records Notes #> 1   1                                            #> 2   1                                            #> 3   1                                            #> 4   1                                            #> 5   1"},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRfre.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formatted table of quality control frequency checks — tabMWRfre","title":"Create a formatted table of quality control frequency checks — tabMWRfre","text":"Create formatted table quality control frequency checks","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRfre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formatted table of quality control frequency checks — tabMWRfre","text":"","code":"tabMWRfre(   res,   frecom,   runchk = TRUE,   warn = TRUE,   type = c(\"summary\", \"percent\"),   pass_col = \"green\",   fail_col = \"red\",   digits = 0,   suffix = \"%\" )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRfre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formatted table of quality control frequency checks — tabMWRfre","text":"res character string path results file data.frame results returned readMWRresults frecom character string path data quality objectives file frequency completeness data.frame returned readMWRfrecom runchk logical run data checks checkMWRresults checkMWRfrecom, applies res frecom file paths warn logical return warnings console (default) type character string indicating summary percent tabular output, see datails pass_col character string cell color checks pass, applies type = 'percent' fail_col character string cell color checks fail, applies type = 'percent' digits numeric indicating number significant digits report percentages suffix character string indicating suffix append percentage values","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRfre.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a formatted table of quality control frequency checks — tabMWRfre","text":"flextable object formatted results.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRfre.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a formatted table of quality control frequency checks — tabMWRfre","text":"function can used inputs paths relevant files data frames returned readMWRresults readMWRfrecom.  former, full suite data checks can evaluated runkchk = T (default) suppressed runchk = F, explained relevant help files.  latter case, downstream analyses may work data formatted incorrectly.  Also note completeness evaluated parameters shared results file data quality objectives file frequency completeness.  warning returned parameters match files. warning can suppressed setting warn = FALSE. quality control tables frequency show number records apply given check (e.g., Lab Blank, Field Blank, etc.) relative number \"regular\" data records (e.g., field samples measures) parameter.  summary frequency checks parameter provided type = \"summary\" color-coded table showing similar information percentages parameter provided type = \"percent\". Inputs results data quality objectives frequency completeness processed internally qcMWRcom arguments accepted function, addition others listed .","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/tabMWRfre.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a formatted table of quality control frequency checks — tabMWRfre","text":"","code":"## # using file paths  # results path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # frequency and completeness path frecompth <- system.file('extdata/ExampleDQOFrequencyCompleteness.xlsx',       package = 'MassWateR')  # table as summary tabMWRfre(res = respth, frecom = frecompth, type = 'summary') #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))! #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed! #> Warning: Parameters in quality control objectives for frequency and completeness not found in results data: Chloride, Conductivity #> Warning: Parameters in results not found in quality control objectives for frequency and completeness: Air Temp, DO saturation, E.coli, Flow, Gage, Sp Conductance #> a flextable object. #> col_keys: `Type`, `Parameter`, `Number of Data Records`, `Number of Dups/Blanks/Spikes`, `Frequency %`, `Hit/Miss`  #> header has 1 row(s)  #> body has 45 row(s)  #> original dataset sample:  #>                Type Parameter Number of Data Records #> 1  Field Duplicates      <NA>                     NA #> 7              <NA>   Ammonia                    138 #> 8              <NA>     Chl a                     18 #> 9              <NA>        DO                    199 #> 10             <NA>   Nitrate                     96 #>    Number of Dups/Blanks/Spikes Frequency % Hit/Miss #> 1                            NA          NA     <NA> #> 7                             0    0.000000     MISS #> 8                             0    0.000000     MISS #> 9                             0    0.000000     MISS #> 10                            8    8.333333     MISS  # table as percent tabMWRfre(res = respth, frecom = frecompth, type = 'percent') #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))! #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed! #> Warning: Parameters in quality control objectives for frequency and completeness not found in results data: Chloride, Conductivity #> Warning: Parameters in results not found in quality control objectives for frequency and completeness: Air Temp, DO saturation, E.coli, Flow, Gage, Sp Conductance #> a flextable object. #> col_keys: `Parameter`, `Field Duplicate`, `Lab Duplicate`, `Field Blank`, `Lab Blank`, `Spike/Check Accuracy`  #> header has 1 row(s)  #> body has 9 row(s)  #> original dataset sample:  #>   Parameter Field Duplicate Field Duplicate_met Lab Duplicate Lab Duplicate_met #> 1   Ammonia        0.000000                   0       0.00000                 0 #> 2     Chl a        0.000000                   0       0.00000                 0 #> 3        DO        0.000000                   0       0.00000                 0 #> 4   Nitrate        8.333333                   0      11.45833                 1 #> 5   Ortho P        0.000000                   0       0.00000                 0 #>   Field Blank Field Blank_met Lab Blank Lab Blank_met Spike/Check Accuracy #> 1    5.072464               0  6.521739             1             0.000000 #> 2    0.000000               0  0.000000             0             0.000000 #> 3          NA              NA  0.000000             0             1.005025 #> 4    0.000000               0  0.000000             0             6.250000 #> 5    0.000000               0  0.000000             0             4.571429 #>   Spike/Check Accuracy_met #> 1                        0 #> 2                        0 #> 3                        0 #> 4                        1 #> 5                        0  ## # using data frames  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # frequency and completeness data frecomdat <- readMWRfrecom(frecompth) #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed!  # table as summary tabMWRfre(res = resdat, frecom = frecomdat, type = 'summary') #> Warning: Parameters in quality control objectives for frequency and completeness not found in results data: Chloride, Conductivity #> Warning: Parameters in results not found in quality control objectives for frequency and completeness: Air Temp, DO saturation, E.coli, Flow, Gage, Sp Conductance #> a flextable object. #> col_keys: `Type`, `Parameter`, `Number of Data Records`, `Number of Dups/Blanks/Spikes`, `Frequency %`, `Hit/Miss`  #> header has 1 row(s)  #> body has 45 row(s)  #> original dataset sample:  #>                Type Parameter Number of Data Records #> 1  Field Duplicates      <NA>                     NA #> 7              <NA>   Ammonia                    138 #> 8              <NA>     Chl a                     18 #> 9              <NA>        DO                    199 #> 10             <NA>   Nitrate                     96 #>    Number of Dups/Blanks/Spikes Frequency % Hit/Miss #> 1                            NA          NA     <NA> #> 7                             0    0.000000     MISS #> 8                             0    0.000000     MISS #> 9                             0    0.000000     MISS #> 10                            8    8.333333     MISS  # table as percent tabMWRfre(res = resdat, frecom = frecomdat, type = 'percent') #> Warning: Parameters in quality control objectives for frequency and completeness not found in results data: Chloride, Conductivity #> Warning: Parameters in results not found in quality control objectives for frequency and completeness: Air Temp, DO saturation, E.coli, Flow, Gage, Sp Conductance #> a flextable object. #> col_keys: `Parameter`, `Field Duplicate`, `Lab Duplicate`, `Field Blank`, `Lab Blank`, `Spike/Check Accuracy`  #> header has 1 row(s)  #> body has 9 row(s)  #> original dataset sample:  #>   Parameter Field Duplicate Field Duplicate_met Lab Duplicate Lab Duplicate_met #> 1   Ammonia        0.000000                   0       0.00000                 0 #> 2     Chl a        0.000000                   0       0.00000                 0 #> 3        DO        0.000000                   0       0.00000                 0 #> 4   Nitrate        8.333333                   0      11.45833                 1 #> 5   Ortho P        0.000000                   0       0.00000                 0 #>   Field Blank Field Blank_met Lab Blank Lab Blank_met Spike/Check Accuracy #> 1    5.072464               0  6.521739             1             0.000000 #> 2    0.000000               0  0.000000             0             0.000000 #> 3          NA              NA  0.000000             0             1.005025 #> 4    0.000000               0  0.000000             0             6.250000 #> 5    0.000000               0  0.000000             0             4.571429 #>   Spike/Check Accuracy_met #> 1                        0 #> 2                        0 #> 3                        0 #> 4                        1 #> 5                        0"},{"path":"https://massbays-tech.github.io/MassWateR/reference/thresholdMWR.html","id":null,"dir":"Reference","previous_headings":"","what":"Master thresholds list for analysis of results data — thresholdMWR","title":"Master thresholds list for analysis of results data — thresholdMWR","text":"Master thresholds list analysis results data","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/thresholdMWR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Master thresholds list for analysis of results data — thresholdMWR","text":"","code":"thresholdMWR"},{"path":"https://massbays-tech.github.io/MassWateR/reference/thresholdMWR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Master thresholds list for analysis of results data — thresholdMWR","text":"data.frame 28 rows 10 columns","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/thresholdMWR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Master thresholds list for analysis of results data — thresholdMWR","text":"file includes appropriate threshold values water quality parameters marine freshwater environments based state standards typical ranges Massachusetts.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/thresholdMWR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Master thresholds list for analysis of results data — thresholdMWR","text":"","code":"if (FALSE) { library(readxl) library(dplyr)  thresholdMWR <- read_excel('inst/extdata/ThresholdMapping.xlsx', na = 'NA') %>%    rename(     `Simple Parameter` = Simple_Parameter,     uom = UOM   ) %>%    mutate_if(is.numeric, round, 2)  save(thresholdMWR, file = 'data/threhsoldMWR.RData', compress = 'xz') }"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRconfint.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a results data frame for means and confidence intervals — utilMWRconfint","title":"Summarize a results data frame for means and confidence intervals — utilMWRconfint","text":"Summarize results data frame means confidence intervals","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRconfint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a results data frame for means and confidence intervals — utilMWRconfint","text":"","code":"utilMWRconfint(dat, logscl)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRconfint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a results data frame for means and confidence intervals — utilMWRconfint","text":"dat input data frame logscl logical indicating summaries log10-scale ","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRconfint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a results data frame for means and confidence intervals — utilMWRconfint","text":"summarized data frame","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRconfint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize a results data frame for means and confidence intervals — utilMWRconfint","text":"function used internally analysis functions","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRconfint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a results data frame for means and confidence intervals — utilMWRconfint","text":"","code":"library(dplyr)  # results data path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  #' # accuracy path accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx',       package = 'MassWateR')  # accuracy data accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed!  # fill BDL, AQL resdat <- utilMWRlimits(resdat = resdat, accdat = accdat, param = \"DO\")  dat <- resdat %>%    group_by(`Monitoring Location ID`)    utilMWRconfint(dat, logscl = FALSE) #> # A tibble: 49 × 4 #>    `Monitoring Location ID`    lov   hiv `Result Value` #>    <chr>                     <dbl> <dbl>          <dbl> #>  1 ABT-026                   17.6   93.4           55.5 #>  2 ABT-062                   -7.72 129.            60.5 #>  3 ABT-077                   13.2  282.           148.  #>  4 ABT-144                   -8.42 143.            67.3 #>  5 ABT-162                   41.3  133.            87.2 #>  6 ABT-237                  -11.9  184.            86.0 #>  7 ABT-301                   21.2  134.            77.8 #>  8 ABT-312                   10.7   55.0           32.9 #>  9 CND-009                   40.3  115.            77.8 #> 10 CND-036                   -2.90 116.            56.4 #> # … with 39 more rows utilMWRconfint(dat, logscl = TRUE) #> # A tibble: 49 × 4 #>    `Monitoring Location ID`    lov   hiv `Result Value` #>    <chr>                     <dbl> <dbl>          <dbl> #>  1 ABT-026                   0.520  2.68          1.18  #>  2 ABT-062                   0.394  5.90          1.53  #>  3 ABT-077                   3.61  14.7           7.28  #>  4 ABT-144                   0.350  4.85          1.30  #>  5 ABT-162                  29.4   67.3          44.5   #>  6 ABT-237                   0.324  6.24          1.42  #>  7 ABT-301                   0.549  3.34          1.35  #>  8 ABT-312                   0.303  2.35          0.843 #>  9 CND-009                   2.95  11.0           5.69  #> 10 CND-036                   0.274  4.53          1.11  #> # … with 39 more rows"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRfilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter results data by date range, site, result attributes, and/or location group — utilMWRfilter","title":"Filter results data by date range, site, result attributes, and/or location group — utilMWRfilter","text":"Filter results data date range, site, result attributes, /location group","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRfilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter results data by date range, site, result attributes, and/or location group — utilMWRfilter","text":"","code":"utilMWRfilter(   resdat,   sitdat = NULL,   param,   dtrng = NULL,   site = NULL,   resultatt = NULL,   locgroup = NULL,   alllocgroup = FALSE,   allresultatt = FALSE )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRfilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter results data by date range, site, result attributes, and/or location group — utilMWRfilter","text":"resdat results data returned readMWRresults sitdat site metadata file returned readMWRresults param character string filter results parameter \"Characteristic Name\" dtrng character string length two date ranges YYYY-MM-DD site character string sites include, default resultatt character string result attributes include, default locgroup character string location groups include \"Location Group\" column site metadata file alllocgroup logical indicating results data filtered location groups \"Location Group\" site metadata file locgroup = NULL, used anlzMWRdate allresultatt logical indicating results data filtered result attributes resultatt = NULL, used anlzMWRsite","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRfilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter results data by date range, site, result attributes, and/or location group — utilMWRfilter","text":"resdat filtered dtrng, site, resultatt, /locgroup, otherwise resdat unfiltered arguments NULL","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRfilter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter results data by date range, site, result attributes, and/or location group — utilMWRfilter","text":"","code":"# results file path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # site data path sitpth <- system.file('extdata/ExampleSites.xlsx', package = 'MassWateR')  # site data sitdat <- readMWRsites(sitpth) #> Running checks on site metadata... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for missing latitude or longitude values... OK #> \tChecking for non-numeric values in latitude... OK #> \tChecking for non-numeric values in longitude... OK #> \tChecking for positive values in longitude... OK #> \tChecking for missing entries for Monitoring Location ID... OK #>  #> All checks passed!  # filter by date utilMWRfilter(resdat, param = 'DO', dtrng = c('2021-06-01', '2021-06-30')) #> # A tibble: 37 × 14 #>    Monitori…¹ Activ…² Activity…³ Activ…⁴ Activ…⁵ Activ…⁶ Activ…⁷ Chara…⁸ Resul…⁹ #>    <chr>      <chr>   <date>     <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 ABT-062    Field … 2021-06-13 06:30   1       ft      NA      DO      8.27    #>  2 CND-110    Field … 2021-06-13 06:32   1       ft      NA      DO      4.92    #>  3 SUD-086    Field … 2021-06-13 06:35   1       ft      NA      DO      1.25    #>  4 HOP-011    Field … 2021-06-13 06:40   1       ft      NA      DO      8.56    #>  5 ABT-237    Field … 2021-06-13 06:43   1       ft      NA      DO      8.09    #>  6 SUD-096    Field … 2021-06-13 07:17   1       ft      NA      DO      2.11    #>  7 ABT-301    Field … 2021-06-13 07:18   0.5     ft      NA      DO      8.23    #>  8 CND-036    Field … 2021-06-13 07:20   1       ft      NA      DO      7.1     #>  9 DAN-013    Field … 2021-06-13 07:25   0.5     ft      NA      DO      8.81    #> 10 RVM-005    Field … 2021-06-13 07:40   1       ft      NA      DO      7.72    #> # … with 27 more rows, 5 more variables: `Result Unit` <chr>, #> #   `Quantitation Limit` <chr>, `QC Reference Value` <chr>, #> #   `Result Measure Qualifier` <chr>, `Result Attribute` <chr>, and abbreviated #> #   variable names ¹​`Monitoring Location ID`, ²​`Activity Type`, #> #   ³​`Activity Start Date`, ⁴​`Activity Start Time`, #> #   ⁵​`Activity Depth/Height Measure`, ⁶​`Activity Depth/Height Unit`, #> #   ⁷​`Activity Relative Depth Name`, ⁸​`Characteristic Name`, ⁹​`Result Value`  # filter by site utilMWRfilter(resdat, param = 'DO', site = c('ABT-026', 'ABT-062', 'ABT-077')) #> # A tibble: 17 × 14 #>    Monitori…¹ Activ…² Activity…³ Activ…⁴ Activ…⁵ Activ…⁶ Activ…⁷ Chara…⁸ Resul…⁹ #>    <chr>      <chr>   <date>     <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 ABT-026    Field … 2021-03-21 07:38   0.5     ft      NA      DO      12.28   #>  2 ABT-077    Field … 2021-03-21 09:43   1       ft      NA      DO      13.11   #>  3 ABT-026    Field … 2021-05-16 06:30   1       ft      NA      DO      8.7100… #>  4 ABT-077    Field … 2021-05-16 07:15   1       ft      NA      DO      9.44    #>  5 ABT-062    Field … 2021-06-13 06:30   1       ft      NA      DO      8.27    #>  6 ABT-026    Field … 2021-06-13 09:05   1       ft      NA      DO      7.36    #>  7 ABT-077    Field … 2021-06-13 09:15   1       ft      NA      DO      8.25    #>  8 ABT-062    Field … 2021-07-11 06:14   1       ft      NA      DO      8.9600… #>  9 ABT-026    Field … 2021-07-11 08:14   1       ft      NA      DO      7.46    #> 10 ABT-077    Field … 2021-07-11 08:55   1       ft      NA      DO      7.67    #> 11 ABT-062    Field … 2021-08-15 06:15   1       ft      NA      DO      7.24    #> 12 ABT-026    Field … 2021-08-15 08:05   1       ft      NA      DO      5.97    #> 13 ABT-077    Field … 2021-08-15 08:15   1       ft      NA      DO      7.71    #> 14 ABT-077    Field … 2021-09-12 06:54   1       ft      NA      DO      8.5500… #> 15 ABT-026    Field … 2021-09-12 09:13   1       ft      NA      DO      8.34    #> 16 ABT-026    Field … 2021-11-14 07:45   1       ft      NA      DO      10.78   #> 17 ABT-077    Field … 2021-11-14 09:35   1       ft      NA      DO      11.2    #> # … with 5 more variables: `Result Unit` <chr>, `Quantitation Limit` <chr>, #> #   `QC Reference Value` <chr>, `Result Measure Qualifier` <chr>, #> #   `Result Attribute` <chr>, and abbreviated variable names #> #   ¹​`Monitoring Location ID`, ²​`Activity Type`, ³​`Activity Start Date`, #> #   ⁴​`Activity Start Time`, ⁵​`Activity Depth/Height Measure`, #> #   ⁶​`Activity Depth/Height Unit`, ⁷​`Activity Relative Depth Name`, #> #   ⁸​`Characteristic Name`, ⁹​`Result Value`  # filter by result attribute utilMWRfilter(resdat, param = 'E.coli', resultatt = 'Dry') #> # A tibble: 120 × 14 #>    Monitori…¹ Activ…² Activity…³ Activ…⁴ Activ…⁵ Activ…⁶ Activ…⁷ Chara…⁸ Resul…⁹ #>    <chr>      <chr>   <date>     <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 CND-009    Sample… 2021-06-14 06:10   0.75    ft      NA      E.coli  60      #>  2 SUD-236    Sample… 2021-06-14 06:20   0.75    ft      NA      E.coli  90      #>  3 RVM-022    Sample… 2021-06-14 06:25   0.75    ft      NA      E.coli  280     #>  4 RME-003    Sample… 2021-06-14 06:40   0.75    ft      NA      E.coli  150     #>  5 RME-020    Sample… 2021-06-14 06:55   0.75    ft      NA      E.coli  120     #>  6 RVM-027    Sample… 2021-06-14 07:10   0.75    ft      NA      E.coli  170     #>  7 SUD-096    Sample… 2021-06-14 07:10   0.75    ft      NA      E.coli  60      #>  8 HBS-016    Sample… 2021-06-14 07:15   0.75    ft      NA      E.coli  90      #>  9 ABT-162    Sample… 2021-06-14 07:31   0.75    ft      NA      E.coli  100     #> 10 CND-110    Sample… 2021-06-14 07:35   0.75    ft      NA      E.coli  50      #> # … with 110 more rows, 5 more variables: `Result Unit` <chr>, #> #   `Quantitation Limit` <chr>, `QC Reference Value` <chr>, #> #   `Result Measure Qualifier` <chr>, `Result Attribute` <chr>, and abbreviated #> #   variable names ¹​`Monitoring Location ID`, ²​`Activity Type`, #> #   ³​`Activity Start Date`, ⁴​`Activity Start Time`, #> #   ⁵​`Activity Depth/Height Measure`, ⁶​`Activity Depth/Height Unit`, #> #   ⁷​`Activity Relative Depth Name`, ⁸​`Characteristic Name`, ⁹​`Result Value`  # filter by location group utilMWRfilter(resdat, param = 'DO', sitdat = sitdat,       locgroup = c('Concord', 'Headwater & Tribs'), dtrng = c('2021-06-01', '2021-06-30')) #> # A tibble: 12 × 15 #>    Monitori…¹ Activ…² Activity…³ Activ…⁴ Activ…⁵ Activ…⁶ Activ…⁷ Chara…⁸ Resul…⁹ #>    <chr>      <chr>   <date>     <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 CND-110    Field … 2021-06-13 06:32   1       ft      NA      DO      4.92    #>  2 HOP-011    Field … 2021-06-13 06:40   1       ft      NA      DO      8.56    #>  3 DAN-013    Field … 2021-06-13 07:25   0.5     ft      NA      DO      8.81    #>  4 RVM-005    Field … 2021-06-13 07:40   1       ft      NA      DO      7.72    #>  5 ABT-312    Field … 2021-06-13 07:57   1       ft      NA      DO      7.84    #>  6 CND-009    Field … 2021-06-13 08:00   1       ft      NA      DO      6.97    #>  7 HBS-016    Field … 2021-06-13 08:00   1       ft      NA      DO      4.43    #>  8 ELZ-004    Field … 2021-06-13 08:47   0.5     ft      NA      DO      6.86    #>  9 NSH-002    Field … 2021-06-13 09:30   1       ft      NA      DO      7.24    #> 10 NSH-047    Field … 2021-06-13 10:05   1       ft      NA      DO      6.76    #> 11 HBS-016    Field … 2021-06-14 07:15   1       ft      NA      DO      4.08    #> 12 HBS-065    Field … 2021-06-14 10:20   1       ft      NA      DO      5.84    #> # … with 6 more variables: `Result Unit` <chr>, `Quantitation Limit` <chr>, #> #   `QC Reference Value` <chr>, `Result Measure Qualifier` <chr>, #> #   `Result Attribute` <chr>, `Location Group` <chr>, and abbreviated variable #> #   names ¹​`Monitoring Location ID`, ²​`Activity Type`, ³​`Activity Start Date`, #> #   ⁴​`Activity Start Time`, ⁵​`Activity Depth/Height Measure`, #> #   ⁶​`Activity Depth/Height Unit`, ⁷​`Activity Relative Depth Name`, #> #   ⁸​`Characteristic Name`, ⁹​`Result Value`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRinput.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to import data as paths or data frames — utilMWRinput","title":"Utility function to import data as paths or data frames — utilMWRinput","text":"Utility function import data paths data frames","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRinput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to import data as paths or data frames — utilMWRinput","text":"","code":"utilMWRinput(   res = NULL,   acc = NULL,   frecom = NULL,   sit = NULL,   runchk = TRUE,   warn = TRUE )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRinput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to import data as paths or data frames — utilMWRinput","text":"res character string path results file data.frame results returned readMWRresults acc character string path data quality objectives file accuracy data.frame returned readMWRacc frecom character string path data quality objectives file frequency completeness data.frame returned readMWRfrecom sit character string path site metadata file data.frame site metadata returned readMWRsites runchk logical run data checks checkMWRresults, checkMWRacc, checkMWRfrecom, applies res, acc, frecom file paths warn logical return warnings console (default)","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRinput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to import data as paths or data frames — utilMWRinput","text":"four element list imported results, data quality objective files, site metadata file named \"resdat\", \"accdat\", \"frecomdat\", \"sitdat\", respectively.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRinput.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility function to import data as paths or data frames — utilMWRinput","text":"function used internally others import data paths relevant files data frames returned readMWRresults, readMWRacc, readMWRfrecom, readMWRsites.  former, full suite data checks can evaluated runkchk = T (default) suppressed runchk = F. arguments data files can NULL, used convenience downstream functions require .","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRinput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function to import data as paths or data frames — utilMWRinput","text":"","code":"## # using file paths  # results path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # accuracy path accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx', package = 'MassWateR')  # frequency and completeness path frecompth <- system.file('extdata/ExampleDQOFrequencyCompleteness.xlsx',       package = 'MassWateR')  # site path sitpth <- system.file('extdata/ExampleSites.xlsx', package = 'MassWateR')  inp <- utilMWRinput(res = respth, acc = accpth, frecom = frecompth, sit = sitpth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))! #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed! #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed! #> Running checks on site metadata... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for missing latitude or longitude values... OK #> \tChecking for non-numeric values in latitude... OK #> \tChecking for non-numeric values in longitude... OK #> \tChecking for positive values in longitude... OK #> \tChecking for missing entries for Monitoring Location ID... OK #>  #> All checks passed! inp$resdat #> # A tibble: 2,652 × 14 #>    Monitori…¹ Activ…² Activity…³ Activ…⁴ Activ…⁵ Activ…⁶ Activ…⁷ Chara…⁸ Resul…⁹ #>    <chr>      <chr>   <date>     <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 HBS-016    Field … 2021-01-14 09:22   3       ft      NA      Air Te… 2       #>  2 LND-007    Field … 2021-01-14 09:50   3       ft      NA      Air Te… 2       #>  3 HBS-031    Field … 2021-01-14 10:05   3       ft      NA      Air Te… 2       #>  4 HBS-057    Field … 2021-01-14 10:30   3       ft      NA      Air Te… 3       #>  5 HBS-065    Field … 2021-01-14 10:40   3       ft      NA      Air Te… 3       #>  6 CRN-002    Field … 2021-01-14 11:30   3       ft      NA      Air Te… 2       #>  7 HBS-076    Field … 2021-01-14 11:58   3       ft      NA      Air Te… 4       #>  8 HBS-085    Field … 2021-01-14 12:10   3       ft      NA      Air Te… 3.5     #>  9 HBS-095    Field … 2021-01-14 12:20   3       ft      NA      Air Te… 3       #> 10 HBS-016    Field … 2021-02-15 08:50   3       ft      NA      Air Te… 0.5     #> # … with 2,642 more rows, 5 more variables: `Result Unit` <chr>, #> #   `Quantitation Limit` <chr>, `QC Reference Value` <chr>, #> #   `Result Measure Qualifier` <chr>, `Result Attribute` <chr>, and abbreviated #> #   variable names ¹​`Monitoring Location ID`, ²​`Activity Type`, #> #   ³​`Activity Start Date`, ⁴​`Activity Start Time`, #> #   ⁵​`Activity Depth/Height Measure`, ⁶​`Activity Depth/Height Unit`, #> #   ⁷​`Activity Relative Depth Name`, ⁸​`Characteristic Name`, ⁹​`Result Value` inp$accdat #> # A tibble: 21 × 10 #>    Parameter   uom     MDL   UQL Value…¹ Field…² Lab D…³ Field…⁴ Lab B…⁵ Spike…⁶ #>    <chr>       <chr> <dbl> <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 Water Temp  deg C NA       NA all     <= 10%  <= 10%  NA      NA      NA      #>  2 pH          NA    NA       NA all     <= 0.5  <= 0.5  NA      NA      <= 0.2  #>  3 DO          mg/l   0.1     NA < 4     <= 20%  <= 20%  < 0.1   < 0.1   <= 5%   #>  4 DO          mg/l   0.1     NA >= 4    <= 10%  <= 10%  < 0.1   < 0.1   <= 5%   #>  5 Sp Conduct… uS/cm  1       NA < 250   <= 30%  <= 20%  < 25    < 25    <= 50   #>  6 Sp Conduct… uS/cm  1       NA >= 250  <= 20%  <= 10%  < 25    < 25    <= 50   #>  7 TSS         mg/l   1       NA < 3     <= 1    <= 20%  BDL     BDL     NA      #>  8 TSS         mg/l   1       NA >= 3    <= 30%  <= 20%  BDL     BDL     NA      #>  9 TP          mg/l   0.01    NA < 0.05  <= 0.02 <= 0.01 BDL     BDL     <= 0.01 #> 10 TP          mg/l   0.01    NA >= 0.05 <= 30%  <= 20%  BDL     BDL     <= 15%  #> # … with 11 more rows, and abbreviated variable names ¹​`Value Range`, #> #   ²​`Field Duplicate`, ³​`Lab Duplicate`, ⁴​`Field Blank`, ⁵​`Lab Blank`, #> #   ⁶​`Spike/Check Accuracy` inp$frecomdat #> # A tibble: 11 × 7 #>    Parameter    `Field Duplicate` Lab Duplicat…¹ Field…² Lab B…³ Spike…⁴ % Com…⁵ #>    <chr>                    <dbl>          <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 Water Temp                  10             10      NA      NA      NA      90 #>  2 pH                          10             10      NA      NA      10      90 #>  3 DO                          10             10      NA      10      10      90 #>  4 Conductivity                10             10      NA      10      10      90 #>  5 TSS                         10              5      10       5       5      90 #>  6 TP                          10              5      10       5       5      90 #>  7 Ortho P                     10              5      10       5       5      90 #>  8 Nitrate                     10              5      10       5       5      90 #>  9 Ammonia                     10              5      10       5       5      90 #> 10 Chloride                    10              5      10       5       5      90 #> 11 Chl a                       10              5      10       5       5      90 #> # … with abbreviated variable names ¹​`Lab Duplicate`, ²​`Field Blank`, #> #   ³​`Lab Blank`, ⁴​`Spike/Check Accuracy`, ⁵​`% Completeness` inp$sitdat #> # A tibble: 58 × 5 #>    `Monitoring Location ID` `Monitoring Location Name`   Monit…¹ Monit…² Locat…³ #>    <chr>                    <chr>                          <dbl>   <dbl> <chr>   #>  1 ABT-010                  477 Lowell Rd, Concord          42.5   -71.4 Lower … #>  2 ABT-026                  Rte 2, Concord                  42.5   -71.4 Lower … #>  3 ABT-033                  Rte 62, W Concord               42.5   -71.4 Lower … #>  4 ABT-044                  Rte 62 (Damonmill), W Conco…    42.5   -71.4 Lower … #>  5 ABT-047                  Damonmill dam                   42.5   -71.4 Lower … #>  6 ABT-062                  Rte 62, Acton                   42.4   -71.4 Lower … #>  7 ABT-063                  Rte 62, Acton upstream          42.4   -71.4 Lower … #>  8 ABT-077                  Rte 27/USGS, Maynard            42.4   -71.4 Lower … #>  9 ABT-095                  White Pond Rd, Stow             42.4   -71.5 Impoun… #> 10 ABT-134                  Sudbury Rd, Stow                42.4   -71.5 Impoun… #> # … with 48 more rows, and abbreviated variable names #> #   ¹​`Monitoring Location Latitude`, ²​`Monitoring Location Longitude`, #> #   ³​`Location Group`  ## # using data frames  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # accuracy data accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed!  # frequency and completeness data frecomdat <- readMWRfrecom(frecompth) #> Running checks on data quality objectives for frequency and completeness... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for non-numeric values... OK #> \tChecking for values outside of 0 and 100... OK #> \tChecking Parameter formats... OK #>  #> All checks passed!  # site data sitdat <- readMWRsites(sitpth) #> Running checks on site metadata... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking for missing latitude or longitude values... OK #> \tChecking for non-numeric values in latitude... OK #> \tChecking for non-numeric values in longitude... OK #> \tChecking for positive values in longitude... OK #> \tChecking for missing entries for Monitoring Location ID... OK #>  #> All checks passed!  inp <- utilMWRinput(res = resdat, acc = accdat, frecom = frecomdat, sit = sitdat) inp$resdat #> # A tibble: 2,652 × 14 #>    Monitori…¹ Activ…² Activity…³ Activ…⁴ Activ…⁵ Activ…⁶ Activ…⁷ Chara…⁸ Resul…⁹ #>    <chr>      <chr>   <date>     <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 HBS-016    Field … 2021-01-14 09:22   3       ft      NA      Air Te… 2       #>  2 LND-007    Field … 2021-01-14 09:50   3       ft      NA      Air Te… 2       #>  3 HBS-031    Field … 2021-01-14 10:05   3       ft      NA      Air Te… 2       #>  4 HBS-057    Field … 2021-01-14 10:30   3       ft      NA      Air Te… 3       #>  5 HBS-065    Field … 2021-01-14 10:40   3       ft      NA      Air Te… 3       #>  6 CRN-002    Field … 2021-01-14 11:30   3       ft      NA      Air Te… 2       #>  7 HBS-076    Field … 2021-01-14 11:58   3       ft      NA      Air Te… 4       #>  8 HBS-085    Field … 2021-01-14 12:10   3       ft      NA      Air Te… 3.5     #>  9 HBS-095    Field … 2021-01-14 12:20   3       ft      NA      Air Te… 3       #> 10 HBS-016    Field … 2021-02-15 08:50   3       ft      NA      Air Te… 0.5     #> # … with 2,642 more rows, 5 more variables: `Result Unit` <chr>, #> #   `Quantitation Limit` <chr>, `QC Reference Value` <chr>, #> #   `Result Measure Qualifier` <chr>, `Result Attribute` <chr>, and abbreviated #> #   variable names ¹​`Monitoring Location ID`, ²​`Activity Type`, #> #   ³​`Activity Start Date`, ⁴​`Activity Start Time`, #> #   ⁵​`Activity Depth/Height Measure`, ⁶​`Activity Depth/Height Unit`, #> #   ⁷​`Activity Relative Depth Name`, ⁸​`Characteristic Name`, ⁹​`Result Value` inp$accdat #> # A tibble: 21 × 10 #>    Parameter   uom     MDL   UQL Value…¹ Field…² Lab D…³ Field…⁴ Lab B…⁵ Spike…⁶ #>    <chr>       <chr> <dbl> <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 Water Temp  deg C NA       NA all     <= 10%  <= 10%  NA      NA      NA      #>  2 pH          NA    NA       NA all     <= 0.5  <= 0.5  NA      NA      <= 0.2  #>  3 DO          mg/l   0.1     NA < 4     <= 20%  <= 20%  < 0.1   < 0.1   <= 5%   #>  4 DO          mg/l   0.1     NA >= 4    <= 10%  <= 10%  < 0.1   < 0.1   <= 5%   #>  5 Sp Conduct… uS/cm  1       NA < 250   <= 30%  <= 20%  < 25    < 25    <= 50   #>  6 Sp Conduct… uS/cm  1       NA >= 250  <= 20%  <= 10%  < 25    < 25    <= 50   #>  7 TSS         mg/l   1       NA < 3     <= 1    <= 20%  BDL     BDL     NA      #>  8 TSS         mg/l   1       NA >= 3    <= 30%  <= 20%  BDL     BDL     NA      #>  9 TP          mg/l   0.01    NA < 0.05  <= 0.02 <= 0.01 BDL     BDL     <= 0.01 #> 10 TP          mg/l   0.01    NA >= 0.05 <= 30%  <= 20%  BDL     BDL     <= 15%  #> # … with 11 more rows, and abbreviated variable names ¹​`Value Range`, #> #   ²​`Field Duplicate`, ³​`Lab Duplicate`, ⁴​`Field Blank`, ⁵​`Lab Blank`, #> #   ⁶​`Spike/Check Accuracy` inp$frecomdat #> # A tibble: 11 × 7 #>    Parameter    `Field Duplicate` Lab Duplicat…¹ Field…² Lab B…³ Spike…⁴ % Com…⁵ #>    <chr>                    <dbl>          <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 Water Temp                  10             10      NA      NA      NA      90 #>  2 pH                          10             10      NA      NA      10      90 #>  3 DO                          10             10      NA      10      10      90 #>  4 Conductivity                10             10      NA      10      10      90 #>  5 TSS                         10              5      10       5       5      90 #>  6 TP                          10              5      10       5       5      90 #>  7 Ortho P                     10              5      10       5       5      90 #>  8 Nitrate                     10              5      10       5       5      90 #>  9 Ammonia                     10              5      10       5       5      90 #> 10 Chloride                    10              5      10       5       5      90 #> 11 Chl a                       10              5      10       5       5      90 #> # … with abbreviated variable names ¹​`Lab Duplicate`, ²​`Field Blank`, #> #   ³​`Lab Blank`, ⁴​`Spike/Check Accuracy`, ⁵​`% Completeness` inp$sitdat #> # A tibble: 58 × 5 #>    `Monitoring Location ID` `Monitoring Location Name`   Monit…¹ Monit…² Locat…³ #>    <chr>                    <chr>                          <dbl>   <dbl> <chr>   #>  1 ABT-010                  477 Lowell Rd, Concord          42.5   -71.4 Lower … #>  2 ABT-026                  Rte 2, Concord                  42.5   -71.4 Lower … #>  3 ABT-033                  Rte 62, W Concord               42.5   -71.4 Lower … #>  4 ABT-044                  Rte 62 (Damonmill), W Conco…    42.5   -71.4 Lower … #>  5 ABT-047                  Damonmill dam                   42.5   -71.4 Lower … #>  6 ABT-062                  Rte 62, Acton                   42.4   -71.4 Lower … #>  7 ABT-063                  Rte 62, Acton upstream          42.4   -71.4 Lower … #>  8 ABT-077                  Rte 27/USGS, Maynard            42.4   -71.4 Lower … #>  9 ABT-095                  White Pond Rd, Stow             42.4   -71.5 Impoun… #> 10 ABT-134                  Sudbury Rd, Stow                42.4   -71.5 Impoun… #> # … with 48 more rows, and abbreviated variable names #> #   ¹​`Monitoring Location Latitude`, ²​`Monitoring Location Longitude`, #> #   ³​`Location Group`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRlimits.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill results data as BDL or AQL with appropriate values — utilMWRlimits","title":"Fill results data as BDL or AQL with appropriate values — utilMWRlimits","text":"Fill results data BDL AQL appropriate values","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRlimits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill results data as BDL or AQL with appropriate values — utilMWRlimits","text":"","code":"utilMWRlimits(resdat, param, accdat, warn = TRUE)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRlimits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill results data as BDL or AQL with appropriate values — utilMWRlimits","text":"resdat results data returned readMWRresults param character string first filter results parameter \"Characteristic Name\" accdat data.frame data quality objectives file accuracy returned readMWRacc warn logical return warnings console (default)","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRlimits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill results data as BDL or AQL with appropriate values — utilMWRlimits","text":"resdat entries \"Result Value\" \"BDL\" \"AQL\" replaced appropriate values \"Quantitation Limit\" column, present, otherwise \"MDL\" \"UQL\" columns data quality objectives file accuracy used.  Values \"BDL\" use one half appropriate limit.","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRlimits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill results data as BDL or AQL with appropriate values — utilMWRlimits","text":"","code":"# results file path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # accuracy path accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx',       package = 'MassWateR')  # accuracy data accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed!  # apply to total phosphorus utilMWRlimits(resdat, accdat, param = 'TP') #> # A tibble: 2,126 × 14 #>    Monitori…¹ Activ…² Activity…³ Activ…⁴ Activ…⁵ Activ…⁶ Activ…⁷ Chara…⁸ Resul…⁹ #>    <chr>      <chr>   <date>     <chr>   <chr>   <chr>   <chr>   <chr>     <dbl> #>  1 NSH-002    Field … 2021-03-21 06:35   0.5     ft      NA      DO        12.7  #>  2 SUD-005    Field … 2021-03-21 06:54   0.5     ft      NA      DO        12.4  #>  3 SUD-144    Field … 2021-03-21 07:08   1       ft      NA      DO        12.7  #>  4 NSH-047    Field … 2021-03-21 07:25   0.5     ft      NA      DO        12.4  #>  5 ABT-026    Field … 2021-03-21 07:38   0.5     ft      NA      DO        12.3  #>  6 RVM-005    Field … 2021-03-21 08:05   1       ft      NA      DO        12.5  #>  7 SUD-293    Field … 2021-03-21 08:16   1       ft      NA      DO         9.32 #>  8 CND-009    Field … 2021-03-21 08:30   1       ft      NA      DO        13.2  #>  9 DAN-013    Field … 2021-03-21 08:38   0.5     ft      NA      DO        13.3  #> 10 ABT-312    Field … 2021-03-21 08:57   0.5     ft      NA      DO        13.0  #> # … with 2,116 more rows, 5 more variables: `Result Unit` <chr>, #> #   `Quantitation Limit` <chr>, `QC Reference Value` <chr>, #> #   `Result Measure Qualifier` <chr>, `Result Attribute` <chr>, and abbreviated #> #   variable names ¹​`Monitoring Location ID`, ²​`Activity Type`, #> #   ³​`Activity Start Date`, ⁴​`Activity Start Time`, #> #   ⁵​`Activity Depth/Height Measure`, ⁶​`Activity Depth/Height Unit`, #> #   ⁷​`Activity Relative Depth Name`, ⁸​`Characteristic Name`, ⁹​`Result Value`  # apply to E.coli utilMWRlimits(resdat, accdat, param = 'E.coli') #> # A tibble: 2,126 × 14 #>    Monitori…¹ Activ…² Activity…³ Activ…⁴ Activ…⁵ Activ…⁶ Activ…⁷ Chara…⁸ Resul…⁹ #>    <chr>      <chr>   <date>     <chr>   <chr>   <chr>   <chr>   <chr>     <dbl> #>  1 NSH-002    Field … 2021-03-21 06:35   0.5     ft      NA      DO        12.7  #>  2 SUD-005    Field … 2021-03-21 06:54   0.5     ft      NA      DO        12.4  #>  3 SUD-144    Field … 2021-03-21 07:08   1       ft      NA      DO        12.7  #>  4 NSH-047    Field … 2021-03-21 07:25   0.5     ft      NA      DO        12.4  #>  5 ABT-026    Field … 2021-03-21 07:38   0.5     ft      NA      DO        12.3  #>  6 RVM-005    Field … 2021-03-21 08:05   1       ft      NA      DO        12.5  #>  7 SUD-293    Field … 2021-03-21 08:16   1       ft      NA      DO         9.32 #>  8 CND-009    Field … 2021-03-21 08:30   1       ft      NA      DO        13.2  #>  9 DAN-013    Field … 2021-03-21 08:38   0.5     ft      NA      DO        13.3  #> 10 ABT-312    Field … 2021-03-21 08:57   0.5     ft      NA      DO        13.0  #> # … with 2,116 more rows, 5 more variables: `Result Unit` <chr>, #> #   `Quantitation Limit` <chr>, `QC Reference Value` <chr>, #> #   `Result Measure Qualifier` <chr>, `Result Attribute` <chr>, and abbreviated #> #   variable names ¹​`Monitoring Location ID`, ²​`Activity Type`, #> #   ³​`Activity Start Date`, ⁴​`Activity Start Time`, #> #   ⁵​`Activity Depth/Height Measure`, ⁶​`Activity Depth/Height Unit`, #> #   ⁷​`Activity Relative Depth Name`, ⁸​`Characteristic Name`, ⁹​`Result Value`"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRoutlier.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify outliers in a numeric vector — utilMWRoutlier","title":"Identify outliers in a numeric vector — utilMWRoutlier","text":"Identify outliers numeric vector","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRoutlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify outliers in a numeric vector — utilMWRoutlier","text":"","code":"utilMWRoutlier(x, logscl)"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRoutlier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify outliers in a numeric vector — utilMWRoutlier","text":"x numeric vector length logscl logical indicate vector log10-transformed first","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRoutlier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify outliers in a numeric vector — utilMWRoutlier","text":"logical vector equal length x indicating TRUE outliers FALSE within normal range","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRoutlier.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify outliers in a numeric vector — utilMWRoutlier","text":"Outliers identified 1.5 times interquartile range","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRoutlier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify outliers in a numeric vector — utilMWRoutlier","text":"","code":"x <- rnorm(20) utilMWRoutlier(x, logscl = FALSE) #>  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> [13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRthresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Get threshold lines from thresholdMWR — utilMWRthresh","title":"Get threshold lines from thresholdMWR — utilMWRthresh","text":"Get threshold lines thresholdMWR","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRthresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get threshold lines from thresholdMWR — utilMWRthresh","text":"","code":"utilMWRthresh(resdat, param, thresh = c(\"fresh\", \"marine\", \"none\"))"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRthresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get threshold lines from thresholdMWR — utilMWRthresh","text":"resdat results data returned readMWRresults param character string first filter results parameter \"Characteristic Name\" thresh character indicating relevant freshwater marine threshold lines included, one \"fresh\", \"marine\", \"none\"","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRthresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get threshold lines from thresholdMWR — utilMWRthresh","text":"thresholds available param, data.frame relevant marine freshwater thresholds, otherwise NULL","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRthresh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get threshold lines from thresholdMWR — utilMWRthresh","text":"","code":"# results file path respth <- system.file('extdata/ExampleResults.xlsx', package = 'MassWateR')  # results data resdat <- readMWRresults(respth) #> Running checks on results data... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking valid Activity Types... OK #> \tChecking Activity Start Date formats... OK #> \tChecking Activity Start Time formats... OK #> \tChecking for non-numeric values in Activity Depth/Height Measure... OK #> \tChecking Activity Depth/Height Unit... OK #> \tChecking values in Activity Depth/Height Measure > 1 m / 3.3 ft... OK #> \tChecking Activity Relative Depth Name formats... OK #> Warning: \tChecking Characteristic Name formats... #> \tCharacteristic Name not used for quality control: Air Temp, Gage #> \tChecking Characteristic Name formats... WARNING #> \tChecking Result Values... OK #> \tChecking QC Reference Values... OK #> \tChecking for missing entries for Result Unit... OK #> \tChecking if more than one unit per Characteristic Name... OK #> \tChecking acceptable units for each entry in Characteristic Name... OK #>  #> All checks passed (1 WARNING(s))!  # get threshold lines utilMWRthresh(resdat = resdat, param = 'E.coli', thresh = 'fresh') #> # A tibble: 2 × 5 #>   num   thresh label                        size linetype #>   <chr>  <dbl> <fct>                       <dbl> <chr>    #> 1 2       1260 STV Secondary contact (EPA)  0.75 dashed   #> 2 1        235 BAV Primary contact (EPA)    0.73 longdash"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRtitle.html","id":null,"dir":"Reference","previous_headings":"","what":"Format the title for analyze functions — utilMWRtitle","title":"Format the title for analyze functions — utilMWRtitle","text":"Format title analyze functions","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRtitle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format the title for analyze functions — utilMWRtitle","text":"","code":"utilMWRtitle(   param,   site = NULL,   dtrng = NULL,   resultatt = NULL,   locgroup = NULL )"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRtitle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format the title for analyze functions — utilMWRtitle","text":"param character string parameter plot site character string sites include dtrng character string length two date ranges YYYY-MM-DD resultatt character string result attributes plot locgroup character string location groups plot \"Location Group\" column site metadata file","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRtitle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format the title for analyze functions — utilMWRtitle","text":"formatted character used title analysis plots","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRtitle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format the title for analyze functions — utilMWRtitle","text":"arguments optional except param, appropriate text strings appended param argument optional arguments indicating level filtering used plot","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRtitle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format the title for analyze functions — utilMWRtitle","text":"","code":"# no filters utilMWRtitle(param = 'DO') #> [1] \"DO\"  # filter by date only utilMWRtitle(param = 'DO', dtrng = c('2021-05-01', '2021-07-31')) #> [1] \"DO, data filtered by dates (1 May, 2021 to 31 July, 2021)\"  # filter by all utilMWRtitle(param = 'DO', site = 'test', dtrng = c('2021-05-01', '2021-07-31'),       resultatt = 'test', locgroup = 'test') #> [1] \"DO, data filtered by sites, dates (1 May, 2021 to 31 July, 2021), result attributes, location groups\""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRyscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Get logical value for y axis scaling — utilMWRyscale","title":"Get logical value for y axis scaling — utilMWRyscale","text":"Get logical value y axis scaling","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRyscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get logical value for y axis scaling — utilMWRyscale","text":"","code":"utilMWRyscale(accdat, param, yscl = c(\"auto\", \"log\", \"linear\"))"},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRyscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get logical value for y axis scaling — utilMWRyscale","text":"accdat data.frame data quality objectives file accuracy returned readMWRacc param character string first filter results parameter \"Characteristic Name\" yscl character indicating one \"auto\" (default), \"log\", \"linear\", see details","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRyscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get logical value for y axis scaling — utilMWRyscale","text":"logical value indicating TRUE log10-scale, FALSE arithmetic (linear)","code":""},{"path":"https://massbays-tech.github.io/MassWateR/reference/utilMWRyscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get logical value for y axis scaling — utilMWRyscale","text":"","code":"# accuracy path accpth <- system.file('extdata/ExampleDQOAccuracy.xlsx',       package = 'MassWateR')  # accuracy data accdat <- readMWRacc(accpth) #> Running checks on data quality objectives for accuracy... #> \tChecking column names... OK #> \tChecking all required columns are present... OK #> \tChecking column types... OK #> \tChecking for text other than <=, ≤, <, >=, ≥, >, ±, %, AQL, BQL, log, or all... OK #> \tChecking Parameter formats... OK #> \tChecking for missing entries for unit (uom)... OK #> \tChecking if more than one unit (uom) per Parameter... OK #> \tChecking acceptable units (uom) for each entry in Parameter... OK #>  #> All checks passed!  # log auto utilMWRyscale(accdat, param = 'E.coli') #> [1] TRUE  # linear force utilMWRyscale(accdat, param = 'E.coli', yscl = 'linear') #> [1] FALSE  # linear auto utilMWRyscale(accdat, param = 'DO') #> [1] FALSE  # log force utilMWRyscale(accdat, param = 'DO', yscl = 'log') #> [1] TRUE"}]
